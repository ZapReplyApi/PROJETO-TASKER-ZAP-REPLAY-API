<TaskerData sr="" dvi="1" tv="6.6.0-beta">
	<dmetric>1080.0,2261.0</dmetric>
	<Profile sr="prof177" ve="2">
		<cdate>1749673934676</cdate>
		<clp>true</clp>
		<edate>1751569749045</edate>
		<flags>8</flags>
		<id>177</id>
		<limit>true</limit>
		<mid0>183</mid0>
		<nme>001-BAIXAR-ICONES [ zap-replay-api ] v(1.0)</nme>
		<Time sr="con0">
			<fromvar>%next_task_time</fromvar>
			<tovar>%next_task_time</tovar>
		</Time>
		<ProfileVariable sr="pv0">
			<clearout>true</clearout>
			<exportval></exportval>
			<immutable>false</immutable>
			<pvci>true</pvci>
			<pvd></pvd>
			<pvdn></pvdn>
			<pvid>177</pvid>
			<pvit>pr</pvit>
			<pvn>%next_task_time</pvn>
			<pvt>t</pvt>
			<pvv>05.00</pvv>
			<strout>true</strout>
		</ProfileVariable>
	</Profile>
	<Profile sr="prof274" ve="2">
		<cdate>1750425861718</cdate>
		<clp>true</clp>
		<edate>1751569661503</edate>
		<flags>8</flags>
		<id>274</id>
		<limit>true</limit>
		<mid0>276</mid0>
		<nme>002-RECONECTAR [ zap-replay-api ] v(1.0)</nme>
		<Event sr="con0" ve="2">
			<code>411</code>
			<pri>0</pri>
		</Event>
	</Profile>
	<Profile sr="prof639" ve="2">
		<cdate>1751530430035</cdate>
		<clp>true</clp>
		<edate>1751569754896</edate>
		<flags>8</flags>
		<id>639</id>
		<limit>true</limit>
		<mid0>4080</mid0>
		<nme>004- CENTRAL-DE-ATUALIZACOES [ zap-replay-api ] v(1.0)</nme>
		<Time sr="con0">
			<fromvar>%scheduled_time</fromvar>
			<tovar>%scheduled_time</tovar>
		</Time>
	</Profile>
	<Profile sr="prof64" ve="2">
		<cdate>1748043234117</cdate>
		<edate>1751569766892</edate>
		<flags>8</flags>
		<id>64</id>
		<limit>true</limit>
		<mid0>5001</mid0>
		<nme>003-RECEBER_MENSAGENS [ zap-replay-api ] v(1.0)</nme>
		<Event sr="con0" ve="2">
			<code>2089</code>
			<pri>0</pri>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_request_files()
Arquivos
&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_request_headers()
Cabeçalhos
&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_request_path
Caminho
&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_request_body
Corpo
&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_request_ip_address_v4
Endereço IP v4
&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_request_id
ID da Requisição
&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES6&gt;%http_request_method
Método
&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES6&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES7&gt;%http_request_multipart_names()
Nomes Multipartes
&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES7&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES8&gt;%http_request_port
Porta
&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES8&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES9&gt;%http_request_multipart_types()
Tipos Multipartes
&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES9&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES10&gt;%http_request_multipart_values()
Valores Multipartes
&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES10&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="3129"/>
			<Str sr="arg2" ve="3">POST</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3">Ok</Str>
			<Int sr="arg5" val="10"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
		</Event>
	</Profile>
	<Project sr="proj0" ve="2">
		<cdate>1748043215165</cdate>
		<name>ZAP_RAPLY_API v(1.0)</name>
		<pids>639,274,64,177</pids>
		<psort>Alpha</psort>
		<scenes>003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0),002-CENA-INSTALACAO [ zap-replay-api ] v(1.0),005-ATUALIZACOES [ zap-replay-api ] v(1.0),001-CENA-MENU-INICIAL [ zap-replay-api ] v(1.0),004-CONFIRMAR-CONEXAO [ zap-replay-api ] v(1.0),005-DESCONECTAR-USUARIO [ zap-replay-api ] v(1.0),INFORMACOES_GRUPOS [ zap-replay-api ] v(1.0)</scenes>
		<tids>335,276,896,4080,189,5001,268,348,183,269,278,174,61,272,92,340,192,858,270,176</tids>
		<Img sr="icon" ve="2">
			<fle>/storage/emulated/0/Tasker/termux/zap-replay-api/icones/icon-logo.png</fle>
		</Img>
		<ProfileVariable sr="pv0">
			<clearout>false</clearout>
			<exportval></exportval>
			<immutable>false</immutable>
			<pvci>true</pvci>
			<pvd></pvd>
			<pvdn></pvdn>
			<pvid>47</pvid>
			<pvit>pj</pvit>
			<pvn>%users</pvn>
			<pvt>t</pvt>
			<strout>true</strout>
		</ProfileVariable>
		<ProfileVariable sr="pv1">
			<clearout>true</clearout>
			<exportval></exportval>
			<immutable>false</immutable>
			<pvci>true</pvci>
			<pvd></pvd>
			<pvdn></pvdn>
			<pvid>47</pvid>
			<pvit>pj</pvit>
			<pvn>%scheduled_time</pvn>
			<pvt>t</pvt>
			<pvv>06.00</pvv>
			<strout>true</strout>
		</ProfileVariable>
	</Project>
	<Scene sr="scene001-CENA-MENU-INICIAL [ zap-replay-api ] v(1.0)">
		<cdate>1748109788723</cdate>
		<edate>1751418918642</edate>
		<heightLand>-1</heightLand>
		<heightPort>2400</heightPort>
		<nme>001-CENA-MENU-INICIAL [ zap-replay-api ] v(1.0)</nme>
		<widthLand>-1</widthLand>
		<widthPort>1080</widthPort>
		<WebElement sr="elements0" ve="2">
			<flags>6</flags>
			<geom>0,0,1079,2400,-1,-1,-1,-1</geom>
			<linkclickTask>189</linkclickTask>
			<Str sr="arg0" ve="3">001-INSTALACAO [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1" val="2"/>
			<Str sr="arg2" ve="3">&lt;!doctype html&gt;
&lt;html lang="pt-BR"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8" /&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0" /&gt;
    &lt;title&gt;Configuração ZAP-REPLY-API&lt;/title&gt;
    &lt;link rel="stylesheet" href="%project_path/css/index.css" /&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class="container"&gt;
        &lt;header class="header"&gt;
            &lt;h1&gt;ZAP-REPLY-API&lt;/h1&gt;
            &lt;button type="button" class="donate-button"&gt;DOAR ☕&lt;/button&gt;
        &lt;/header&gt;

        &lt;main class="main"&gt;
            &lt;form id="form" aria-labelledby="form-title"&gt;
                &lt;!-- Seção de telefone --&gt;
                &lt;fieldset class="form-section"&gt;
                    &lt;legend&gt;Telefone para vincular ao WhatsApp Web&lt;/legend&gt;
                    &lt;div class="input-wrapper"&gt;
                        &lt;div class="input-icon-container"&gt;
                            &lt;img src="https://cdn-icons-png.flaticon.com/512/174/174879.png" alt="Ícone WhatsApp" class="input-icon whatsapp-icon" /&gt;
                            &lt;input class="inputTel" type="tel" id="phone" name="phone" pattern="\d{2} \d{2} \d{8}" placeholder="Digite o telefone (12 dígitos)" maxlength="14" required /&gt;
                            &lt;img src="https://cdn-icons-png.freepik.com/256/5521/5521112.png?semt=ais_hybrid" alt="Ícone telefone" class="input-icon phone-icon" /&gt;
                        &lt;/div&gt;
                        &lt;div class="form-feedback"&gt;
                            &lt;p id="phoneError" class="error-message" hidden&gt;Número inválido. O número de telefone deve conter 12 dígitos sem o nono dígito Ex: 55 (81) 3677-6885&lt;/p&gt;
                            &lt;p id="phoneValid" class="success-message" hidden&gt;Número válido!&lt;/p&gt;
                        &lt;/div&gt;
                    &lt;/div&gt;
                &lt;/fieldset&gt;

                &lt;!-- Seção de portas --&gt;
                &lt;fieldset class="form-section"&gt;
                    &lt;legend&gt;Escolha uma porta&lt;/legend&gt;
                    &lt;div class="ports-selection"&gt;
                        &lt;input type="number" id="portSearch" maxlength="4" placeholder="(4 dígitos)"&gt;
                        &lt;p id="portSearchError" class="error-message" hidden&gt;A porta não pode ser utilizada.&lt;/p&gt;
                        &lt;div id="ports" class="ports-grid" role="radiogroup" aria-labelledby="port-label"&gt;&lt;/div&gt;
                        &lt;p id="portsError" class="error-message" hidden&gt;Por favor, selecione uma porta&lt;/p&gt;
                        &lt;div id="selectedPort" class="selected-port"&gt;&lt;/div&gt;
                    &lt;/div&gt;
                &lt;/fieldset&gt;

                &lt;!-- Modo de Operação --&gt;
                &lt;fieldset class="form-section"&gt;
                    &lt;legend&gt;Modo de Envio&lt;/legend&gt;
                    &lt;div class="radio-group"&gt;
                        &lt;input type="radio" id="enviar" name="modo_op" value="send" required /&gt;
                        &lt;label for="enviar" class="mode-label"&gt;Só Enviar &lt;span class="info-icon" data-mode="enviar"&gt;?&lt;/span&gt;&lt;/label&gt;
                    &lt;/div&gt;
                    &lt;div class="radio-group"&gt;
                        &lt;input type="radio" id="enviarReceber" name="modo_op" value="send and receive" /&gt;
                        &lt;label for="enviarReceber" class="mode-label"&gt;Enviar e Receber &lt;span class="info-icon" data-mode="enviarReceber"&gt;?&lt;/span&gt;&lt;/label&gt;
                    &lt;/div&gt;
                    &lt;div class="radio-group"&gt;
                        &lt;input type="checkbox" id="reset" name="reset" /&gt;
                        &lt;label for="reset" class="mode-label"&gt;Reset &lt;span class="info-icon" data-mode="reset"&gt;?&lt;/span&gt;&lt;/label&gt;
                    &lt;/div&gt;
                &lt;/fieldset&gt;

                &lt;button type="submit" class="submit-button"&gt;
                    &lt;img src="/storage/emulated/0/Tasker/termux/zap-replay-api/icones/icon-logo.png" alt="Conectar" class="submit-icon" /&gt;
                &lt;/button&gt;
            &lt;/form&gt;
        &lt;/main&gt;

        &lt;div class="developer-section"&gt;
            &lt;p&gt;Desenvolvedor: &lt;span class="developer-name"&gt;Andredye Oliveira&lt;/span&gt;&lt;/p&gt;
        &lt;/div&gt;

        &lt;footer class="footer"&gt;
            &lt;p&gt;© 2025 ZAP-REPLY-API. Todos os direitos&lt;/p&gt;
        &lt;/footer&gt;
    &lt;/div&gt;

    &lt;div id="modeModal" class="modal"&gt;
        &lt;div class="modal-content"&gt;
            &lt;p id="modeDescription"&gt;
                &lt;span data-mode="enviar" class="mode-desc"&gt;Permite apenas o envio de mensagens.&lt;/span&gt;
                &lt;span data-mode="enviarReceber" class="mode-desc" style="display: none;"&gt;Permite enviar e receber mensagens.&lt;/span&gt;
                &lt;span data-mode="reset" class="mode-desc" style="display: none;"&gt;Reinicia as configurações do sistema.&lt;/span&gt;
            &lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;

    &lt;div id="donateModal" class="modal"&gt;
        &lt;div class="modal-content"&gt;
            &lt;p&gt;Este aplicativo é oferecido como doação, mas se ele for útil para você, considere fazer uma contribuição voluntária para apoiar o desenvolvedor e manter o projeto.&lt;/p&gt;
            &lt;p id="pixType" class="pix-type"&gt;&lt;/p&gt;
            &lt;input type="text" id="pixInput" value="4235699f-4f6d-4104-a606-0db799cd8a5b" readonly /&gt;
            &lt;button class="copy-button"&gt;Copiar PIX&lt;/button&gt;
        &lt;/div&gt;
    &lt;/div&gt;

    &lt;script src="%project_path/js/index.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</Str>
			<Int sr="arg3" val="1"/>
			<Int sr="arg4" val="1"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Int sr="arg7" val="1"/>
			<Str sr="arg8" ve="3"/>
			<LinkClickFilter sr="filter0"/>
		</WebElement>
		<PropertiesElement sr="props">
			<keyTask>174</keyTask>
			<Int sr="arg0" val="1"/>
			<Int sr="arg1" val="0"/>
			<Str sr="arg2" ve="3">#00FFFFFF</Str>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3">001-CENA-INSTALACAO [ zap-replay-api ] v(1.0)</Str>
			<Str sr="arg5" ve="3"/>
			<Img sr="arg6" ve="2"/>
			<Str sr="arg7" ve="3"/>
			<LinkClickFilter sr="filter0">
				<urlMatch>back</urlMatch>
			</LinkClickFilter>
		</PropertiesElement>
	</Scene>
	<Scene sr="scene002-CENA-INSTALACAO [ zap-replay-api ] v(1.0)">
		<cdate>1749750720045</cdate>
		<edate>1750627258521</edate>
		<heightLand>-1</heightLand>
		<heightPort>2400</heightPort>
		<nme>002-CENA-INSTALACAO [ zap-replay-api ] v(1.0)</nme>
		<widthLand>-1</widthLand>
		<widthPort>1080</widthPort>
		<EditTextElement sr="elements0" ve="3">
			<flags>4</flags>
			<geom>0,0,1078,2400,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Termux-inf</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="15"/>
			<Int sr="arg3" val="104"/>
			<Str sr="arg4" ve="3">#FF0028FF</Str>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="1000"/>
			<RectElement sr="background">
				<flags>4</flags>
				<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
				<Str sr="arg0" ve="3"/>
				<Int sr="arg1" val="0"/>
				<Str sr="arg2" ve="3"/>
				<Str sr="arg3" ve="3"/>
				<Int sr="arg4" val="0"/>
				<Str sr="arg5" ve="3">#FF000000</Str>
				<Int sr="arg6" val="0"/>
				<Int sr="arg7" val="0"/>
			</RectElement>
		</EditTextElement>
		<WebElement sr="elements1" ve="2">
			<flags>4</flags>
			<geom>0,0,1078,2400,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">002-CENA-INSTALACAO [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1" val="2"/>
			<Str sr="arg2" ve="3">&lt;!DOCTYPE html&gt;
&lt;html lang="pt-BR"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;title&gt;ZapReplyApi - Instalação&lt;/title&gt;
    &lt;link rel="stylesheet" href="%project_path/css/index.css"&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;header&gt;
        &lt;h1&gt;ZapReplyApi&lt;/h1&gt;
    &lt;/header&gt;
    &lt;div class="button-container"&gt;
        &lt;button class="background-btn"&gt;Segundo Plano&lt;/button&gt;
    &lt;/div&gt;
    &lt;main&gt;
        &lt;div class="install-image"&gt;
            &lt;img src="/storage/emulated/0/Tasker/termux/zap-replay-api/icones/icon-start.gif" alt="Imagem de Instalação"&gt;
        &lt;/div&gt;
    &lt;/main&gt;
    &lt;footer&gt;
        &lt;p class="developer"&gt;Desenvolvido por &lt;span class="developer-name"&gt;Andredye Oliveira&lt;/span&gt;&lt;/p&gt;
        &lt;p&gt;© 2025 Todos os direitos reservados&lt;/p&gt;
    &lt;/footer&gt;
    &lt;script src="%project_path/js/index.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</Str>
			<Int sr="arg3" val="1"/>
			<Int sr="arg4" val="1"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Int sr="arg7" val="1"/>
			<Str sr="arg8" ve="3"/>
			<RectElement sr="background">
				<flags>4</flags>
				<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
				<Str sr="arg0" ve="3"/>
				<Int sr="arg1" val="0"/>
				<Str sr="arg2" ve="3">#D4000000</Str>
				<Str sr="arg3" ve="3"/>
				<Int sr="arg4" val="0"/>
				<Str sr="arg5" ve="3">#FF000000</Str>
				<Int sr="arg6" val="0"/>
				<Int sr="arg7" val="0"/>
			</RectElement>
		</WebElement>
		<WebElement sr="elements2" ve="2">
			<flags>4</flags>
			<geom>2,1492,1075,908,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Barra De Progresso</Str>
			<Int sr="arg1" val="2"/>
			<Str sr="arg2" ve="3">&lt;!DOCTYPE html&gt;
&lt;html lang="pt-BR"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;title&gt;ZapReplyApi - Progresso&lt;/title&gt;
    &lt;style&gt;
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        :root {
            --torea-bay: #0d23b3;
            --denim: #1a66c9;
            --picton-blue: #49cee4;
            --botticelli: #d3e3ea;
            --curious-blue: #2593db;
            --ship-cove: #7185c3;
            --victoria: #4c4e94;
            --text-color: #555;
            --developer-color: #2593db;
            --success-green: #28a745;
        }

        body {
            font-family: 'Arial', sans-serif;
            background-color: transparent;
            color: var(--text-color);
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            min-height: 100vh;
            padding: 1rem;
        }

        .progress-container {
            width: 80%;
            max-width: 400px;
            text-align: center;
            color: var(--text-color);
            display: flex;
            flex-direction: column;
            align-items: center;
        }

        .progress-container h2 {
            font-size: 1.2rem;
            margin-bottom: 0.5rem;
            color: var(--victoria);
            animation: beat-text 2s ease-in-out infinite;
            font-weight: bold;
        }

        .completion-title {
            font-size: 1rem;
            color: var(--success-green);
            font-weight: bold;
            margin-top: 10px;
            animation: beat-text 2s ease-in-out infinite;
            display: none;
        }

        @keyframes beat-text {
            0%, 100% {
                transform: scale(1);
            }
            50% {
                transform: scale(1.05);
            }
        }

        .progress-bar {
            width: 100%;
            height: 12px;
            background-color: var(--ship-cove);
            border-radius: 10px;
            overflow: hidden;
            margin: 10px 0;
            position: relative;
        }

        .progress-bar div {
            height: 100%;
            width: 0;
            border-radius: 10px;
            position: relative;
            overflow: hidden;
            transition: width 0.6s ease-in-out;
        }

        .progress-bar div::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: linear-gradient(
                90deg,
                transparent,
                rgba(255, 255, 255, 0.4),
                transparent
            );
            animation: shimmer 1.5s infinite;
        }

        @keyframes shimmer {
            0% {
                transform: translateX(-100%);
            }
            100% {
                transform: translateX(100%);
            }
        }

        .progress-percentage {
            font-size: 1.2rem;
            font-weight: bold;
            color: var(--denim);
        }

        .completion-image {
            width: 200px;
            height: 200px;
            margin-top: 10px;
            display: none;
        }

        @media (max-width: 768px) {
            .progress-container h2 {
                font-size: 1rem;
            }

            .progress-percentage {
                font-size: 1rem;
            }

            .completion-title {
                font-size: 0.9rem;
            }
        }

        @media (max-width: 480px) {
            .progress-container {
                width: 90%;
            }

            .progress-container h2 {
                font-size: 0.9rem;
            }

            .completion-title {
                font-size: 0.8rem;
            }
        }
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class="progress-container"&gt;
        &lt;h2 class="install-message"&gt;Aguarde enquanto faço a instalação&lt;/h2&gt;
        &lt;div class="progress-bar"&gt;
            &lt;div&gt;&lt;/div&gt;
        &lt;/div&gt;
        &lt;div class="progress-percentage"&gt;0%&lt;/div&gt;
        &lt;div class="completion-title"&gt;Instalação Concluída!&lt;/div&gt;
        &lt;img class="completion-image" src="/storage/emulated/0/Tasker/termux/zap-replay-api/icones/icon-install-complete.gif" alt="Concluído"&gt;
    &lt;/div&gt;
    &lt;script&gt;
        let monitoredVariable = "%logs_progresso(&lt;)";

        const updateProgressBar = () =&gt; {
            const progressMatch = monitoredVariable.match(/(\d+\.\d+)%/);
            if (!progressMatch) return;

            const progress = parseFloat(progressMatch[1]);
            const progressBar = document.querySelector(".progress-bar div");
            const progressText = document.querySelector(".progress-percentage");
            const completionTitle = document.querySelector(".completion-title");
            const completionImage = document.querySelector(".completion-image");
            const installMessage = document.querySelector(".install-message");

            const colors = [
                "#8B0000", // (0%-10%)
                "#A52A2A", // (10%-20%)
                "#C71585", // (20%-30%)
                "#4B0082", // (30%-40%)
                "#7185c3", // (40%-50%)
                "#49cee4", // (50%-60%)
                "#2593db", // (60%-70%)
                "#1a66c9", // (70%-80%)
                "#0d23b3", // (80%-90%)
                "#00008B"  // (90%-100%)
            ];

            const colorIndex = Math.min(Math.floor(progress / 10), 9);
            progressBar.style.backgroundColor = colors[colorIndex];
            progressBar.style.width = progress + "%";
            progressText.textContent = progress.toFixed(2) + "%";

            const isComplete = progress === 100;
            installMessage.style.display = isComplete ? "none" : "block";
            completionTitle.style.display = isComplete ? "block" : "none";
            completionImage.style.display = isComplete ? "block" : "none";
        };

        updateProgressBar();
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</Str>
			<Int sr="arg3" val="1"/>
			<Int sr="arg4" val="1"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Int sr="arg7" val="1"/>
			<Str sr="arg8" ve="3"/>
		</WebElement>
		<PropertiesElement sr="props">
			<keyTask>269</keyTask>
			<Int sr="arg0" val="1"/>
			<Int sr="arg1" val="0"/>
			<Str sr="arg2" ve="3">#FF000000</Str>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3">002-CENA-INSTALACAO [ zap-replay-api ] v(1.0)</Str>
			<Str sr="arg5" ve="3"/>
			<Img sr="arg6" ve="2"/>
			<Str sr="arg7" ve="3"/>
			<LinkClickFilter sr="filter0">
				<urlMatch>back</urlMatch>
			</LinkClickFilter>
		</PropertiesElement>
	</Scene>
	<Scene sr="scene003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)">
		<cdate>1749750720045</cdate>
		<edate>1750914189671</edate>
		<heightLand>-1</heightLand>
		<heightPort>2400</heightPort>
		<nme>003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</nme>
		<widthLand>-1</widthLand>
		<widthPort>1080</widthPort>
		<WebElement sr="elements0" ve="2">
			<flags>6</flags>
			<geom>0,0,1079,2400,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Exibir Informações Gerais</Str>
			<Int sr="arg1" val="2"/>
			<Str sr="arg2" ve="3">&lt;!DOCTYPE html&gt;
&lt;html lang="en"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;title&gt;Information Box&lt;/title&gt;
    &lt;style&gt;
        :root {
            --torea-bay: #0d23b3; /* Cor predominante, usada no container */
            --text-color: #ffffff; /* Cor do texto para h1 e h2 */
            --textDisplayColor: %color_text; /* Cor do texto apenas para .box */
            --containerBackgroundColor: var(--torea-bay); /* Cor de fundo predominante */
            --marginPosition: %margin; /* Valores possíveis: top, center, low */
        }

        body {
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: var(--marginPosition); /* Usa a variável de posição */
            margin: 0;
            padding: 0;
            height: 100vh;
            background-color: transparent;
        }

        .container {
            display: flex;
            flex-direction: column;
            align-items: center;
            width: 100%;
        }

        h1, h2 {
            font-size: 18px;
            font-weight: bold;
            color: var(--text-color); /* Usa a cor padrão para o texto de h1 e h2 */
            background-color: var(--containerBackgroundColor); /* Fundo predominante */
            width: 50%;
            text-align: center;
            border-radius: 10px;
            padding: 10px;
            margin: 5px 0;
        }

        .box {
            color: var(--textDisplayColor); /* Cor específica para o texto da .box */
            padding: 20px;
            border: 2px solid #333;
            background-color: var(--containerBackgroundColor); /* Fundo predominante */
            text-align: center;
            font-size: 18px;
            font-weight: bold;
            border-radius: 10px;
            width: auto;
        }

        .button-container {
            margin-top: 10px;
            display: none; /* Inicialmente oculto */
            flex-direction: column;
            align-items: center;
            width: 50%; /* Alinha com a largura de h1 e h2 */
        }

        .button-container.show {
            display: flex;
        }

        .buttons {
            display: flex;
            gap: 15px;
            justify-content: center;
        }

        button {
            padding: 12px 30px;
            font-size: 16px;
            font-weight: bold;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            background: linear-gradient(145deg, #ffffff, #e6e6e6); /* Gradiente para efeito 3D */
            color: var(--torea-bay);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2), 0 6px 20px rgba(0, 0, 0, 0.15); /* Sombra 3D */
            transition: transform 0.2s, box-shadow 0.2s, background 0.2s;
        }

        button:hover {
            background: linear-gradient(145deg, #e6e6e6, #ffffff); /* Inverte gradiente no hover */
            transform: translateY(-2px); /* Levanta o botão */
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.25), 0 8px 25px rgba(0, 0, 0, 0.2);
            color: var(--torea-bay);
        }

        button:active {
            transform: translateY(0); /* Volta à posição original ao clicar */
            box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
        }
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class="container"&gt;
        &lt;h1&gt;ZapReplayApi&lt;/h1&gt;
        &lt;div class="box"&gt;
            %text
        &lt;/div&gt;
        &lt;h2&gt;ZapReplayApi&lt;/h2&gt;
        &lt;div class="button-container" id="buttonContainer"&gt;
            &lt;div class="buttons"&gt;
                &lt;button onclick="alertSim()"&gt;Sim&lt;/button&gt;
                &lt;button onclick="alertNao()"&gt;Não&lt;/button&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;

    &lt;script&gt;
        const numberExist = "%buttons"; // Valor de exemplo; substitua conforme necessário
        const buttonContainer = document.getElementById("buttonContainer");

        // Verifica se numberExist é diferente de "*"
        if (numberExist !== "*") {
            buttonContainer.classList.add("show"); // Mostra os botões
        }

        // Função para o alerta do botão Sim
        function alertSim() {
            ///alert('Você clicou em Sim');
            tk.setLocal("number_exist","true");
            tk.destroyScene('003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)');
        }

        // Função para o alerta do botão Não
        function alertNao() {
            ///alert('Você clicou em Não');
            tk.setLocal("number_exist","false");
            tk.destroyScene('003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)');
        }
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</Str>
			<Int sr="arg3" val="1"/>
			<Int sr="arg4" val="1"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Int sr="arg7" val="1"/>
			<Str sr="arg8" ve="3"/>
		</WebElement>
		<PropertiesElement sr="props">
			<keyTask>192</keyTask>
			<Int sr="arg0" val="1"/>
			<Int sr="arg1" val="0"/>
			<Str sr="arg2" ve="3">#00000000</Str>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3">002-CENA-INSTALACAO [ zap-replay-api ] v(1.0)</Str>
			<Str sr="arg5" ve="3"/>
			<Img sr="arg6" ve="2"/>
			<Str sr="arg7" ve="3"/>
			<LinkClickFilter sr="filter0">
				<urlMatch>back</urlMatch>
			</LinkClickFilter>
		</PropertiesElement>
	</Scene>
	<Scene sr="scene004-CONFIRMAR-CONEXAO [ zap-replay-api ] v(1.0)">
		<cdate>1749957655382</cdate>
		<edate>1750698075178</edate>
		<heightLand>-1</heightLand>
		<heightPort>2400</heightPort>
		<nme>004-CONFIRMAR-CONEXAO [ zap-replay-api ] v(1.0)</nme>
		<widthLand>-1</widthLand>
		<widthPort>1080</widthPort>
		<WebElement sr="elements0" ve="2">
			<flags>6</flags>
			<geom>0,0,1079,2400,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">Confimar Conexao</Str>
			<Int sr="arg1" val="2"/>
			<Str sr="arg2" ve="3">&lt;!DOCTYPE html&gt;
&lt;html lang="pt-BR"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;title&gt;Exibir Usuário&lt;/title&gt;
    &lt;link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600;700&amp;display=swap" rel="stylesheet"&gt;
    &lt;style&gt;
        :root {
            --torea-bay: #0d23b3;
            --denim: #1a66c9;
            --picton-blue: #49cee4;
            --botticelli: #e6edf3;
            --curious-blue: #2593db;
            --background-dark: #0a0e2b;
            --text-dark: #ffffff;
            --neon-glow: #49cee4;
            --progress: 0; /* Variável para o progresso do loader */
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Inter', Arial, sans-serif;
        }

        body {
            background: var(--background-dark);
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            padding: 20px;
            width: 100%;
            overflow-y: auto;
            perspective: 1000px;
        }

        .particles {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            pointer-events: none;
        }

        .particle {
            position: absolute;
            width: 20px;
            height: 20px;
            background: url('/storage/emulated/0/Tasker/termux/zap-replay-api/icones/icon-logo.png') no-repeat center center;
            background-size: contain;
            opacity: 0.6;
            animation: orbit 8s ease-in-out infinite;
            filter: drop-shadow(0 0 8px var(--neon-glow));
            transform: translateZ(0);
        }

        @keyframes orbit {
            0% { transform: translate(0, 0) scale(1); opacity: 0.6; }
            50% { transform: translate(10px, -15px) scale(1.3); opacity: 0.9; }
            100% { transform: translate(0, 0) scale(1); opacity: 0.6; }
        }

        .container {
            background: linear-gradient(135deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0.05));
            backdrop-filter: blur(10px);
            padding: 32px;
            border-radius: 16px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3), inset 0 0 10px rgba(73, 206, 228, 0.2);
            width: 100%;
            max-width: 600px;
            text-align: center;
            position: relative;
            z-index: 1;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            gap: 24px;
            min-height: 400px;
            transform: translateZ(20px) rotateX(5deg) rotateY(5deg); /* Efeito 3D fixo */
            border: 1px solid rgba(73, 206, 228, 0.3);
        }

        .exit-button {
            padding: 12px 24px;
            background: var(--torea-bay);
            color: var(--text-dark);
            border: none;
            border-radius: 8px;
            font-weight: 600;
            font-size: 16px;
            cursor: pointer;
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            box-shadow: 0 4px 12px rgba(73, 206, 228, 0.4);
            display: none;
        }

        .exit-button:hover {
            transform: translateZ(10px);
            box-shadow: 0 6px 20px rgba(73, 206, 228, 0.6);
        }

        h1 {
            color: var(--text-dark);
            font-size: 28px;
            font-weight: 700;
            letter-spacing: 0.5px;
            text-transform: uppercase;
            animation: fadeIn 1s ease-out;
            text-shadow: 0 0 10px var(--neon-glow);
            display: none;
        }

        @keyframes fadeIn {
            from { opacity: 0; transform: translateY(-10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .loader-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            gap: 16px;
            position: relative;
        }

        .loader-title {
            color: var(--picton-blue);
            font-size: 20px;
            font-weight: 600;
            text-shadow: 0 0 5px var(--neon-glow);
        }

        .loader {
            width: 100px;
            height: 100px;
            position: relative;
            transform-style: preserve-3d;
            transform: rotateY(25deg) rotateX(10deg);
        }

        .loader-ring {
            width: 100%;
            height: 100%;
            border-radius: 50%;
            border: 8px solid rgba(73, 206, 228, 0.15);
            background: conic-gradient(var(--picton-blue) calc(var(--progress) * 3.6deg), rgba(73, 206, 228, 0.15) 0);
            position: absolute;
            top: 0;
            left: 0;
            animation: wave 2s ease-in-out infinite;
            box-shadow: 0 0 25px var(--neon-glow), inset 0 0 12px var(--neon-glow);
            z-index: 1;
        }

        .loader-wave {
            width: 105%;
            height: 105%;
            border-radius: 50%;
            border: 4px solid var(--neon-glow);
            position: absolute;
            top: -2.5%;
            left: -2.5%;
            animation: wave-expand 2.5s ease-in-out infinite;
            opacity: 0.25;
            z-index: 0;
        }

        @keyframes wave {
            0%, 100% { transform: scale(1); opacity: 0.85; }
            50% { transform: scale(1.08); opacity: 1; }
        }

        @keyframes wave-expand {
            0% { transform: scale(1); opacity: 0.25; }
            100% { transform: scale(1.2); opacity: 0; }
        }

        .loader-bg {
            width: 80%;
            height: 80%;
            position: absolute;
            top: 10%;
            left: 10%;
            border-radius: 50%;
            background: radial-gradient(circle, rgba(73, 206, 228, 0.1), transparent);
            transform: translateZ(-12px);
            z-index: -1;
        }

        .progress-text {
            color: var(--picton-blue);
            font-size: 18px;
            font-weight: 600;
            text-shadow: 0 0 8px var(--neon-glow);
            animation: text-pulse 2s ease-in-out infinite;
        }

        @keyframes text-pulse {
            0%, 100% { opacity: 0.8; }
            50% { opacity: 1; }
        }

        #output {
            background: rgba(10, 14, 43, 0.7);
            padding: 16px;
            border-radius: 8px;
            color: var(--text-dark);
            font-size: 16px;
            font-family: 'Inter', monospace;
            line-height: 1.5;
            animation: slideIn 0.5s ease-out;
            white-space: pre-wrap;
            text-align: left;
            display: none;
            width: 100%;
            box-shadow: 0 0 15px rgba(73, 206, 228, 0.3);
            border: 1px solid rgba(73, 206, 228, 0.2);
        }

        @keyframes slideIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        footer {
            color: var(--torea-bay);
            font-size: 14px;
            font-weight: 400;
            text-shadow: 0 0 5px rgba(73, 206, 228, 0.2);
        }

        footer .developer {
            color: var(--picton-blue);
            font-weight: 600;
        }

        @media screen and (max-width: 768px) {
            .container {
                padding: 24px;
                max-width: 90%;
            }

            h1 {
                font-size: 24px;
            }

            .loader-title {
                font-size: 18px;
            }

            .loader {
                width: 80px;
                height: 80px;
            }

            .progress-text {
                font-size: 16px;
            }

            #output {
                font-size: 14px;
            }

            footer {
                font-size: 13px;
            }

            .exit-button {
                font-size: 14px;
                padding: 10px 20px;
            }
        }

        @media screen and (max-width: 480px) {
            .container {
                padding: 16px;
            }

            h1 {
                font-size: 20px;
            }

            .loader-title {
                font-size: 16px;
            }

            .loader {
                width: 60px;
                height: 60px;
            }

            .progress-text {
                font-size: 14px;
            }

            #output {
                font-size: 13px;
                padding: 12px;
            }

            footer {
                font-size: 12px;
            }

            .exit-button {
                font-size: 13px;
                padding: 8px 16px;
            }
        }
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class="particles" id="particles"&gt;&lt;/div&gt;
    &lt;div class="container"&gt;
        &lt;h1 id="title"&gt;Usuário Conectado&lt;/h1&gt;
        &lt;div class="loader-container"&gt;
            &lt;div class="loader-title"&gt;ZapReplyApi&lt;/div&gt;
            &lt;div class="loader"&gt;
                &lt;div class="loader-ring"&gt;&lt;/div&gt;
                &lt;div class="loader-wave"&gt;&lt;/div&gt;
                &lt;div class="loader-bg"&gt;&lt;/div&gt;
            &lt;/div&gt;
            &lt;div class="progress-text" data-progress="0" aria-live="polite"&gt;0%&lt;/div&gt;
        &lt;/div&gt;
        &lt;div id="output"&gt;&lt;/div&gt;
        &lt;button class="exit-button" id="exitButton"&gt;Sair&lt;/button&gt;
        &lt;footer&gt;
            &lt;p&gt;Desenvolvedor: &lt;span class="developer"&gt;Andredye Oliveira&lt;/span&gt;&lt;/p&gt;
            &lt;p&gt;© 2025 Todos os direitos reservados&lt;/p&gt;
        &lt;/footer&gt;
    &lt;/div&gt;

    &lt;script&gt;
        const jsonData = %users;

        const loaderContainer = document.querySelector('.loader-container');
        const progressText = document.querySelector('.progress-text');
        const outputDiv = document.getElementById('output');
        const titleElement = document.getElementById('title');
        const particlesContainer = document.getElementById('particles');
        const exitButton = document.getElementById('exitButton');
        let progress = 0;
        let timeoutId;

        const intervalId = setInterval(() =&gt; {
            progress += 1;
            progressText.setAttribute('data-progress', progress);
            progressText.textContent = `${progress}%`;
            document.documentElement.style.setProperty('--progress', progress);
            if (progress &gt;= 100) {
                clearInterval(intervalId);
                loaderContainer.style.display = 'none';
                outputDiv.style.display = 'block';
                titleElement.style.display = 'block';
                exitButton.style.display = 'block';
                outputDiv.textContent = JSON.stringify(jsonData, null, 2);
                timeoutId = setTimeout(() =&gt; {
                    
               ///alert('Tempo de inatividade');
              destroyScene('004-CONFIRMAR-CONEXAO [ zap-replay-api ] v(1.0)');



                }, 15000);
            }
        }, 50);

        function createParticle() {
            const particle = document.createElement('div');
            particle.className = 'particle';
            particle.style.left = `${Math.random() * 100}%`;
            particle.style.top = `${Math.random() * 100}%`;
            particle.style.animationDelay = `${Math.random() * 4}s`;
            particlesContainer.appendChild(particle);
            setTimeout(() =&gt; particle.remove(), 8000);
        }

        setInterval(createParticle, 200);

        exitButton.addEventListener('click', () =&gt; {
            clearTimeout(timeoutId);
            ///alert('Você clicou no botão');
            destroyScene('004-CONFIRMAR-CONEXAO [ zap-replay-api ] v(1.0)');
        });
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</Str>
			<Int sr="arg3" val="1"/>
			<Int sr="arg4" val="1"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Int sr="arg7" val="1"/>
			<Str sr="arg8" ve="3">destroyScene('004-CONFIRMAR-CONEXAO [ zap-replay-api ] v(1.0)');</Str>
		</WebElement>
		<PropertiesElement sr="props">
			<keyTask>272</keyTask>
			<Int sr="arg0" val="1"/>
			<Int sr="arg1" val="0"/>
			<Str sr="arg2" ve="3">#FF000000</Str>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3">Cena</Str>
			<Str sr="arg5" ve="3"/>
			<Img sr="arg6" ve="2"/>
			<Str sr="arg7" ve="3"/>
			<LinkClickFilter sr="filter0">
				<urlMatch>back</urlMatch>
			</LinkClickFilter>
		</PropertiesElement>
	</Scene>
	<Scene sr="scene005-ATUALIZACOES [ zap-replay-api ] v(1.0)">
		<cdate>1751402967631</cdate>
		<edate>1751568245961</edate>
		<heightLand>-1</heightLand>
		<heightPort>2400</heightPort>
		<nme>005-ATUALIZACOES [ zap-replay-api ] v(1.0)</nme>
		<widthLand>-1</widthLand>
		<widthPort>1080</widthPort>
		<WebElement sr="elements0" ve="2">
			<flags>6</flags>
			<geom>0,0,1079,2400,-1,-1,-1,-1</geom>
			<linkclickTask>896</linkclickTask>
			<Str sr="arg0" ve="3">005-ATUALIZACOES [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1" val="2"/>
			<Str sr="arg2" ve="3">&lt;!DOCTYPE html&gt;
&lt;html lang="pt-BR"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;title&gt;ZAP-REPLAY-API - Atualizações&lt;/title&gt;
    &lt;link rel="stylesheet" href="%project_path/css/index.css"&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;canvas id="particles"&gt;&lt;/canvas&gt;

    &lt;header&gt;
        &lt;h1&gt;ZAP-REPLAY-API&lt;/h1&gt;
        &lt;p&gt;Atualizações e Changelog&lt;/p&gt;
    &lt;/header&gt;

    &lt;div class="changelog-container"&gt;


        %http_data


    &lt;/div&gt;

    &lt;div class="update-notification" id="updateNotification"&gt;
        &lt;p&gt;Há uma nova atualização disponível para ser instalada!&lt;/p&gt;
        &lt;button onclick="updateNow()"&gt;Atualizar Agora&lt;/button&gt;
        &lt;button onclick="showSchedule()"&gt;Agendar Atualização&lt;/button&gt;
        &lt;div class="schedule-section" id="scheduleSection"&gt;
            &lt;input type="time" id="scheduleTime"&gt;
            &lt;button onclick="scheduleUpdate()"&gt;Confirmar&lt;/button&gt;
            &lt;p class="error-message" id="errorMessage"&gt;O agendamento deve ser pelo menos 5 minutos após a hora atual.&lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;

    &lt;footer&gt;
        &lt;p class="developer"&gt;Desenvolvedor: &lt;span&gt;Andredye Oliveira Melo&lt;/span&gt;&lt;/p&gt;
        &lt;p&gt;© 2025 ZAP-REPLAY-API. Todos os direitos reservados.&lt;/p&gt;
    &lt;/footer&gt;

    &lt;script src="%project_path/js/index.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</Str>
			<Int sr="arg3" val="1"/>
			<Int sr="arg4" val="1"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Int sr="arg7" val="1"/>
			<Str sr="arg8" ve="3"/>
			<LinkClickFilter sr="filter0"/>
		</WebElement>
		<PropertiesElement sr="props">
			<keyTask>348</keyTask>
			<Int sr="arg0" val="1"/>
			<Int sr="arg1" val="0"/>
			<Str sr="arg2" ve="3">#00000000</Str>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3">005-ATUALIZACOES</Str>
			<Str sr="arg5" ve="3"/>
			<Img sr="arg6" ve="2"/>
			<Str sr="arg7" ve="3"/>
			<LinkClickFilter sr="filter0">
				<urlMatch>back</urlMatch>
			</LinkClickFilter>
		</PropertiesElement>
	</Scene>
	<Scene sr="scene005-DESCONECTAR-USUARIO [ zap-replay-api ] v(1.0)">
		<cdate>1750621695219</cdate>
		<edate>1751468957734</edate>
		<heightLand>-1</heightLand>
		<heightPort>2400</heightPort>
		<nme>005-DESCONECTAR-USUARIO [ zap-replay-api ] v(1.0)</nme>
		<widthLand>-1</widthLand>
		<widthPort>1080</widthPort>
		<WebElement sr="elements0" ve="2">
			<flags>6</flags>
			<geom>0,0,1079,2400,-1,-1,-1,-1</geom>
			<linkclickTask>270</linkclickTask>
			<Str sr="arg0" ve="3">DESCONECTAR [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1" val="2"/>
			<Str sr="arg2" ve="3">&lt;!DOCTYPE html&gt;
&lt;html lang="pt-BR"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;title&gt;ZapReplyApi&lt;/title&gt;
    &lt;link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css"&gt;
    &lt;link rel="stylesheet" href="%project_path/css/index.css"&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class="container"&gt;
        &lt;h1 class="title"&gt;ZapReplyApi&lt;/h1&gt;
        &lt;div class="controls"&gt;
            &lt;button class="select-all-btn" id="selectAllBtn"&gt;
                &lt;i class="fas fa-check"&gt;&lt;/i&gt; Selecionar Todos
            &lt;/button&gt;
            &lt;button class="remove-selected-btn" id="removeSelectedBtn"&gt;
                &lt;i class="fas fa-trash"&gt;&lt;/i&gt; Remover Selecionados
            &lt;/button&gt;
        &lt;/div&gt;
        &lt;div class="user-list" id="userList"&gt;&lt;/div&gt;
        &lt;footer&gt;
            &lt;p&gt;Desenvolvedor: &lt;span class="developer"&gt;Andredye Oliveira&lt;/span&gt;&lt;/p&gt;
            &lt;p&gt;© 2025 Todos os direitos reservados&lt;/p&gt;
        &lt;/footer&gt;
    &lt;/div&gt;
    &lt;button class="info-btn" id="infoBtn"&gt;&lt;i class="fas fa-question-circle"&gt;&lt;/i&gt;&lt;/button&gt;

    &lt;div class="modal" id="confirmModal"&gt;
        &lt;div class="modal-content"&gt;
            &lt;p id="modalMessage"&gt;Deseja realmente remover o usuário?&lt;/p&gt;
            &lt;div class="modal-buttons"&gt;
                &lt;button class="modal-btn yes" id="confirmYes"&gt;Sim&lt;/button&gt;
                &lt;button class="modal-btn no" id="confirmNo"&gt;Não&lt;/button&gt;
            &lt;/div&gt;
        &lt;/div&gt;
    &lt;/div&gt;

    &lt;div class="info-modal" id="infoModal"&gt;
        &lt;div class="info-modal-content"&gt;
            &lt;p&gt;
                Resumo das funcionalidades:
                Visualização: Exibe telefone e porta de cada usuário, com opção de expandir para detalhes em JSON.&lt;br&gt;&lt;br&gt;
                Seleção: Checkboxes permitem marcar usuários individualmente, e um botão com ícone seleciona/desmarca todos.&lt;br&gt;&lt;br&gt;
                Remoção:
                Individual: Botão por usuário abre um modal de confirmação para excluir um registro.&lt;br&gt;&lt;br&gt;
                Múltipla: Botão "Remover Selecionados" aparece ao marcar usuários, permitindo excluir vários após confirmação via modal.
            &lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;

    &lt;script src="%project_path/js/index.js"&gt;&lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</Str>
			<Int sr="arg3" val="1"/>
			<Int sr="arg4" val="1"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Int sr="arg7" val="1"/>
			<Str sr="arg8" ve="3"/>
			<LinkClickFilter sr="filter0"/>
		</WebElement>
		<PropertiesElement sr="props">
			<Int sr="arg0" val="1"/>
			<Int sr="arg1" val="0"/>
			<Str sr="arg2" ve="3">#00FFFFFF</Str>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3">005-DESCONECTAR-USUARIO</Str>
			<Str sr="arg5" ve="3"/>
			<Img sr="arg6" ve="2"/>
			<Str sr="arg7" ve="3"/>
		</PropertiesElement>
	</Scene>
	<Scene sr="sceneINFORMACOES_GRUPOS [ zap-replay-api ] v(1.0)">
		<cdate>1750916451567</cdate>
		<edate>1751556709369</edate>
		<heightLand>-1</heightLand>
		<heightPort>2400</heightPort>
		<nme>INFORMACOES_GRUPOS [ zap-replay-api ] v(1.0)</nme>
		<widthLand>-1</widthLand>
		<widthPort>1080</widthPort>
		<WebElement sr="elements0" ve="2">
			<flags>6</flags>
			<geom>0,0,1079,2400,-1,-1,-1,-1</geom>
			<Str sr="arg0" ve="3">INFORMACOES_GRUPOS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1" val="2"/>
			<Str sr="arg2" ve="3">&lt;!DOCTYPE html&gt;
&lt;html lang="pt-BR"&gt;
&lt;head&gt;
    &lt;meta charset="UTF-8"&gt;
    &lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&gt;
    &lt;title&gt;ZapReplyApi&lt;/title&gt;
    &lt;style&gt;
            :root {
            --dark-bg: #1a1a1a;
            --dark-container: #2c2c2c;
            --dark-text: #e0e0e0;
            --dark-primary: #1565c0;
            --dark-accent: #d32f2f;
            --dark-hover: #0288d1;
            --dark-modal: #424242;
            --dark-border: #616161;
            --shadow-light: rgba(255, 255, 255, 0.1);
            --shadow-dark: rgba(0, 0, 0, 0.5);
            --neon-glow: #40c4ff;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Roboto', sans-serif;
        }

        html, body {
            height: 100vh;
            overflow: hidden;
            background-color: var(--dark-bg);
            color: var(--dark-text);
        }

        body {
            display: flex;
            justify-content: center;
            align-items: flex-start;
        }

        .container {
            max-width: 98%;
            width: 98%;
            padding: 20px;
            background: var(--dark-container);
            border-radius: 10px;
            box-shadow: 0 8px 25px var(--shadow-dark), 0 0 15px var(--neon-glow);
            display: flex;
            flex-direction: column;
            height: 100%;
            overflow-y: auto;
        }

        .header {
            text-align: center;
            margin-bottom: 20px;
            flex-shrink: 0;
            position: sticky;
            top: 0;
            background: var(--dark-container);
            z-index: 10;
            padding: 10px 0;
        }

        h1 {
            font-size: 3rem;
            color: var(--neon-glow);
            text-shadow: 0 0 8px var(--neon-glow);
        }

        .port-info {
            font-size: 1.8rem;
            color: var(--neon-glow);
            text-shadow: 0 0 4px var(--neon-glow);
            margin-top: 10px;
        }

        .info-button {
            background: var(--dark-primary);
            color: var(--dark-text);
            border: 2px solid var(--neon-glow);
            border-radius: 5px;
            padding: 10px 20px;
            font-size: 1.2rem;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 0 8px var(--neon-glow);
            margin: 10px auto;
            display: block;
        }

        .info-button:hover {
            background: var(--dark-hover);
            box-shadow: 0 0 12px var(--neon-glow);
            transform: scale(1.05);
        }

        .data-list {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
            gap: 15px;
            flex-grow: 1;
            overflow-y: auto;
            padding-bottom: 20px;
            height: 100%;
        }

        .data-item {
            background: var(--dark-modal);
            padding: 15px;
            border-radius: 8px;
            border: 1px solid var(--dark-border);
            box-shadow: 0 4px 12px var(--shadow-dark);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
            opacity: 0;
            transform: translateY(20px);
            animation: fadeIn 0.5s forwards;
        }

        .data-item:hover {
            transform: translateY(-8px) scale(1.03);
            box-shadow: 0 8px 15px var(--shadow-dark), 0 0 12px var(--neon-glow);
            border-color: var(--neon-glow);
        }

        @keyframes fadeIn {
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        .data-item h3 {
            color: var(--dark-primary);
            margin-bottom: 12px;
            font-size: 1.6rem;
            display: flex;
            flex-wrap: wrap;
            align-items: center;
        }

        .data-item h3 span {
            font-size: 1.1rem;
            color: var(--dark-accent);
            margin-right: 10px;
            word-break: break-all;
        }

        .data-item p {
            font-size: 1.2rem;
            color: var(--dark-text);
        }

        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.85);
            justify-content: center;
            align-items: flex-start;
            z-index: 1000;
            overflow-y: auto;
            padding-top: 20px;
        }

        .modal-content {
            background: var(--dark-modal);
            padding: 20px;
            border-radius: 8px;
            max-width: 90%;
            width: 600px;
            max-height: 80vh;
            overflow-y: auto;
            box-shadow: 0 8px 15px var(--shadow-dark), 0 0 15px var(--neon-glow);
            animation: modalAppear 0.5s ease;
            position: relative;
            display: flex;
            flex-direction: column;
        }

        @keyframes modalAppear {
            from { transform: translateY(-80px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }

        .modal-content pre {
            background: var(--dark-container);
            color: var(--dark-text);
            padding: 15px;
            border-radius: 5px;
            font-size: 1.2rem;
            white-space: pre-wrap;
            word-wrap: break-word;
            margin: 0;
            flex-grow: 1;
        }

        .loading-json {
            text-align: center;
            padding: 10px;
            color: var(--dark-text);
            flex-shrink: 0;
        }

        @media (max-width: 768px) {
            .container {
                width: 98%;
                padding: 15px;
            }

            h1 {
                font-size: 2.4rem;
            }

            .port-info {
                font-size: 1.4rem;
            }

            .info-button {
                font-size: 1rem;
                padding: 8px 15px;
            }

            .data-list {
                grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
            }

            .data-item {
                padding: 10px;
            }

            .data-item h3 {
                font-size: 1.4rem;
            }

            .data-item h3 span {
                font-size: 0.9rem;
            }

            .data-item p {
                font-size: 1rem;
            }

            .modal-content {
                width: 95%;
                padding: 15px;
                max-height: 80vh;
            }

            .modal-content pre {
                font-size: 1rem;
            }

            .loading-json {
                font-size: 1rem;
            }
        }

        @media (max-width: 480px) {
            h1 {
                font-size: 2rem;
            }

            .port-info {
                font-size: 1.2rem;
            }

            .info-button {
                font-size: 0.9rem;
                padding: 6px 12px;
            }

            .data-list {
                grid-template-columns: repeat(auto-fill, minmax(180px, 1fr));
            }

            .data-item {
                padding: 8px;
            }

            .data-item h3 {
                font-size: 1.2rem;
            }

            .data-item h3 span {
                font-size: 0.8rem;
            }

            .data-item p {
                font-size: 0.9rem;
            }

            .modal-content {
                padding: 12px;
                max-height: 80vh;
            }

            .modal-content pre {
                font-size: 0.9rem;
            }

            .loading-json {
                font-size: 0.9rem;
            }
        }
    &lt;/style&gt;
&lt;/head&gt;
&lt;body&gt;
    &lt;div class="container"&gt;
        &lt;div class="header"&gt;
            &lt;h1&gt;ZapReplyApi&lt;/h1&gt;
            &lt;div class="port-info"&gt;Porta: 7774&lt;/div&gt;
            &lt;button class="info-button" onclick="openInfoModal()"&gt;Exibir Informações Completas&lt;/button&gt;
        &lt;/div&gt;
        &lt;div class="data-list" id="dataList"&gt;&lt;/div&gt;
        &lt;div id="loading" style="text-align: center; padding: 20px; display: none;"&gt;
            &lt;p&gt;Carregando mais grupos...&lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;

    &lt;div class="modal" id="infoModal"&gt;
        &lt;div class="modal-content" id="modalContent"&gt;&lt;/div&gt;
    &lt;/div&gt;

    &lt;script&gt;
        const data = %groups_data;

        const modalData = %groups_data;

        function displayData() {
            const dataList = document.getElementById('dataList');
            const loading = document.getElementById('loading');
            let currentIndex = 0;
            const batchSize = 100;

            function loadBatch() {
                const endIndex = Math.min(currentIndex + batchSize, data.length);
                for (let i = currentIndex; i &lt; endIndex; i++) {
                    const item = data[i];
                    const div = document.createElement('div');
                    div.classList.add('data-item');
                    div.style.animationDelay = `${i * 0.1}s`;
                    div.innerHTML = `
                        &lt;h3&gt;&lt;span&gt;${item.JID || 'Nenhum'}&lt;/span&gt; ${item.Name || 'Nenhum'}&lt;/h3&gt;
                        &lt;p&gt;&lt;strong&gt;Criado em:&lt;/strong&gt; ${item.GroupCreated ? new Date(item.GroupCreated).toLocaleString() : 'Nenhum'}&lt;/p&gt;
                    `;
                    dataList.appendChild(div);
                }
                currentIndex = endIndex;
                loading.style.display = currentIndex &lt; data.length ? 'block' : 'none';
            }

            loadBatch();

            const observer = new IntersectionObserver((entries) =&gt; {
                if (entries[0].isIntersecting &amp;&amp; currentIndex &lt; data.length) {
                    loadBatch();
                }
            }, { rootMargin: '200px' });

            observer.observe(loading);
        }

        function openInfoModal() {
            const modal = document.getElementById('infoModal');
            const modalContent = document.getElementById('modalContent');
            modalContent.innerHTML = `
                &lt;div class="modal-body"&gt;
                    &lt;pre id="jsonContent"&gt;&lt;/pre&gt;
                &lt;/div&gt;
                &lt;div class="loading-json" id="loadingJson"&gt;Carregando mais dados...&lt;/div&gt;
            `;
            modal.style.display = 'flex';
            modalContent.scrollTop = 0;

            const jsonContent = document.getElementById('jsonContent');
            const loadingJson = document.getElementById('loadingJson');
            let currentLineIndex = 0;
            const batchSize = 2500;

            const jsonText = JSON.stringify(modalData, null, 2);
            const jsonLines = jsonText.split('\n');

            function loadJsonBatch() {
                if (currentLineIndex &gt;= jsonLines.length) {
                    loadingJson.style.display = 'none';
                    clearInterval(interval);
                    return;
                }
                const endIndex = Math.min(currentLineIndex + batchSize, jsonLines.length);
                const batchLines = jsonLines.slice(currentLineIndex, endIndex).join('\n');
                jsonContent.textContent += batchLines + (endIndex &lt; jsonLines.length ? '\n' : '');
                currentLineIndex = endIndex;
                loadingJson.style.display = currentLineIndex &lt; jsonLines.length ? 'block' : 'none';
            }

            loadJsonBatch();
            const interval = setInterval(loadJsonBatch, 3000);
        }

        window.onclick = function(event) {
            if (event.target.classList.contains('modal')) {
                event.target.style.display = 'none';
            }
        };

        window.onload = displayData;
    &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;</Str>
			<Int sr="arg3" val="1"/>
			<Int sr="arg4" val="1"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Int sr="arg7" val="1"/>
			<Str sr="arg8" ve="3"/>
			<RectElement sr="background">
				<flags>4</flags>
				<geom>-1,-1,-1,-1,-1,-1,-1,-1</geom>
				<Str sr="arg0" ve="3"/>
				<Int sr="arg1" val="0"/>
				<Str sr="arg2" ve="3"/>
				<Str sr="arg3" ve="3"/>
				<Int sr="arg4" val="0"/>
				<Str sr="arg5" ve="3">#FF000000</Str>
				<Int sr="arg6" val="0"/>
				<Int sr="arg7" val="0"/>
			</RectElement>
		</WebElement>
		<PropertiesElement sr="props">
			<Int sr="arg0" val="1"/>
			<Int sr="arg1" val="0"/>
			<Str sr="arg2" ve="3">#00FFFFFF</Str>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3">Ghhh</Str>
			<Str sr="arg5" ve="3"/>
			<Img sr="arg6" ve="2"/>
			<Str sr="arg7" ve="3"/>
		</PropertiesElement>
	</Scene>
	<Task sr="task174">
		<cdate>1749673531756</cdate>
		<edate>1749673531756</edate>
		<id>174</id>
		<pri>102</pri>
		<Action sr="act0" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">001-CENA-MENU-INICIAL [ zap-replay-api ] v(1.0)</Str>
		</Action>
	</Task>
	<Task sr="task176">
		<cdate>1750622181101</cdate>
		<edate>1751562968096</edate>
		<id>176</id>
		<nme>003-DESCONECTAR [ zap-replay-api ] v(1.0)</nme>
		<pri>100</pri>
		<rty>2</rty>
		<Action sr="act0" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">006- SCRIPTS-GERAIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+10</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3">desconectar</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act1" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">005-DESCONECTAR-USUARIO [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act2" ve="7">
			<code>47</code>
			<se>false</se>
			<Str sr="arg0" ve="3">005-DESCONECTAR-USUARIO [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1" val="10"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg2" val="100"/>
			<Int sr="arg3" val="100"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="1"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act3" ve="7">
			<code>53</code>
			<on>false</on>
			<Str sr="arg0" ve="3">005-DESCONECTAR-USUARIO [ zap-replay-api ] v(1.0)</Str>
			<Str sr="arg1" ve="3">DESCONECTAR [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg2" val="0"/>
			<Str sr="arg3" ve="3"/>
		</Action>
		<Img sr="icn" ve="2">
			<fle>/storage/emulated/0/Tasker/termux/zap-replay-api/icones/user-allowed.png</fle>
		</Img>
	</Task>
	<Task sr="task183">
		<cdate>1749673972765</cdate>
		<edate>1751569749045</edate>
		<id>183</id>
		<nme>007-BAIXAR-ICONES [ zap-replay-api ] v(1.0)</nme>
		<pri>6</pri>
		<rty>2</rty>
		<Action sr="act0" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%caller1</lhs>
					<op>3</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act1" ve="7">
			<code>342</code>
			<Int sr="arg0" val="5"/>
			<Str sr="arg1" ve="3">Tasker/termux/zap-replay-api/instalacao/users_connecteds.txt</Str>
			<Str sr="arg2" ve="3">%in_exist</Str>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="1"/>
		</Action>
		<Action sr="act10" ve="7">
			<code>159</code>
			<Str sr="arg0" ve="3">001-BAIXAR-ICONES [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1" val="0"/>
		</Action>
		<Action sr="act11" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act12" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%path_img</Str>
			<Str sr="arg1" ve="3">/storage/emulated/0/Tasker/termux/zap-replay-api/icones</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act13" ve="7">
			<code>354</code>
			<label>urls incones</label>
			<Str sr="arg0" ve="3">%links_imgs</Str>
			<Str sr="arg1" ve="3">https://i.ibb.co/Pzs2xVxs/icon-install-complete.gif
https://i.ibb.co/hxrYzmtL/icon-start.gif
https://i.ibb.co/27vmNBnp/icon-logo.png
https://i.ibb.co/R43L886b/receiver.png
https://i.ibb.co/9H3MPcz3/user-allowed.png
https://i.ibb.co/8gbJXL3q/system.png</Str>
			<Str sr="arg2" ve="3">
</Str>
		</Action>
		<Action sr="act14" ve="7">
			<code>39</code>
			<coll>false</coll>
			<label>verificar img</label>
			<Str sr="arg0" ve="3">%http_img</Str>
			<Str sr="arg1" ve="3">%links_imgs()</Str>
			<Int sr="arg2" val="1"/>
		</Action>
		<Action sr="act15" ve="7">
			<code>598</code>
			<Str sr="arg0" ve="3">%http_img</Str>
			<Str sr="arg1" ve="3">\n</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3"/>
		</Action>
		<Action sr="act16" ve="7">
			<code>396</code>
			<label>retorna apenas o nome da img</label>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%name_img
0. Name img
Também pode ser acessado como um array&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%mt_match
Equivalente
Também pode ser acessado como um array&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%mt_groups()
Grupos
&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%mt_match_found
É Correspondência
true se houve uma correspondência, false caso contrário&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Str sr="arg2" ve="3">%http_img</Str>
			<Str sr="arg3" ve="3">\/(?&lt;name_img&gt;[^\/]+)$</Str>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act17" ve="7">
			<code>342</code>
			<Int sr="arg0" val="5"/>
			<Str sr="arg1" ve="3">%path_img/%name_img</Str>
			<Str sr="arg2" ve="3">%exist</Str>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="1"/>
		</Action>
		<Action sr="act18" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%exist</lhs>
					<op>2</op>
					<rhs>false</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act19" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="0"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">%http_img</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3">%path_img</Str>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%exist</lhs>
					<op>2</op>
					<rhs>false</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act2" ve="7">
			<code>417</code>
			<se>false</se>
			<Str sr="arg0" ve="3">Tasker/termux/zap-replay-api/instalacao/users_connecteds.txt</Str>
			<Str sr="arg1" ve="3">%users_connecteds</Str>
			<Int sr="arg2" val="1"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%in_exist</lhs>
					<op>2</op>
					<rhs>true</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act20" ve="7">
			<code>391</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%pd_type
Tipo
&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="0"/>
			<Int sr="arg10" val="0"/>
			<Str sr="arg2" ve="3">%name_img</Str>
			<Str sr="arg3" ve="3">Download Icons</Str>
			<Int sr="arg4" val="0"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3"/>
			<Int sr="arg7" val="66"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="100"/>
		</Action>
		<Action sr="act21" ve="7">
			<code>30</code>
			<Int sr="arg0" val="100"/>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
		</Action>
		<Action sr="act22" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act23" ve="7">
			<code>40</code>
		</Action>
		<Action sr="act24" ve="7">
			<code>391</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%pd_type
Tipo
&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="0"/>
			<Str sr="arg2" ve="3">%http_img</Str>
			<Str sr="arg3" ve="3">Baixando icones
Download Icons</Str>
			<Int sr="arg4" val="0"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3"/>
			<Int sr="arg7" val="66"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="100"/>
		</Action>
		<Action sr="act25" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%next_task_time</Str>
			<Str sr="arg1" ve="3">05.00</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act26" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act3" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var users_connecteds = local('users_connecteds');

function isValidJson(jsonString) {
  try {
    const parsed = JSON.parse(jsonString);
    return Array.isArray(parsed); // Verifica se é um array
  } catch (e) {
    return false; // Retorna false se o JSON for inválido
  }
}

var is_valid = isValidJson(users_connecteds);

setLocal('json_valid', is_valid.toString());</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act4" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%json_valid</lhs>
					<op>2</op>
					<rhs>true</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act5" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%users</Str>
			<Str sr="arg1" ve="3">%users_connecteds</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act6" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act7" ve="7">
			<code>159</code>
			<Str sr="arg0" ve="3">003-RECEBER_MENSAGENS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1" val="0"/>
		</Action>
		<Action sr="act8" ve="7">
			<code>159</code>
			<Str sr="arg0" ve="3">002-RECONECTAR [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1" val="0"/>
		</Action>
		<Action sr="act9" ve="7">
			<code>159</code>
			<Str sr="arg0" ve="3">004- CENTRAL-DE-ATUALIZACOES [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1" val="0"/>
		</Action>
		<Img sr="icn" ve="2">
			<fle>/storage/emulated/0/Tasker/termux/zap-replay-api/icones/system.png</fle>
		</Img>
	</Task>
	<Task sr="task189">
		<cdate>1749678624271</cdate>
		<edate>1749678624271</edate>
		<id>189</id>
		<pri>102</pri>
		<Action sr="act0" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">001-CENA-MENU-INICIAL [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act1" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%json_conect</lhs>
					<op>12</op>
					<rhs></rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act10" ve="7">
			<code>547</code>
			<label>informação que irá ser exibido na cena
003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</label>
			<Str sr="arg0" ve="3">%text</Str>
			<Str sr="arg1" ve="3">"O número informado já existe no banco de dados. Deseja prosseguir com a instalação e atualizá-lo mesmo assim?"</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act11" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act12" ve="7">
			<code>47</code>
			<se>false</se>
			<Str sr="arg0" ve="3">003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1" val="3"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg2" val="100"/>
			<Int sr="arg3" val="100"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="1"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act13" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act14" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%number_exist</lhs>
					<op>2</op>
					<rhs>false</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act15" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act16" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<bool0>Or</bool0>
				<Condition sr="c0" ve="3">
					<lhs>%number_exist</lhs>
					<op>2</op>
					<rhs>true</rhs>
				</Condition>
				<Condition sr="c1" ve="3">
					<lhs>%error</lhs>
					<op>13</op>
					<rhs></rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act17" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">008-( SISTEMA )-INSTALACOES-GERAIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3">iniciar-instalacao</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%json_conect/%destroy_scene</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act18" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act19" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act2" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%destroy_scene</Str>
			<Str sr="arg1" ve="3">false</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act3" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%json_conect</Str>
			<Str sr="arg1" ve="3">%json_conect</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act4" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var tempUsers = local('users');
var newData = JSON.parse(local('json_conect'));
delete newData.reset;

var usersList = [];
if (tempUsers) {
    usersList = JSON.parse(tempUsers);
    if (!Array.isArray(usersList)) usersList = [usersList];
    
    for (var i = 0; i &lt; usersList.length; i++) {
        if (usersList[i].phone === newData.phone) {
            setLocal('error', 'numero ja existe');
            exit();
        }
    }
}

// Número não encontrado
setLocal('error', '');</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act5" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%error</lhs>
					<op>12</op>
					<rhs></rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act6" ve="7">
			<code>61</code>
			<Int sr="arg0" val="1000"/>
		</Action>
		<Action sr="act7" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%buttons</Str>
			<Str sr="arg1" ve="3">numero existe</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act8" ve="7">
			<code>547</code>
			<label>cor da informação do texto na cena
003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</label>
			<Str sr="arg0" ve="3">%color_text</Str>
			<Str sr="arg1" ve="3">#FFFF00</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act9" ve="7">
			<code>547</code>
			<label>margem da cena
003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</label>
			<Str sr="arg0" ve="3">%margin</Str>
			<Str sr="arg1" ve="3">center</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
	</Task>
	<Task sr="task192">
		<cdate>1749763769927</cdate>
		<edate>1749763769927</edate>
		<id>192</id>
		<pri>102</pri>
		<Action sr="act0" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">002-CENA-INSTALACAO [ zap-replay-api ] v(1.0)</Str>
		</Action>
	</Task>
	<Task sr="task268">
		<cdate>1749757392787</cdate>
		<edate>1751569846658</edate>
		<id>268</id>
		<nme>008-( SISTEMA )-INSTALACOES-GERAIS [ zap-replay-api ] v(1.0)</nme>
		<pri>100</pri>
		<rty>2</rty>
		<Action sr="act0" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%par1</lhs>
					<op>2</op>
					<rhs>iniciar-instalacao</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act1" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">006- SCRIPTS-GERAIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+10</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3">script-instalacao</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%json_conect</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act10" ve="7">
			<code>523</code>
			<Str sr="arg0" ve="3">ZapReplyApi.</Str>
			<Str sr="arg1" ve="3">%logs_progresso(&lt;)</Str>
			<Str sr="arg10" ve="3"/>
			<Str sr="arg11" ve="3"/>
			<Str sr="arg12" ve="3"/>
			<Img sr="arg2" ve="2">
				<fle>/storage/emulated/0/Tasker/termux/zap-replay-api/icones/icon-logo.png</fle>
			</Img>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="5"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="0"/>
			<Str sr="arg9" ve="3"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%destroy_scene</lhs>
					<op>2</op>
					<rhs>true</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act100" ve="7">
			<code>47</code>
			<Str sr="arg0" ve="3">004-CONFIRMAR-CONEXAO [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1" val="10"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg2" val="100"/>
			<Int sr="arg3" val="100"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="1"/>
			<Int sr="arg6" val="1"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="1"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act101" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act102" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%par1</lhs>
					<op>2</op>
					<rhs>desconectar</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act103" ve="7">
			<code>354</code>
			<Str sr="arg0" ve="3">%ports</Str>
			<Str sr="arg1" ve="3">%ports</Str>
			<Str sr="arg2" ve="3">,</Str>
		</Action>
		<Action sr="act104" ve="7">
			<code>369</code>
			<Str sr="arg0" ve="3">%ports</Str>
			<Int sr="arg1" val="1"/>
		</Action>
		<Action sr="act105" ve="7">
			<code>39</code>
			<Str sr="arg0" ve="3">%search</Str>
			<Str sr="arg1" ve="3">%ports()</Str>
			<Int sr="arg2" val="1"/>
		</Action>
		<Action sr="act106" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="0"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%search/app/logout</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act107" ve="7">
			<code>547</code>
			<label>adiciona * para não exibir os botões</label>
			<Str sr="arg0" ve="3">%buttons</Str>
			<Str sr="arg1" ve="3">*</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act108" ve="7">
			<code>547</code>
			<label>cor da informação do texto na cena
003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</label>
			<Str sr="arg0" ve="3">%color_text</Str>
			<Str sr="arg1" ve="3">#00FF00</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act109" ve="7">
			<code>547</code>
			<label>margem da cena
003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</label>
			<Str sr="arg0" ve="3">%margin</Str>
			<Str sr="arg1" ve="3">center</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act11" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<bool0>And</bool0>
				<Condition sr="c0" ve="3">
					<lhs>%destroy_scene</lhs>
					<op>2</op>
					<rhs>true</rhs>
				</Condition>
				<Condition sr="c1" ve="3">
					<lhs>%no_rept</lhs>
					<op>13</op>
					<rhs></rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act110" ve="7">
			<code>547</code>
			<label>informação que irá ser exibido na cena
003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</label>
			<Str sr="arg0" ve="3">%text</Str>
			<Str sr="arg1" ve="3">&lt;p&gt;&lt;strong&gt;A conexão do usuário &lt;span style="color:#FFD700;"&gt;%search&lt;/span&gt; com o banco de dados foi finalizada com sucesso.&lt;/strong&gt;&lt;/p&gt;</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act111" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act112" ve="7">
			<code>47</code>
			<Str sr="arg0" ve="3">003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1" val="3"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg2" val="100"/>
			<Int sr="arg3" val="100"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="1"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act113" ve="7">
			<code>30</code>
			<Int sr="arg0" val="0"/>
			<Int sr="arg1" val="3"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
		</Action>
		<Action sr="act114" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act115" ve="7">
			<code>40</code>
		</Action>
		<Action sr="act116" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act12" ve="7">
			<code>547</code>
			<label>adiciona * para não exibir os botões</label>
			<Str sr="arg0" ve="3">%buttons</Str>
			<Str sr="arg1" ve="3">*</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act13" ve="7">
			<code>547</code>
			<label>cor da informação do texto na cena
003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</label>
			<Str sr="arg0" ve="3">%color_text</Str>
			<Str sr="arg1" ve="3">#00FF00</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act14" ve="7">
			<code>547</code>
			<label>margem da cena
003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</label>
			<Str sr="arg0" ve="3">%margin</Str>
			<Str sr="arg1" ve="3">center</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act15" ve="7">
			<code>547</code>
			<label>informação que irá ser exibido na cena
003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</label>
			<Str sr="arg0" ve="3">%text</Str>
			<Str sr="arg1" ve="3">"A instalação do programa ZapReplyApi continuará sendo executada em segundo plano. Você pode utilizar seu dispositivo normalmente enquanto o processo é concluído automaticamente."</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act16" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act17" ve="7">
			<code>47</code>
			<Str sr="arg0" ve="3">003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1" val="0"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg2" val="100"/>
			<Int sr="arg3" val="100"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="1"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act18" ve="7">
			<code>30</code>
			<Int sr="arg0" val="0"/>
			<Int sr="arg1" val="10"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
		</Action>
		<Action sr="act19" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act2" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">006- SCRIPTS-GERAIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+10</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3">instalacao</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act20" ve="7">
			<code>523</code>
			<Str sr="arg0" ve="3">ZapReplyApi</Str>
			<Str sr="arg1" ve="3">"A instalação do programa ZapReplyApi continuará sendo executada em segundo plano. Você pode utilizar seu dispositivo normalmente."</Str>
			<Str sr="arg10" ve="3"/>
			<Str sr="arg11" ve="3"/>
			<Str sr="arg12" ve="3"/>
			<Img sr="arg2" ve="2">
				<fle>/storage/emulated/0/Tasker/termux/zap-replay-api/icones/icon-logo.png</fle>
			</Img>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="5"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="0"/>
			<Str sr="arg9" ve="3"/>
		</Action>
		<Action sr="act21" ve="7">
			<code>547</code>
			<label>essa variável ela vai ser definida para que as informações dentro dessa condição não seja repetida</label>
			<Str sr="arg0" ve="3">%no_rept</Str>
			<Str sr="arg1" ve="3">1</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act22" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act23" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%destroy_scene</lhs>
					<op>2</op>
					<rhs>false</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act24" ve="7">
			<code>53</code>
			<se>false</se>
			<Str sr="arg0" ve="3">002-CENA-INSTALACAO [ zap-replay-api ] v(1.0)</Str>
			<Str sr="arg1" ve="3">Barra De Progresso</Str>
			<Int sr="arg2" val="11"/>
			<Str sr="arg3" ve="3"/>
		</Action>
		<Action sr="act25" ve="7">
			<code>51</code>
			<se>false</se>
			<Str sr="arg0" ve="3">002-CENA-INSTALACAO [ zap-replay-api ] v(1.0)</Str>
			<Str sr="arg1" ve="3">Termux-inf</Str>
			<Int sr="arg2" val="0"/>
			<Str sr="arg3" ve="3">%logs_instalacao</Str>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act26" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act27" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%logs_progresso(&lt;)</lhs>
					<op>4</op>
					<rhs>Progresso: 100.00%</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act28" ve="7">
			<code>135</code>
			<Int sr="arg0" val="1"/>
			<Int sr="arg1" val="1"/>
			<Str sr="arg2" ve="3">fim da instalacao</Str>
		</Action>
		<Action sr="act29" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act3" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">002-CENA-INSTALACAO [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act30" ve="7">
			<code>30</code>
			<Int sr="arg0" val="0"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
		</Action>
		<Action sr="act31" ve="7">
			<code>135</code>
			<Int sr="arg0" val="1"/>
			<Int sr="arg1" val="1"/>
			<Str sr="arg2" ve="3">path_arq</Str>
		</Action>
		<Action sr="act32" ve="7">
			<code>300</code>
			<label>fim da instalacao</label>
		</Action>
		<Action sr="act33" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%destroy_scene</lhs>
					<op>2</op>
					<rhs>false</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act34" ve="7">
			<code>65</code>
			<Str sr="arg0" ve="3">002-CENA-INSTALACAO [ zap-replay-api ] v(1.0)</Str>
			<Str sr="arg1" ve="3">Termux-inf</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3">
				<var>1500</var>
			</Int>
			<Int sr="arg4" val="0"/>
		</Action>
		<Action sr="act35" ve="7">
			<code>65</code>
			<Str sr="arg0" ve="3">002-CENA-INSTALACAO [ zap-replay-api ] v(1.0)</Str>
			<Str sr="arg1" ve="3">002-CENA-INSTALACAO [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3">
				<var>1500</var>
			</Int>
			<Int sr="arg4" val="0"/>
		</Action>
		<Action sr="act36" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act37" ve="7">
			<code>30</code>
			<Int sr="arg0" val="0"/>
			<Int sr="arg1" val="5"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%destroy_scene</lhs>
					<op>2</op>
					<rhs>false</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act38" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">002-CENA-INSTALACAO [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act39" ve="7">
			<code>779</code>
			<Str sr="arg0" ve="3">ZapReplyApi.</Str>
			<Int sr="arg1" val="0"/>
		</Action>
		<Action sr="act4" ve="7">
			<code>47</code>
			<se>false</se>
			<Str sr="arg0" ve="3">002-CENA-INSTALACAO [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1" val="10"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg2" val="100"/>
			<Int sr="arg3" val="100"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="1"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act40" ve="7">
			<code>779</code>
			<Str sr="arg0" ve="3">ZapReplyApi</Str>
			<Int sr="arg1" val="0"/>
		</Action>
		<Action sr="act41" ve="7">
			<code>300</code>
			<label>&lt;b&gt;&lt;font color=cyan&gt;&lt;big&gt;
a partir daqui vai iniciar o processo de conectividade do WhatsApp web</label>
		</Action>
		<Action sr="act42" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;br&gt;
AGUARDE CONEXÃO EM ANDAMENTO</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFFFFFF</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3">top,0,400</Str>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3">10</Str>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3">TENTANDO CONECTAR AO WHATSAPP WEB</Str>
			<Str sr="arg4" ve="3">https://png.pngtree.com/png-vector/20221018/ourmid/pngtree-whatsapp-mobile-software-icon-png-image_6315991.png</Str>
			<Str sr="arg5" ve="3">40</Str>
			<Str sr="arg6" ve="3">#FF003AF6</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">15000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act43" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="0"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%json_conect.port/app/login-with-code?phone=%json_conect.phone</Str>
			<Str sr="arg3" ve="3">Accept: application/json, text/plain, */*</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act44" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%code_pairing</Str>
			<Str sr="arg1" ve="3">%http_data.pair_code</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act45" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>3</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act46" ve="7">
			<code>61</code>
			<Int sr="arg0" val="1000"/>
		</Action>
		<Action sr="act47" ve="7">
			<code>547</code>
			<label>adiciona * para não exibir os botões</label>
			<Str sr="arg0" ve="3">%buttons</Str>
			<Str sr="arg1" ve="3">*</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act48" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act49" ve="7">
			<code>547</code>
			<label>margem da cena
003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</label>
			<Str sr="arg0" ve="3">%margin</Str>
			<Str sr="arg1" ve="3">center</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act5" ve="7">
			<code>547</code>
			<label>path_arq</label>
			<Str sr="arg0" ve="3">%path_arq</Str>
			<Str sr="arg1" ve="3">/storage/emulated/0/Tasker/termux/zap-replay-api/instalacao/logs/install.txt</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act50" ve="7">
			<code>547</code>
			<label>cor da informação do texto na cena
WAITING-FOR-SETTINGS v(1.0)</label>
			<Str sr="arg0" ve="3">%color_text</Str>
			<Str sr="arg1" ve="3">#FF0000</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act51" ve="7">
			<code>547</code>
			<label>informação que irá ser exibido na cena
003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</label>
			<Str sr="arg0" ve="3">%text</Str>
			<Str sr="arg1" ve="3">Não foi possível conectar no WhatsApp web por favor reinicie o celular novamente</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act52" ve="7">
			<code>47</code>
			<Str sr="arg0" ve="3">003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1" val="0"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg2" val="100"/>
			<Int sr="arg3" val="100"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="1"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act53" ve="7">
			<code>30</code>
			<Int sr="arg0" val="0"/>
			<Int sr="arg1" val="7"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
		</Action>
		<Action sr="act54" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act55" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3"/>
		</Action>
		<Action sr="act56" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act57" ve="7">
			<code>105</code>
			<Str sr="arg0" ve="3">%code_pairing</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg2" ve="3"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act58" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act59" ve="7">
			<code>47</code>
			<Str sr="arg0" ve="3">003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1" val="0"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg2" val="100"/>
			<Int sr="arg3" val="100"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="1"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act6" ve="7">
			<code>417</code>
			<Str sr="arg0" ve="3">%path_arq</Str>
			<Str sr="arg1" ve="3">%logs_instalacao</Str>
			<Int sr="arg2" val="1"/>
		</Action>
		<Action sr="act60" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3"> </Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFFFFFF</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3">top,0,4000</Str>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3">10</Str>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3">https://png.pngtree.com/png-vector/20221018/ourmid/pngtree-whatsapp-mobile-software-icon-png-image_6315991.png</Str>
			<Str sr="arg5" ve="3">40</Str>
			<Str sr="arg6" ve="3">#FF003AF6</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">20</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act61" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%time</Str>
			<Str sr="arg1" ve="3">60</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act62" ve="7">
			<code>300</code>
			<label>verificação de conexão do usuário</label>
		</Action>
		<Action sr="act63" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="0"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%json_conect.port/user/info?phone=%json_conect.phone@s.whatsapp.net</Str>
			<Str sr="arg3" ve="3">Accept: application/json, text/plain, */*
content-type: application/json</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act64" ve="7">
			<code>328</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%kb_text
Texto
Texto presente na entrada atual, se houver&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%kb_text_before_cursor
Texto Antes do Cursor
Texto antes do cursor na entrada atual, se houver&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%kb_text_after_cursor
Texto Após o Cursor
Texto após o cursor na entrada atual, se houver&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%kb_text_selected
Texto Selecionado
Texto selecionado na entrada atual, se houver&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Str sr="arg1" ve="3">write(%code_pairing)</Str>
			<Int sr="arg2" val="50"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act65" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%time</Str>
			<Str sr="arg1" ve="3">%time</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act66" ve="7">
			<code>890</code>
			<Str sr="arg0" ve="3">%time</Str>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="0"/>
		</Action>
		<Action sr="act67" ve="7">
			<code>547</code>
			<label>adiciona * para não exibir os botões</label>
			<Str sr="arg0" ve="3">%buttons</Str>
			<Str sr="arg1" ve="3">*</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act68" ve="7">
			<code>547</code>
			<label>cor da informação do texto na cena
003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</label>
			<Str sr="arg0" ve="3">%color_text</Str>
			<Str sr="arg1" ve="3">#FF0000</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act69" ve="7">
			<code>547</code>
			<label>margem da cena
003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</label>
			<Str sr="arg0" ve="3">%margin</Str>
			<Str sr="arg1" ve="3">center</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act7" ve="7">
			<code>547</code>
			<label>&lt;b&gt;&lt;font color=cyan&gt;
path_progresso</label>
			<Str sr="arg0" ve="3">%path_progresso</Str>
			<Str sr="arg1" ve="3">/storage/emulated/0/Tasker/termux/zap-replay-api/instalacao/logs/progress.txt</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act70" ve="7">
			<code>547</code>
			<label>informação que irá ser exibido na cena
003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</label>
			<Str sr="arg0" ve="3">%text</Str>
			<Str sr="arg1" ve="3">Código Válido por um minuto
&lt;br&gt;
&lt;span style="color: #FFFF00;"&gt; Código de pareamento
&lt;br&gt;
➫ %code_pairing
&lt;br&gt;
Tempo restante %time</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act71" ve="7">
			<code>53</code>
			<Str sr="arg0" ve="3">003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</Str>
			<Str sr="arg1" ve="3">Exibir Informações Gerais</Str>
			<Int sr="arg2" val="11"/>
			<Str sr="arg3" ve="3"/>
		</Action>
		<Action sr="act72" ve="7">
			<code>30</code>
			<Int sr="arg0" val="0"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
		</Action>
		<Action sr="act73" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%time</lhs>
					<op>2</op>
					<rhs>0</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act74" ve="7">
			<code>61</code>
			<Int sr="arg0" val="1000"/>
		</Action>
		<Action sr="act75" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act76" ve="7">
			<code>547</code>
			<label>adiciona * para não exibir os botões</label>
			<Str sr="arg0" ve="3">%buttons</Str>
			<Str sr="arg1" ve="3">*</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act77" ve="7">
			<code>547</code>
			<label>margem da cena
003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</label>
			<Str sr="arg0" ve="3">%margin</Str>
			<Str sr="arg1" ve="3">center</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act78" ve="7">
			<code>547</code>
			<label>cor da informação do texto na cena
WAITING-FOR-SETTINGS v(1.0)</label>
			<Str sr="arg0" ve="3">%color_text</Str>
			<Str sr="arg1" ve="3">#FF0000</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act79" ve="7">
			<code>547</code>
			<label>informação que irá ser exibido na cena
003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</label>
			<Str sr="arg0" ve="3">%text</Str>
			<Str sr="arg1" ve="3">TEMPO EXCEDIDO TENTE NOVAMENTE !!!</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act8" ve="7">
			<code>417</code>
			<label>&lt;b&gt;&lt;font color=cyan&gt;
path_progresso</label>
			<Str sr="arg0" ve="3">%path_progresso</Str>
			<Str sr="arg1" ve="3">%logs_progresso</Str>
			<Int sr="arg2" val="1"/>
		</Action>
		<Action sr="act80" ve="7">
			<code>47</code>
			<Str sr="arg0" ve="3">003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1" val="0"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg2" val="100"/>
			<Int sr="arg3" val="100"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="1"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act81" ve="7">
			<code>30</code>
			<Int sr="arg0" val="0"/>
			<Int sr="arg1" val="5"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
		</Action>
		<Action sr="act82" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act83" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3"/>
		</Action>
		<Action sr="act84" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act85" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act86" ve="7">
			<code>245</code>
		</Action>
		<Action sr="act87" ve="7">
			<code>245</code>
		</Action>
		<Action sr="act88" ve="7">
			<code>129</code>
			<label>identifica o usuário que irá ser conectar e adicionar dentro da variável users</label>
			<Str sr="arg0" ve="3">var tempUsers = local('users');
var newData = JSON.parse(local('json_conect'));
delete newData.reset;

var usersList = [];
if (tempUsers) {
    usersList = JSON.parse(tempUsers);
    if (!Array.isArray(usersList)) usersList = [usersList];
    
    for (var i = 0; i &lt; usersList.length; i++) {
        if (usersList[i].phone === newData.phone) {
            setLocal('error','numero ja existe');
            exit();
        }
    }
}

usersList.push(newData);
  
users = JSON.stringify(usersList, null, 2);
setLocal('error', '');</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act89" ve="7">
			<code>410</code>
			<Str sr="arg0" ve="3">Tasker/termux/zap-replay-api/instalacao/users_connecteds.txt</Str>
			<Str sr="arg1" ve="3">%users</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act9" ve="7">
			<code>354</code>
			<Str sr="arg0" ve="3">%logs_progresso</Str>
			<Str sr="arg1" ve="3">%logs_progresso</Str>
			<Str sr="arg2" ve="3">
</Str>
		</Action>
		<Action sr="act90" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act91" ve="7">
			<code>135</code>
			<Int sr="arg0" val="1"/>
			<Int sr="arg1" val="1"/>
			<Str sr="arg2" ve="3">usuário conectado</Str>
		</Action>
		<Action sr="act92" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act93" ve="7">
			<code>135</code>
			<Int sr="arg0" val="1"/>
			<Int sr="arg1" val="1"/>
			<Str sr="arg2" ve="3">verificação de conexão do usuário</Str>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>3</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act94" ve="7">
			<code>300</code>
			<label>usuário conectado</label>
		</Action>
		<Action sr="act95" ve="7">
			<code>159</code>
			<Str sr="arg0" ve="3">003-RECEBER_MENSAGENS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1" val="1"/>
		</Action>
		<Action sr="act96" ve="7">
			<code>159</code>
			<Str sr="arg0" ve="3">002-RECONECTAR [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1" val="1"/>
		</Action>
		<Action sr="act97" ve="7">
			<code>159</code>
			<Str sr="arg0" ve="3">004- CENTRAL-DE-ATUALIZACOES [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1" val="1"/>
		</Action>
		<Action sr="act98" ve="7">
			<code>159</code>
			<Str sr="arg0" ve="3">001-BAIXAR-ICONES [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1" val="1"/>
		</Action>
		<Action sr="act99" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">004-CONFIRMAR-CONEXAO [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Img sr="icn" ve="2">
			<fle>/storage/emulated/0/Tasker/termux/zap-replay-api/icones/system.png</fle>
		</Img>
	</Task>
	<Task sr="task269">
		<cdate>1749763769927</cdate>
		<edate>1749763769927</edate>
		<id>269</id>
		<pri>104</pri>
		<Action sr="act0" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">002-CENA-INSTALACAO [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act1" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%destroy_scene</Str>
			<Str sr="arg1" ve="3">true</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
	</Task>
	<Task sr="task270">
		<cdate>1750698427946</cdate>
		<edate>1750698427946</edate>
		<id>270</id>
		<pri>102</pri>
		<Action sr="act0" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%logout</lhs>
					<op>2</op>
					<rhs>true</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act1" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">008-( SISTEMA )-INSTALACOES-GERAIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+10</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3">desconectar</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%logout/%ports</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act2" ve="7">
			<code>38</code>
		</Action>
	</Task>
	<Task sr="task272">
		<cdate>1749963928279</cdate>
		<edate>1749963928279</edate>
		<id>272</id>
		<pri>102</pri>
		<Action sr="act0" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">004-CONFIRMAR-CONEXAO [ zap-replay-api ] v(1.0)</Str>
		</Action>
	</Task>
	<Task sr="task276">
		<cdate>1750425870161</cdate>
		<edate>1751556033412</edate>
		<id>276</id>
		<nme>009-RECONECTAR [ zap-replay-api ] v(1.0)</nme>
		<pri>100</pri>
		<rty>2</rty>
		<Action sr="act0" ve="7">
			<code>547</code>
			<label>Caminho base para salvar arquivos da tarefa</label>
			<Str sr="arg0" ve="3">%termux_path</Str>
			<Str sr="arg1" ve="3">/storage/emulated/0/Tasker/termux/zap-replay-api/instalacao/sh</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act1" ve="7">
			<code>410</code>
			<label>Script com código a ser executado</label>
			<Str sr="arg0" ve="3">%termux_path/reconect.sh</Str>
			<Str sr="arg1" ve="3">#!/bin/bash

# ==========================
# ZapReplyApi
# Autor: Andredye Oliveira Melo
# Descrição: Busca e executa todas as instâncias do zapreplayapi encontradas em pastas ZapReplyApi[1025-9999]
# ==========================

# Caminho base no Termux
BASE_DIR="/data/data/com.termux/files/home"

# Cores
RED='\033[1;31m'
GREEN='\033[1;32m'
YELLOW='\033[1;33m'
CYAN='\033[1;36m'
RESET='\033[0m'

# Lista de diretórios válidos
valid_dirs=()

# Função para log com ícone e cor
log() {
  echo -e "${CYAN}🔍 $1${RESET}"
}
success() {
  echo -e "${GREEN}✅ $1${RESET}"
}
warning() {
  echo -e "${YELLOW}⚠️ $1${RESET}"
}
error() {
  echo -e "${RED}❌ $1${RESET}"
}

# ==========================
# ETAPA 1: BUSCAR PASTAS VÁLIDAS
# ==========================

log "Iniciando busca por instâncias do zapreplayapi..."

for i in $(seq 1025 9999); do
  DIR="$BASE_DIR/ZapReplyApi$i/src"
  BIN="$DIR/zapreplayapi"

  log "Verificando: $DIR"

  if [ -f "$BIN" ]; then
    success "Encontrado: $DIR"
    valid_dirs+=("$DIR")
    
  fi
done

# ==========================
# VERIFICAÇÃO FINAL DE RESULTADOS
# ==========================

if [ ${#valid_dirs[@]} -eq 0 ]; then
  error "Nenhuma instância encontrada."
  exit 1
fi

success "${#valid_dirs[@]} instância(s) encontrada(s). Iniciando execuções..."

# ==========================
# ETAPA 2: EXECUTAR CADA INSTÂNCIA
# ==========================

for DIR in "${valid_dirs[@]}"; do
  PORT=$(echo "$DIR" | grep -o '[0-9]\{4\}')
  success "Executando em: $DIR (porta $PORT)"

  cd "$DIR" || {
    error "Erro ao acessar o diretório: $DIR"
    continue
  }

  ./zapreplayapi rest --port="$PORT" --debug=true || {
    warning "Falha ao executar em: $DIR (pulando para o próximo)"
    continue
  }
done

success "Todas as execuções foram processadas com sucesso."
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act2" ve="7">
			<code>389</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""/&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Str sr="arg1" ve="3">%exe
%script
%path
%bkg</Str>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3">$PREFIX/bin/bash
%termux_path/reconect.sh
/sdcard/
true</Str>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="3"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="0"/>
		</Action>
		<Action sr="act3" ve="7">
			<code>365</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""/&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Str sr="arg1" ve="3">TermuxCommand(%exe,%script,%path,%bkg)</Str>
		</Action>
		<Img sr="icn" ve="2">
			<fle>/storage/emulated/0/Tasker/termux/zap-replay-api/icones/system.png</fle>
		</Img>
	</Task>
	<Task sr="task278">
		<cdate>1750801605699</cdate>
		<edate>1751556037349</edate>
		<id>278</id>
		<nme>010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</nme>
		<rty>2</rty>
		<Action sr="act0" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%caller1</lhs>
					<op>2</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act1" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>image_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act10" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>group_image_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act100" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>group_presence_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act101" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var port = local('port');
var number = local('number');
var type_presence = local('type_presence');
var duration = local('duration');

var missingVariables = [];

if (!port) {
    missingVariables.push("| %port |");
}
if (!number) {
    missingVariables.push("| %number |");
}
if (!type_presence) {
    missingVariables.push("| %type_presence |");
}
if (!duration) {
    missingVariables.push("| %duration |");
}

// Verificação adicional para a variável duration
if (duration) {
    if (isNaN(duration)) {
        missingVariables.push("| %duration (valor não numérico) |");
    } else if (Number(duration) === 0) {
        missingVariables.push("| %duration (valor não pode ser zero) |");
    }
}

if (missingVariables.length &gt; 0) {
    if (missingVariables.length === 1) {
        variable_status = "A variável\n" + missingVariables[0] + "\nnão está definida ou contém um valor inválido.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    } else {
        variable_status = "As variáveis\n" + missingVariables.join(", ") + "\nnão estão definidas ou contêm valores inválidos.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    }
} else {
    variable_status = "Todas as variáveis estão definidas corretamente.\n\n";
    setLocal('variable_status', variable_status);
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act102" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act103" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act104" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act105" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act106" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act107" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act108" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act109" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>document_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act11" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var port = local('port');
var number = local('number');
var path = local('path');
var single_view = local('single_view');
var display_forwarded = local('display_forwarded');

var missingVariables = [];

if (!port) {
    missingVariables.push("| %port |");
}
if (!number) {
    missingVariables.push("| %number |");
}
if (!path) {
    missingVariables.push("| %path |");
}
if (!single_view) {
    missingVariables.push("| %single_view |");
}
if (!display_forwarded) {
    missingVariables.push("| %display_forwarded |");
}

if (missingVariables.length &gt; 0) {
    if (missingVariables.length === 1) {
        variable_status = "A variável\n" + missingVariables[0] + "\nnão está definida.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    } else {
        variable_status = "As variáveis\n" + missingVariables.join(", ") + "\nnão estão definidas.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    }
} else {
    variable_status = "Todas as variáveis estão definidas.\n\n";
    setLocal('variable_status', variable_status);
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act110" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var port = local('port');
var number = local('number');
var path = local('path');
var display_forwarded = local('display_forwarded');

var missingVariables = [];

if (!port) {
    missingVariables.push("| %port |");
}
if (!number) {
    missingVariables.push("| %number |");
}
if (!path) {
    missingVariables.push("| %path |");
}
if (!display_forwarded) {
    missingVariables.push("| %display_forwarded |");
}

if (missingVariables.length &gt; 0) {
    if (missingVariables.length === 1) {
        variable_status = "A variável\n" + missingVariables[0] + "\nnão está definida.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    } else {
        variable_status = "As variáveis\n" + missingVariables.join(", ") + "\nnão estão definidas.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    }
} else {
    variable_status = "Todas as variáveis estão definidas.\n\n";
    setLocal('variable_status', variable_status);
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act111" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act112" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act113" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act114" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act115" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act116" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act117" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act118" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>group_document_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act119" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var port = local('port');
var number = local('number');
var path = local('path');
var display_forwarded = local('display_forwarded');

var missingVariables = [];

if (!port) {
    missingVariables.push("| %port |");
}
if (!number) {
    missingVariables.push("| %number |");
}
if (!path) {
    missingVariables.push("| %path |");
}
if (!display_forwarded) {
    missingVariables.push("| %display_forwarded |");
}

if (missingVariables.length &gt; 0) {
    if (missingVariables.length === 1) {
        variable_status = "A variável\n" + missingVariables[0] + "\nnão está definida.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    } else {
        variable_status = "As variáveis\n" + missingVariables.join(", ") + "\nnão estão definidas.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    }
} else {
    variable_status = "Todas as variáveis estão definidas.\n\n";
    setLocal('variable_status', variable_status);
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act12" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act120" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act121" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act122" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act123" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act124" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act125" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act126" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act127" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>text_status_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act128" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act129" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act13" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act130" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act131" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act132" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act133" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act134" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act135" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>image_status_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act136" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">// PARTE 1 – Verificação de variáveis obrigatórias
var type = local('type');
var port = local('port');
var caption = local('caption');
var number = local('number');
var path = local('path');

var missingVariables = [];

if (!type &amp;&amp; type !== "0") missingVariables.push("| %type |");
if (!port &amp;&amp; port !== "0") missingVariables.push("| %port |");
if (!caption &amp;&amp; caption !== "0") missingVariables.push("| %caption |");
if (!path &amp;&amp; path !== "0") missingVariables.push("| %path |");
if (number === undefined || number === null) missingVariables.push("| %number |");

if (missingVariables.length &gt; 0) {
    var variable_status = (missingVariables.length === 1)
        ? "A variável\n" + missingVariables[0] + "\nnão está definida.\n\n"
        : "As variáveis\n" + missingVariables.join(", ") + "\nnão estão definidas.\n\n";

    setLocal('variable_status', variable_status);
    setLocal('variable_err', "no variable");
} else {
    var variable_status = "Todas as variáveis estão definidas.\n\n";
    setLocal('variable_status', variable_status);
    setLocal('variable_err', "");
}

// PARTE 2 – Verificação dos números na base de dados
var usersJson = local("users");
var numberInput = local("number");

var number_valid = "";

try {
    var users = JSON.parse(usersJson);
    if (!Array.isArray(users)) users = [];

    var numberList = numberInput
        .split(/[,;\s]+/)
        .map(n =&gt; n.trim())
        .filter(n =&gt; /^\d{12}$/.test(n));

    if (numberList.length === 0) {
        number_valid = "❌ Número inválido !!.";
    } else {
        var userPhones = users.map(user =&gt; user.phone);
        var allExist = numberList.every(num =&gt; userPhones.includes(num));
        if (allExist) {
            number_valid = "✅ O número existe na base de dados.";
        } else {
            var numerosExistentes = userPhones.join(", ");
            if (userPhones.length === 1) {
                number_valid = "❌ Você só pode enviar status para o número cadastrado em um API especificamente apenas este: " + numerosExistentes;
            } else {
                number_valid = "❌ Você só pode enviar status para os números cadastrados em um API especificamente apenas esses: " + numerosExistentes;
            }
        }
    }

} catch (e) {
    number_valid = "❌ Erro ao verificar os dados.";
}

setLocal("number_valid", number_valid);</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act137" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%number_valid</lhs>
					<op>4</op>
					<rhs>❌</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act138" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%number_valid</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">7000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act139" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act14" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act140" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act141" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act142" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act143" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act144" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act145" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act146" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act147" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act148" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act149" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>video_status_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act15" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act150" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">// PARTE 1 – Verificação de variáveis obrigatórias
var type = local('type');
var port = local('port');
var caption = local('caption');
var number = local('number');
var path = local('path');

var missingVariables = [];

if (!type &amp;&amp; type !== "0") missingVariables.push("| %type |");
if (!port &amp;&amp; port !== "0") missingVariables.push("| %port |");
if (!caption &amp;&amp; caption !== "0") missingVariables.push("| %caption |");
if (!path &amp;&amp; path !== "0") missingVariables.push("| %path |");
if (number === undefined || number === null) missingVariables.push("| %number |");

if (missingVariables.length &gt; 0) {
    var variable_status = (missingVariables.length === 1)
        ? "A variável\n" + missingVariables[0] + "\nnão está definida.\n\n"
        : "As variáveis\n" + missingVariables.join(", ") + "\nnão estão definidas.\n\n";

    setLocal('variable_status', variable_status);
    setLocal('variable_err', "no variable");
} else {
    var variable_status = "Todas as variáveis estão definidas.\n\n";
    setLocal('variable_status', variable_status);
    setLocal('variable_err', "");
}

// PARTE 2 – Verificação dos números na base de dados
var usersJson = local("users");
var numberInput = local("number");

var number_valid = "";

try {
    var users = JSON.parse(usersJson);
    if (!Array.isArray(users)) users = [];

    var numberList = numberInput
        .split(/[,;\s]+/)
        .map(n =&gt; n.trim())
        .filter(n =&gt; /^\d{12}$/.test(n));

    if (numberList.length === 0) {
        number_valid = "❌ Número inválido !!.";
    } else {
        var userPhones = users.map(user =&gt; user.phone);
        var allExist = numberList.every(num =&gt; userPhones.includes(num));
        if (allExist) {
            number_valid = "✅ O número existe na base de dados.";
        } else {
            var numerosExistentes = userPhones.join(", ");
            if (userPhones.length === 1) {
                number_valid = "❌ Você só pode enviar status para o número cadastrado em um API especificamente apenas este: " + numerosExistentes;
            } else {
                number_valid = "❌ Você só pode enviar status para os números cadastrados em um API especificamente apenas esses: " + numerosExistentes;
            }
        }
    }

} catch (e) {
    number_valid = "❌ Erro ao verificar os dados.";
}

setLocal("number_valid", number_valid);</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act151" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%number_valid</lhs>
					<op>4</op>
					<rhs>❌</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act152" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%number_valid</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">7000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act153" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act154" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act155" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act156" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act157" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act158" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act159" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act16" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act160" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act161" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act162" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act163" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>call_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act164" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var type = local('type');
var port = local('port');
var number = local('number');
var call_id = local('call_id');

var variaveisAusentes = [];

if (!type &amp;&amp; type !== "0") {
    variaveisAusentes.push("| %type |");
}
if (!port &amp;&amp; port !== "0") {
    variaveisAusentes.push("| %port |");
}
if (!number &amp;&amp; number !== "0") {
    variaveisAusentes.push("| %number |");
}
if (!call_id &amp;&amp; call_id !== "0") {
    variaveisAusentes.push("| %call_id |");
}

if (variaveisAusentes.length &gt; 0) {
    var statusVariaveis = (variaveisAusentes.length === 1)
        ? "A variável\n" + variaveisAusentes[0] + "\nnão está definida.\n\n"
        : "As variáveis\n" + variaveisAusentes.join(", ") + "\nnão estão definidas.\n\n";

    setLocal('variable_status', statusVariaveis);
    setLocal('variable_err', "variavel_ausente");
} else {
    var statusVariaveis = "Todas as variáveis estão definidas.\n\n";
    setLocal('variable_status', statusVariaveis);
    setLocal('variable_err', "");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act165" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act166" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act167" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act168" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act169" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act17" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act170" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act171" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act172" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>avatar_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act173" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var type = local('type');
var port = local('port');
var number = local('number');
var high_resolution = local('high_resolution');

var variaveisAusentes = [];

if (!type &amp;&amp; type !== "0") {
    variaveisAusentes.push("| %type |");
}
if (!port &amp;&amp; port !== "0") {
    variaveisAusentes.push("| %port |");
}
if (!number &amp;&amp; number !== "0") {
    variaveisAusentes.push("| %number |");
}
if (!high_resolution &amp;&amp; high_resolution !== "0") {
    variaveisAusentes.push("| %high_resolution |");
}

if (variaveisAusentes.length &gt; 0) {
    var statusVariaveis = (variaveisAusentes.length === 1)
        ? "A variável\n" + variaveisAusentes[0] + "\nnão está definida.\n\n"
        : "As variáveis\n" + variaveisAusentes.join(", ") + "\nnão estão definidas.\n\n";

    setLocal('variable_status', statusVariaveis);
    setLocal('variable_err', "variavel_ausente");
} else {
    var statusVariaveis = "Todas as variáveis estão definidas.\n\n";
    setLocal('variable_status', statusVariaveis);
    setLocal('variable_err', "");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act174" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act175" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act176" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act177" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act178" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act179" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act18" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act180" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act181" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>get_groups_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act182" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var port = local('port');

var variaveisAusentes = [];

if (!port &amp;&amp; port !== "0") {
    variaveisAusentes.push("| %port |");
}

if (variaveisAusentes.length &gt; 0) {
    var statusVariaveis = "A variável\n" + variaveisAusentes[0] + "\nnão está definida.\n\n";
    setLocal('variable_status', statusVariaveis);
    setLocal('variable_err', "variavel_ausente");
} else {
    var statusVariaveis = "Todas as variáveis estão definidas.\n\n";
    setLocal('variable_status', statusVariaveis);
    setLocal('variable_err', "");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act183" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act184" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act185" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act186" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act187" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act188" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act189" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act19" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>video_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act190" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>poll_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act191" ve="7">
			<code>129</code>
			<label>verifica se as informações na variável estão repetidas</label>
			<Str sr="arg0" ve="3">var respostas = {};
var repeticoesDetalhadas = [];
var houveRepeticao = false;

// Verificar poll1 até poll12
for (var i = 1; i &lt;= 12; i++) {
    var nome = 'poll' + i;
    var valor = local(nome);

    if (valor &amp;&amp; valor.trim() !== "") {
        var valorOriginal = valor.trim();
        var chaveComparacao = valorOriginal.toLowerCase(); // Normaliza para comparação

        if (respostas[chaveComparacao]) {
            respostas[chaveComparacao].push({ nome: nome, valor: valorOriginal });
        } else {
            respostas[chaveComparacao] = [{ nome: nome, valor: valorOriginal }];
        }
    }
}

// Verifica e monta a mensagem apenas com os valores realmente repetidos
for (var chave in respostas) {
    var grupo = respostas[chave];
    if (grupo.length &gt; 1) {
        houveRepeticao = true;

        var nomes = grupo.map(item =&gt; item.nome).join(", ");
        var exemploValor = grupo[0].valor;

        repeticoesDetalhadas.push('O valor "' + exemploValor + '" está repetido nas variáveis: ' + nomes);
    }
}

if (houveRepeticao) {
    var statusFinal = "⚠️ Repetições encontradas:\n\n" + repeticoesDetalhadas.join("\n") + "\n\n";
    setLocal('variable_status', statusFinal);
    setLocal('variable_repeated', "valores_repetidos");
} else {
    // Não define variable_status se não houver erro
    setLocal('variable_repeated', "");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act192" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_repeated</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act193" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act194" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act195" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act196" ve="7">
			<code>129</code>
			<label>verifica se as variáveis necessárias para o envio estão definidas</label>
			<Str sr="arg0" ve="3">var type = local('type');
var port = local('port');
var number = local('number');
var poll_question = local('poll_question');
var poll1 = local('poll1');
var poll2 = local('poll2');
var max_answer = local('max_answer');  // Variável adicionada

var mensagensStatus = [];

// Verificações padrão
var variaveisBasicasFaltando = [];

if (!type &amp;&amp; type !== "0") variaveisBasicasFaltando.push("%type");
if (!port &amp;&amp; port !== "0") variaveisBasicasFaltando.push("%port");
if (!number &amp;&amp; number !== "0") variaveisBasicasFaltando.push("%number");
if (!max_answer &amp;&amp; max_answer !== "0") variaveisBasicasFaltando.push("%max_answer"); // Verificação adicionada

if (variaveisBasicasFaltando.length === 1) {
    mensagensStatus.push("A variável " + variaveisBasicasFaltando[0] + " não está definida.");
} else if (variaveisBasicasFaltando.length &gt; 1) {
    mensagensStatus.push("As variáveis " + variaveisBasicasFaltando.join(", ") + " não estão definidas.");
}

// Verificação da pergunta da enquete
if (!poll_question) {
    mensagensStatus.push("A enquete precisa conter uma pergunta. A variável 'poll_question' deve estar definida.");
}

// Verificação das respostas da enquete
var opcoesFaltando = [];
if (!poll1) opcoesFaltando.push("'poll1'");
if (!poll2) opcoesFaltando.push("'poll2'");

if (opcoesFaltando.length === 1) {
    mensagensStatus.push("A fim de garantir o funcionamento adequado da enquete, a variável " + opcoesFaltando[0] + " deve estar previamente definida.");
} else if (opcoesFaltando.length === 2) {
    mensagensStatus.push("A fim de garantir o funcionamento adequado da enquete, as variáveis " + opcoesFaltando.join(" e ") + " devem estar previamente definidas.");
}

// Saída final
if (mensagensStatus.length &gt; 0) {
    var statusFinal = mensagensStatus.join("\n") + "\n\n";
    setLocal('variable_status', statusFinal);
    setLocal('variable_err', "variavel_ausente");
} else {
    setLocal('variable_status', "Todas as variáveis estão definidas.\n\n");
    setLocal('variable_err', "");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act197" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act198" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act199" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act2" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var port = local('port');
var number = local('number');
var path = local('path');
var single_view = local('single_view');
var display_forwarded = local('display_forwarded');

var missingVariables = [];

if (!port) {
    missingVariables.push("| %port |");
}
if (!number) {
    missingVariables.push("| %number |");
}
if (!path) {
    missingVariables.push("| %path |");
}
if (!single_view) {
    missingVariables.push("| %single_view |");
}
if (!display_forwarded) {
    missingVariables.push("| %display_forwarded |");
}

if (missingVariables.length &gt; 0) {
    if (missingVariables.length === 1) {
        variable_status = "A variável\n" + missingVariables[0] + "\nnão está definida.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    } else {
        variable_status = "As variáveis\n" + missingVariables.join(", ") + "\nnão estão definidas.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    }
} else {
    variable_status = "Todas as variáveis estão definidas.\n\n";
    setLocal('variable_status', variable_status);
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act20" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var port = local('port');
var number = local('number');
var path = local('path');
var single_view = local('single_view');
var display_forwarded = local('display_forwarded');

var missingVariables = [];

if (!port) {
    missingVariables.push("| %port |");
}
if (!number) {
    missingVariables.push("| %number |");
}
if (!path) {
    missingVariables.push("| %path |");
}
if (!single_view) {
    missingVariables.push("| %single_view |");
}
if (!display_forwarded) {
    missingVariables.push("| %display_forwarded |");
}

if (missingVariables.length &gt; 0) {
    if (missingVariables.length === 1) {
        variable_status = "A variável\n" + missingVariables[0] + "\nnão está definida.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    } else {
        variable_status = "As variáveis\n" + missingVariables.join(", ") + "\nnão estão definidas.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    }
} else {
    variable_status = "Todas as variáveis estão definidas.\n\n";
    setLocal('variable_status', variable_status);
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act200" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act201" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act202" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act203" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act204" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>group_poll_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act205" ve="7">
			<code>129</code>
			<label>verifica se as informações na variável estão repetidas</label>
			<Str sr="arg0" ve="3">var respostas = {};
var repeticoesDetalhadas = [];
var houveRepeticao = false;

// Verificar poll1 até poll12
for (var i = 1; i &lt;= 12; i++) {
    var nome = 'poll' + i;
    var valor = local(nome);

    if (valor &amp;&amp; valor.trim() !== "") {
        var valorOriginal = valor.trim();
        var chaveComparacao = valorOriginal.toLowerCase(); // Normaliza para comparação

        if (respostas[chaveComparacao]) {
            respostas[chaveComparacao].push({ nome: nome, valor: valorOriginal });
        } else {
            respostas[chaveComparacao] = [{ nome: nome, valor: valorOriginal }];
        }
    }
}

// Verifica e monta a mensagem apenas com os valores realmente repetidos
for (var chave in respostas) {
    var grupo = respostas[chave];
    if (grupo.length &gt; 1) {
        houveRepeticao = true;

        var nomes = grupo.map(item =&gt; item.nome).join(", ");
        var exemploValor = grupo[0].valor;

        repeticoesDetalhadas.push('O valor "' + exemploValor + '" está repetido nas variáveis: ' + nomes);
    }
}

if (houveRepeticao) {
    var statusFinal = "⚠️ Repetições encontradas:\n\n" + repeticoesDetalhadas.join("\n") + "\n\n";
    setLocal('variable_status', statusFinal);
    setLocal('variable_repeated', "valores_repetidos");
} else {
    // Não define variable_status se não houver erro
    setLocal('variable_repeated', "");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act206" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_repeated</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act207" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act208" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act209" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act21" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act210" ve="7">
			<code>129</code>
			<label>verifica se as variáveis necessárias para o envio estão definidas</label>
			<Str sr="arg0" ve="3">var type = local('type');
var port = local('port');
var number = local('number');
var poll_question = local('poll_question');
var poll1 = local('poll1');
var poll2 = local('poll2');
var max_answer = local('max_answer');  // Variável adicionada

var mensagensStatus = [];

// Verificações padrão
var variaveisBasicasFaltando = [];

if (!type &amp;&amp; type !== "0") variaveisBasicasFaltando.push("%type");
if (!port &amp;&amp; port !== "0") variaveisBasicasFaltando.push("%port");
if (!number &amp;&amp; number !== "0") variaveisBasicasFaltando.push("%number");
if (!max_answer &amp;&amp; max_answer !== "0") variaveisBasicasFaltando.push("%max_answer"); // Verificação adicionada

if (variaveisBasicasFaltando.length === 1) {
    mensagensStatus.push("A variável " + variaveisBasicasFaltando[0] + " não está definida.");
} else if (variaveisBasicasFaltando.length &gt; 1) {
    mensagensStatus.push("As variáveis " + variaveisBasicasFaltando.join(", ") + " não estão definidas.");
}

// Verificação da pergunta da enquete
if (!poll_question) {
    mensagensStatus.push("A enquete precisa conter uma pergunta. A variável 'poll_question' deve estar definida.");
}

// Verificação das respostas da enquete
var opcoesFaltando = [];
if (!poll1) opcoesFaltando.push("'poll1'");
if (!poll2) opcoesFaltando.push("'poll2'");

if (opcoesFaltando.length === 1) {
    mensagensStatus.push("A fim de garantir o funcionamento adequado da enquete, a variável " + opcoesFaltando[0] + " deve estar previamente definida.");
} else if (opcoesFaltando.length === 2) {
    mensagensStatus.push("A fim de garantir o funcionamento adequado da enquete, as variáveis " + opcoesFaltando.join(" e ") + " devem estar previamente definidas.");
}

// Saída final
if (mensagensStatus.length &gt; 0) {
    var statusFinal = mensagensStatus.join("\n") + "\n\n";
    setLocal('variable_status', statusFinal);
    setLocal('variable_err', "variavel_ausente");
} else {
    setLocal('variable_status', "Todas as variáveis estão definidas.\n\n");
    setLocal('variable_err', "");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act211" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act212" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act213" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act214" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act215" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act216" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act217" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act218" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>location_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act219" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var type = local('type');
var port = local('port');
var number = local('number');
var lat = local('lat');
var log = local('log');
var display_forwarded = local('display_forwarded');

var missingVariables = [];

// Verificação individual das variáveis
if (!type &amp;&amp; type !== "0") missingVariables.push("| %type |");
if (!port &amp;&amp; port !== "0") missingVariables.push("| %port |");
if (!number &amp;&amp; number !== "0") missingVariables.push("| %number |");
if (!lat &amp;&amp; lat !== "0") missingVariables.push("| %lat |");
if (!log &amp;&amp; log !== "0") missingVariables.push("| %log |");
if (!display_forwarded &amp;&amp; display_forwarded !== "0") missingVariables.push("| %display_forwarded |");

// Saída condicional
if (missingVariables.length &gt; 0) {
    if (missingVariables.length === 1) {
        var variable_status = "A variável\n" + missingVariables[0] + "\nnão está definida.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    } else {
        var variable_status = "As variáveis\n" + missingVariables.join(", ") + "\nnão estão definidas.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    }
} else {
    setLocal('variable_status', "Todas as variáveis estão definidas.\n\n");
    setLocal('variable_err', "");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act22" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act220" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act221" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act222" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act223" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act224" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act225" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act226" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act227" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>group_location_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act228" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var type = local('type');
var port = local('port');
var number = local('number');
var lat = local('lat');
var log = local('log');
var display_forwarded = local('display_forwarded');

var missingVariables = [];

// Verificação individual das variáveis
if (!type &amp;&amp; type !== "0") missingVariables.push("| %type |");
if (!port &amp;&amp; port !== "0") missingVariables.push("| %port |");
if (!number &amp;&amp; number !== "0") missingVariables.push("| %number |");
if (!lat &amp;&amp; lat !== "0") missingVariables.push("| %lat |");
if (!log &amp;&amp; log !== "0") missingVariables.push("| %log |");
if (!display_forwarded &amp;&amp; display_forwarded !== "0") missingVariables.push("| %display_forwarded |");

// Saída condicional
if (missingVariables.length &gt; 0) {
    if (missingVariables.length === 1) {
        var variable_status = "A variável\n" + missingVariables[0] + "\nnão está definida.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    } else {
        var variable_status = "As variáveis\n" + missingVariables.join(", ") + "\nnão estão definidas.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    }
} else {
    setLocal('variable_status', "Todas as variáveis estão definidas.\n\n");
    setLocal('variable_err', "");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act229" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act23" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act230" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act231" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act232" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act233" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act234" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act235" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act236" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>link_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act237" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var type = local('type');
var port = local('port');
var number = local('number');
var display_forwarded = local('display_forwarded');
var link = local('link');

var missingVariables = [];

// Verificação individual
if (!type &amp;&amp; type !== "0") missingVariables.push("| %type |");
if (!port &amp;&amp; port !== "0") missingVariables.push("| %port |");
if (!number &amp;&amp; number !== "0") missingVariables.push("| %number |");
if (!display_forwarded &amp;&amp; display_forwarded !== "0") missingVariables.push("| %display_forwarded |");
if (!link &amp;&amp; link !== "0") missingVariables.push("| %link |");

// Saída condicional
if (missingVariables.length &gt; 0) {
    if (missingVariables.length === 1) {
        var variable_status = "A variável\n" + missingVariables[0] + "\nnão está definida.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    } else {
        var variable_status = "As variáveis\n" + missingVariables.join(", ") + "\nnão estão definidas.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    }
} else {
    setLocal('variable_status', "Todas as variáveis estão definidas.\n\n");
    setLocal('variable_err', "");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act238" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act239" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act24" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act240" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act241" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act242" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act243" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act244" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act245" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>group_link_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act246" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var type = local('type');
var port = local('port');
var number = local('number');
var display_forwarded = local('display_forwarded');
var link = local('link');

var missingVariables = [];

// Verificação individual
if (!type &amp;&amp; type !== "0") missingVariables.push("| %type |");
if (!port &amp;&amp; port !== "0") missingVariables.push("| %port |");
if (!number &amp;&amp; number !== "0") missingVariables.push("| %number |");
if (!display_forwarded &amp;&amp; display_forwarded !== "0") missingVariables.push("| %display_forwarded |");
if (!link &amp;&amp; link !== "0") missingVariables.push("| %link |");

// Saída condicional
if (missingVariables.length &gt; 0) {
    if (missingVariables.length === 1) {
        var variable_status = "A variável\n" + missingVariables[0] + "\nnão está definida.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    } else {
        var variable_status = "As variáveis\n" + missingVariables.join(", ") + "\nnão estão definidas.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    }
} else {
    setLocal('variable_status', "Todas as variáveis estão definidas.\n\n");
    setLocal('variable_err', "");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act247" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act248" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act249" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act25" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act250" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act251" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act252" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act253" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act254" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>reaction_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act255" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var type = local('type');
var port = local('port');
var number = local('number');
var reaction = local('reaction');

var missingVariables = [];

// Verificação individual
if (!type &amp;&amp; type !== "0") missingVariables.push("| %type |");
if (!port &amp;&amp; port !== "0") missingVariables.push("| %port |");
if (!number &amp;&amp; number !== "0") missingVariables.push("| %number |");
if (!reaction &amp;&amp; reaction !== "0") missingVariables.push("| %reaction |");

// Saída condicional
if (missingVariables.length &gt; 0) {
    if (missingVariables.length === 1) {
        var variable_status = "A variável\n" + missingVariables[0] + "\nnão está definida.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    } else {
        var variable_status = "As variáveis\n" + missingVariables.join(", ") + "\nnão estão definidas.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    }
} else {
    setLocal('variable_status', "Todas as variáveis estão definidas.\n\n");
    setLocal('variable_err', "");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act256" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act257" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act258" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act259" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act26" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act260" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act261" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act262" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act263" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>group_reaction_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act264" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var type = local('type');
var port = local('port');
var number = local('number');
var reaction = local('reaction');

var missingVariables = [];

// Verificação individual
if (!type &amp;&amp; type !== "0") missingVariables.push("| %type |");
if (!port &amp;&amp; port !== "0") missingVariables.push("| %port |");
if (!number &amp;&amp; number !== "0") missingVariables.push("| %number |");
if (!reaction &amp;&amp; reaction !== "0") missingVariables.push("| %reaction |");

// Saída condicional
if (missingVariables.length &gt; 0) {
    if (missingVariables.length === 1) {
        var variable_status = "A variável\n" + missingVariables[0] + "\nnão está definida.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    } else {
        var variable_status = "As variáveis\n" + missingVariables.join(", ") + "\nnão estão definidas.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    }
} else {
    setLocal('variable_status', "Todas as variáveis estão definidas.\n\n");
    setLocal('variable_err', "");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act265" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act266" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act267" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act268" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act269" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act27" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act270" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act271" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act272" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>update_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act273" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var type = local('type');
var port = local('port');
var number = local('number');
var message_id = local('message_id');
var update_message = local('update_message');

var missingVariables = [];

// Verificação individual
if (!type &amp;&amp; type !== "0") missingVariables.push("| %type |");
if (!port &amp;&amp; port !== "0") missingVariables.push("| %port |");
if (!number &amp;&amp; number !== "0") missingVariables.push("| %number |");
if (!message_id &amp;&amp; message_id !== "0") missingVariables.push("| %message_id |");
if (!update_message &amp;&amp; update_message !== "0") missingVariables.push("| %update_message |");

// Saída condicional
if (missingVariables.length &gt; 0) {
    if (missingVariables.length === 1) {
        var variable_status = "A variável\n" + missingVariables[0] + "\nnão está definida.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    } else {
        var variable_status = "As variáveis\n" + missingVariables.join(", ") + "\nnão estão definidas.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    }
} else {
    setLocal('variable_status', "Todas as variáveis estão definidas.\n\n");
    setLocal('variable_err', "");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act274" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act275" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act276" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act277" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act278" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act279" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act28" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>group_video_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act280" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act281" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>group_update_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act282" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var type = local('type');
var port = local('port');
var number = local('number');
var message_id = local('message_id');
var update_message = local('update_message');

var missingVariables = [];

// Verificação individual
if (!type &amp;&amp; type !== "0") missingVariables.push("| %type |");
if (!port &amp;&amp; port !== "0") missingVariables.push("| %port |");
if (!number &amp;&amp; number !== "0") missingVariables.push("| %number |");
if (!message_id &amp;&amp; message_id !== "0") missingVariables.push("| %message_id |");
if (!update_message &amp;&amp; update_message !== "0") missingVariables.push("| %update_message |");

// Saída condicional
if (missingVariables.length &gt; 0) {
    if (missingVariables.length === 1) {
        var variable_status = "A variável\n" + missingVariables[0] + "\nnão está definida.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    } else {
        var variable_status = "As variáveis\n" + missingVariables.join(", ") + "\nnão estão definidas.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    }
} else {
    setLocal('variable_status', "Todas as variáveis estão definidas.\n\n");
    setLocal('variable_err', "");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act283" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act284" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act285" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act286" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act287" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act288" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act289" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act29" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var port = local('port');
var number = local('number');
var path = local('path');
var single_view = local('single_view');
var display_forwarded = local('display_forwarded');

var missingVariables = [];

if (!port) {
    missingVariables.push("| %port |");
}
if (!number) {
    missingVariables.push("| %number |");
}
if (!path) {
    missingVariables.push("| %path |");
}
if (!single_view) {
    missingVariables.push("| %single_view |");
}
if (!display_forwarded) {
    missingVariables.push("| %display_forwarded |");
}

if (missingVariables.length &gt; 0) {
    if (missingVariables.length === 1) {
        variable_status = "A variável\n" + missingVariables[0] + "\nnão está definida.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    } else {
        variable_status = "As variáveis\n" + missingVariables.join(", ") + "\nnão estão definidas.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    }
} else {
    variable_status = "Todas as variáveis estão definidas.\n\n";
    setLocal('variable_status', variable_status);
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act290" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>mark_read_text_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act291" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var type = local('type');
var port = local('port');
var number = local('number');
var message_id = local('message_id');

var missingVariables = [];

// Verificação individual
if (!type &amp;&amp; type !== "0") missingVariables.push("| %type |");
if (!port &amp;&amp; port !== "0") missingVariables.push("| %port |");
if (!number &amp;&amp; number !== "0") missingVariables.push("| %number |");
if (!message_id &amp;&amp; message_id !== "0") missingVariables.push("| %message_id |");

// Saída condicional
if (missingVariables.length &gt; 0) {
    if (missingVariables.length === 1) {
        var variable_status = "A variável\n" + missingVariables[0] + "\nnão está definida.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    } else {
        var variable_status = "As variáveis\n" + missingVariables.join(", ") + "\nnão estão definidas.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    }
} else {
    setLocal('variable_status', "Todas as variáveis estão definidas.\n\n");
    setLocal('variable_err', "");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act292" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act293" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act294" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act295" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act296" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act297" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act298" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act299" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>mark_read_audio_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act3" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act30" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act300" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var type = local('type');
var port = local('port');
var number = local('number');
var message_id = local('message_id');

var missingVariables = [];

// Verificação individual
if (!type &amp;&amp; type !== "0") missingVariables.push("| %type |");
if (!port &amp;&amp; port !== "0") missingVariables.push("| %port |");
if (!number &amp;&amp; number !== "0") missingVariables.push("| %number |");
if (!message_id &amp;&amp; message_id !== "0") missingVariables.push("| %message_id |");

// Saída condicional
if (missingVariables.length &gt; 0) {
    if (missingVariables.length === 1) {
        var variable_status = "A variável\n" + missingVariables[0] + "\nnão está definida.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    } else {
        var variable_status = "As variáveis\n" + missingVariables.join(", ") + "\nnão estão definidas.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    }
} else {
    setLocal('variable_status', "Todas as variáveis estão definidas.\n\n");
    setLocal('variable_err', "");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act301" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act302" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act303" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act304" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act305" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act306" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act307" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act308" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>group_mark_read_text_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act309" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var type = local('type');
var port = local('port');
var number = local('number');
var message_id = local('message_id');
var jid = local('jid');

var missingVariables = [];

// Verificação individual
if (!type &amp;&amp; type !== "0") missingVariables.push("| %type |");
if (!port &amp;&amp; port !== "0") missingVariables.push("| %port |");
if (!number &amp;&amp; number !== "0") missingVariables.push("| %number |");
if (!message_id &amp;&amp; message_id !== "0") missingVariables.push("| %message_id |");
if (!jid &amp;&amp; jid !== "0") missingVariables.push("| %jid |");

// Saída condicional
if (missingVariables.length &gt; 0) {
    if (missingVariables.length === 1) {
        var variable_status = "A variável\n" + missingVariables[0] + "\nnão está definida.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    } else {
        var variable_status = "As variáveis\n" + missingVariables.join(", ") + "\nnão estão definidas.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    }
} else {
    setLocal('variable_status', "Todas as variáveis estão definidas.\n\n");
    setLocal('variable_err', "");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act31" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act310" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act311" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act312" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act313" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act314" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act315" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act316" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act317" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>create_group_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act318" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var partsRaw = local('participants');

var partsArray = partsRaw
    .split(/[\n,]+/)
    .map(function(p) { return p.trim(); })
    .filter(function(p) { return p.length &gt; 0; });

var erros = [];

for (var i = 0; i &lt; partsArray.length; i++) {
    var p = partsArray[i];
    
    if (!/^\d+$/.test(p)) {
        erros.push("❌ Participante inválido: | " + p + " | → Contém caracteres não numéricos.");
    } else if (p.length !== 12) {
        erros.push("❌ Participante inválido: | " + p + " | → Deve conter exatamente 12 dígitos.");
    }
}

if (erros.length &gt; 0) {
    var mensagem = erros.join("\n") + "\n\nTodos os participantes devem conter apenas números e ter exatamente 12 dígitos.";
    setLocal('variable_status', mensagem);
    setLocal('number_invalid', "invalid participant");
} else {
    setLocal('variable_status', "");
    setLocal('number_invalid', "");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act319" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%number_invalid</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act32" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act320" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act321" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act322" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act323" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var type = local('type');
var port = local('port');
var title = local('title_group');
var participants = local('participants');

var missingVariables = [];

if (!type &amp;&amp; type !== "0") missingVariables.push("| %type |");
if (!port &amp;&amp; port !== "0") missingVariables.push("| %port |");
if (!title &amp;&amp; title !== "0") missingVariables.push("| %title_group |");
if (!participants &amp;&amp; participants !== "0") missingVariables.push("| %participants |");

if (missingVariables.length &gt; 0) {
    if (missingVariables.length === 1) {
        var variable_status = "A variável\n" + missingVariables[0] + "\nnão está definida.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    } else {
        var variable_status = "As variáveis\n" + missingVariables.join(", ") + "\nnão estão definidas.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    }
} else {
    setLocal('variable_status', "");
    setLocal('variable_err', "");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act324" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act325" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act326" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act327" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act328" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act329" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act33" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act330" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act331" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>adm_part_grp_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act332" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var partsRaw = local('participants');

var partsArray = partsRaw
    .split(/[\n,]+/)
    .map(function(p) { return p.trim(); })
    .filter(function(p) { return p.length &gt; 0; });

var erros = [];

for (var i = 0; i &lt; partsArray.length; i++) {
    var p = partsArray[i];
    
    if (!/^\d+$/.test(p)) {
        erros.push("❌ Participante inválido: | " + p + " | → Contém caracteres não numéricos.");
    } else if (p.length !== 12) {
        erros.push("❌ Participante inválido: | " + p + " | → Deve conter exatamente 12 dígitos.");
    }
}

if (erros.length &gt; 0) {
    var mensagem = erros.join("\n") + "\n\nTodos os participantes devem conter apenas números e ter exatamente 12 dígitos.";
    setLocal('variable_status', mensagem);
    setLocal('number_invalid', "invalid participant");
} else {
    setLocal('variable_status', "");
    setLocal('number_invalid', "");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act333" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%number_invalid</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act334" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act335" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act336" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act337" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var type = local('type');
var port = local('port');
var jid = local('jid');
var participants = local('participants');

var missingVariables = [];

if (!type &amp;&amp; type !== "0") missingVariables.push("| %type |");
if (!port &amp;&amp; port !== "0") missingVariables.push("| %port |");
if (!jid &amp;&amp; jid !== "0") missingVariables.push("| %jid |");
if (!participants &amp;&amp; participants !== "0") missingVariables.push("| %participants |");

if (missingVariables.length &gt; 0) {
    if (missingVariables.length === 1) {
        var variable_status = "A variável\n" + missingVariables[0] + "\nnão está definida.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    } else {
        var variable_status = "As variáveis\n" + missingVariables.join(", ") + "\nnão estão definidas.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    }
} else {
    setLocal('variable_status', "");
    setLocal('variable_err', "");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act338" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act339" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act34" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act340" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act341" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act342" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act343" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act344" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act345" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>del_part_grp_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act346" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var partsRaw = local('participants');

var partsArray = partsRaw
    .split(/[\n,]+/)
    .map(function(p) { return p.trim(); })
    .filter(function(p) { return p.length &gt; 0; });

var erros = [];

for (var i = 0; i &lt; partsArray.length; i++) {
    var p = partsArray[i];
    
    if (!/^\d+$/.test(p)) {
        erros.push("❌ Participante inválido: | " + p + " | → Contém caracteres não numéricos.");
    } else if (p.length !== 12) {
        erros.push("❌ Participante inválido: | " + p + " | → Deve conter exatamente 12 dígitos.");
    }
}

if (erros.length &gt; 0) {
    var mensagem = erros.join("\n") + "\n\nTodos os participantes devem conter apenas números e ter exatamente 12 dígitos.";
    setLocal('variable_status', mensagem);
    setLocal('number_invalid', "invalid participant");
} else {
    setLocal('variable_status', "");
    setLocal('number_invalid', "");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act347" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%number_invalid</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act348" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act349" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act35" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act350" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act351" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var type = local('type');
var port = local('port');
var jid = local('jid');
var participants = local('participants');

var missingVariables = [];

if (!type &amp;&amp; type !== "0") missingVariables.push("| %type |");
if (!port &amp;&amp; port !== "0") missingVariables.push("| %port |");
if (!jid &amp;&amp; jid !== "0") missingVariables.push("| %jid |");
if (!participants &amp;&amp; participants !== "0") missingVariables.push("| %participants |");

if (missingVariables.length &gt; 0) {
    if (missingVariables.length === 1) {
        var variable_status = "A variável\n" + missingVariables[0] + "\nnão está definida.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    } else {
        var variable_status = "As variáveis\n" + missingVariables.join(", ") + "\nnão estão definidas.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    }
} else {
    setLocal('variable_status', "");
    setLocal('variable_err', "");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act352" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act353" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act354" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act355" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act356" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act357" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act358" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act359" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>demote_adm_grp_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act36" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act360" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var partsRaw = local('participants');

var partsArray = partsRaw
    .split(/[\n,]+/)
    .map(function(p) { return p.trim(); })
    .filter(function(p) { return p.length &gt; 0; });

var erros = [];

for (var i = 0; i &lt; partsArray.length; i++) {
    var p = partsArray[i];
    
    if (!/^\d+$/.test(p)) {
        erros.push("❌ Participante inválido: | " + p + " | → Contém caracteres não numéricos.");
    } else if (p.length !== 12) {
        erros.push("❌ Participante inválido: | " + p + " | → Deve conter exatamente 12 dígitos.");
    }
}

if (erros.length &gt; 0) {
    var mensagem = erros.join("\n") + "\n\nTodos os participantes devem conter apenas números e ter exatamente 12 dígitos.";
    setLocal('variable_status', mensagem);
    setLocal('number_invalid', "invalid participant");
} else {
    setLocal('variable_status', "");
    setLocal('number_invalid', "");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act361" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%number_invalid</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act362" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act363" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act364" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act365" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var type = local('type');
var port = local('port');
var jid = local('jid');
var participants = local('participants');

var missingVariables = [];

if (!type &amp;&amp; type !== "0") missingVariables.push("| %type |");
if (!port &amp;&amp; port !== "0") missingVariables.push("| %port |");
if (!jid &amp;&amp; jid !== "0") missingVariables.push("| %jid |");
if (!participants &amp;&amp; participants !== "0") missingVariables.push("| %participants |");

if (missingVariables.length &gt; 0) {
    if (missingVariables.length === 1) {
        var variable_status = "A variável\n" + missingVariables[0] + "\nnão está definida.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    } else {
        var variable_status = "As variáveis\n" + missingVariables.join(", ") + "\nnão estão definidas.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    }
} else {
    setLocal('variable_status', "");
    setLocal('variable_err', "");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act366" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act367" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act368" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act369" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act37" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>text_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act370" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act371" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act372" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act373" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>list_users_in_wait_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act374" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var type = local('type');
var port = local('port');
var jid = local('jid');

var missingVariables = [];

if (!type &amp;&amp; type !== "0") missingVariables.push("| %type |");
if (!port &amp;&amp; port !== "0") missingVariables.push("| %port |");
if (!jid &amp;&amp; jid !== "0") missingVariables.push("| %jid |");

if (missingVariables.length &gt; 0) {
    if (missingVariables.length === 1) {
        var variable_status = "A variável\n" + missingVariables[0] + "\nnão está definida.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    } else {
        var variable_status = "As variáveis\n" + missingVariables.join(", ") + "\nnão estão definidas.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    }
} else {
    setLocal('variable_status', "");
    setLocal('variable_err', "");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act375" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act376" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act377" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act378" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act379" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act38" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var type = local('type');
var port = local('port');
var number = local('number');
var caption = local('caption');
var display_forwarded = local('display_forwarded');

var missingVariables = [];

if (!type) {
    missingVariables.push("| %type |");
}
if (!port) {
    missingVariables.push("| %port |");
}
if (!number) {
    missingVariables.push("| %number |");
}
if (!caption) {
    missingVariables.push("| %caption |");
}
if (!display_forwarded) {
    missingVariables.push("| %display_forwarded |");
}

if (missingVariables.length &gt; 0) {
    if (missingVariables.length === 1) {
        var variable_status = "A variável\n" + missingVariables[0] + "\nnão está definida.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    } else {
        var variable_status = "As variáveis\n" + missingVariables.join(", ") + "\nnão estão definidas.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    }
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act380" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act381" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act382" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>accept_participants_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act383" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var partsRaw = local('participants');

var partsArray = partsRaw
    .split(/[\n,]+/)
    .map(function(p) { return p.trim(); })
    .filter(function(p) { return p.length &gt; 0; });

var erros = [];

for (var i = 0; i &lt; partsArray.length; i++) {
    var p = partsArray[i];
    
    if (!/^\d+$/.test(p)) {
        erros.push("❌ Participante inválido: | " + p + " | → Contém caracteres não numéricos.");
    } else if (p.length !== 12) {
        erros.push("❌ Participante inválido: | " + p + " | → Deve conter exatamente 12 dígitos.");
    }
}

if (erros.length &gt; 0) {
    var mensagem = erros.join("\n") + "\n\nTodos os participantes devem conter apenas números e ter exatamente 12 dígitos.";
    setLocal('variable_status', mensagem);
    setLocal('number_invalid', "invalid participant");
} else {
    setLocal('variable_status', "");
    setLocal('number_invalid', "");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act384" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%number_invalid</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act385" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act386" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act387" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act388" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var type = local('type');
var port = local('port');
var jid = local('jid');
var participants = local('participants');

var missingVariables = [];

if (!type &amp;&amp; type !== "0") missingVariables.push("| %type |");
if (!port &amp;&amp; port !== "0") missingVariables.push("| %port |");
if (!jid &amp;&amp; jid !== "0") missingVariables.push("| %jid |");
if (!participants &amp;&amp; participants !== "0") missingVariables.push("| %participants |");

if (missingVariables.length &gt; 0) {
    if (missingVariables.length === 1) {
        var variable_status = "A variável\n" + missingVariables[0] + "\nnão está definida.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    } else {
        var variable_status = "As variáveis\n" + missingVariables.join(", ") + "\nnão estão definidas.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    }
} else {
    setLocal('variable_status', "");
    setLocal('variable_err', "");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act389" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act39" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act390" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act391" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act392" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act393" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act394" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act395" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act396" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>reject_participants_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act397" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var partsRaw = local('participants');

var partsArray = partsRaw
    .split(/[\n,]+/)
    .map(function(p) { return p.trim(); })
    .filter(function(p) { return p.length &gt; 0; });

var erros = [];

for (var i = 0; i &lt; partsArray.length; i++) {
    var p = partsArray[i];
    
    if (!/^\d+$/.test(p)) {
        erros.push("❌ Participante inválido: | " + p + " | → Contém caracteres não numéricos.");
    } else if (p.length !== 12) {
        erros.push("❌ Participante inválido: | " + p + " | → Deve conter exatamente 12 dígitos.");
    }
}

if (erros.length &gt; 0) {
    var mensagem = erros.join("\n") + "\n\nTodos os participantes devem conter apenas números e ter exatamente 12 dígitos.";
    setLocal('variable_status', mensagem);
    setLocal('number_invalid', "invalid participant");
} else {
    setLocal('variable_status', "");
    setLocal('number_invalid', "");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act398" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%number_invalid</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act399" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act4" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act40" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act400" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act401" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act402" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var type = local('type');
var port = local('port');
var jid = local('jid');
var participants = local('participants');

var missingVariables = [];

if (!type &amp;&amp; type !== "0") missingVariables.push("| %type |");
if (!port &amp;&amp; port !== "0") missingVariables.push("| %port |");
if (!jid &amp;&amp; jid !== "0") missingVariables.push("| %jid |");
if (!participants &amp;&amp; participants !== "0") missingVariables.push("| %participants |");

if (missingVariables.length &gt; 0) {
    if (missingVariables.length === 1) {
        var variable_status = "A variável\n" + missingVariables[0] + "\nnão está definida.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    } else {
        var variable_status = "As variáveis\n" + missingVariables.join(", ") + "\nnão estão definidas.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    }
} else {
    setLocal('variable_status', "");
    setLocal('variable_err', "");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act403" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act404" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act405" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act406" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act407" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act408" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act409" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act41" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act410" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>exit_group_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act411" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var type = local('type');
var port = local('port');
var jid = local('jid');

var missingVariables = [];

if (!type &amp;&amp; type !== "0") missingVariables.push("| %type |");
if (!port &amp;&amp; port !== "0") missingVariables.push("| %port |");
if (!jid &amp;&amp; jid !== "0") missingVariables.push("| %jid |");

if (missingVariables.length &gt; 0) {
    if (missingVariables.length === 1) {
        var variable_status = "A variável\n" + missingVariables[0] + "\nnão está definida.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    } else {
        var variable_status = "As variáveis\n" + missingVariables.join(", ") + "\nnão estão definidas.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    }
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act412" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act413" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act414" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act415" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act416" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act417" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act418" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act419" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>photo_profile_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act42" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act420" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var type = local('type');
var port = local('port');
var path = local('path');

var missingVariables = [];

if (!type &amp;&amp; type !== "0") missingVariables.push("| %type |");
if (!port &amp;&amp; port !== "0") missingVariables.push("| %port |");
if (!path &amp;&amp; path !== "0") missingVariables.push("| %path |");

if (missingVariables.length &gt; 0) {
    if (missingVariables.length === 1) {
        var variable_status = "A variável\n" + missingVariables[0] + "\nnão está definida.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    } else {
        var variable_status = "As variáveis\n" + missingVariables.join(", ") + "\nnão estão definidas.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    }
} else {
    setLocal('variable_status', "");
    setLocal('variable_err', "");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act421" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act422" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act423" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act424" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act425" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act426" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act427" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act428" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>name_profile_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act429" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var type = local('type');
var port = local('port');
var name = local('name');

var missingVariables = [];

if (!type &amp;&amp; type !== "0") missingVariables.push("| %type |");
if (!port &amp;&amp; port !== "0") missingVariables.push("| %port |");
if (!name &amp;&amp; name !== "0") missingVariables.push("| %name |");

if (missingVariables.length &gt; 0) {
    if (missingVariables.length === 1) {
        var variable_status = "A variável\n" + missingVariables[0] + "\nnão está definida.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    } else {
        var variable_status = "As variáveis\n" + missingVariables.join(", ") + "\nnão estão definidas.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    }
} else {
    setLocal('variable_status', "");
    setLocal('variable_err', "");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act43" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act430" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act431" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act432" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act433" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act434" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act435" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act436" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act44" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act45" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act46" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>text_quote_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act47" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var type = local('type');
var port = local('port');
var number = local('number');
var message_id = local('message_id');
var caption = local('caption');

var missingVariables = [];

// Verificação individual
if (!type &amp;&amp; type !== "0") missingVariables.push("| %type |");
if (!port &amp;&amp; port !== "0") missingVariables.push("| %port |");
if (!number &amp;&amp; number !== "0") missingVariables.push("| %number |");
if (!message_id &amp;&amp; message_id !== "0") missingVariables.push("| %message_id |");
if (!caption &amp;&amp; caption !== "0") missingVariables.push("| %caption |");

// Saída condicional
if (missingVariables.length &gt; 0) {
    if (missingVariables.length === 1) {
        var variable_status = "A variável\n" + missingVariables[0] + "\nnão está definida.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    } else {
        var variable_status = "As variáveis\n" + missingVariables.join(", ") + "\nnão estão definidas.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    }
} else {
    setLocal('variable_status', "Todas as variáveis estão definidas.\n\n");
    setLocal('variable_err', "");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act48" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act49" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act5" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act50" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act51" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act52" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act53" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act54" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act55" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>group_text_quote_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act56" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var type = local('type');
var port = local('port');
var number = local('number');
var jid = local('jid');
var caption = local('caption');
var message_id = local('message_id');

var missingVariables = [];

// Verificação individual
if (!type &amp;&amp; type !== "0") missingVariables.push("| %type |");
if (!port &amp;&amp; port !== "0") missingVariables.push("| %port |");
if (!number &amp;&amp; number !== "0") missingVariables.push("| %number |");
if (!jid &amp;&amp; jid !== "0") missingVariables.push("| %jid |");
if (!caption &amp;&amp; caption !== "0") missingVariables.push("| %caption |");
if (!message_id &amp;&amp; message_id !== "0") missingVariables.push("| %message_id |");

// Saída condicional
if (missingVariables.length &gt; 0) {
    if (missingVariables.length === 1) {
        var variable_status = "A variável\n" + missingVariables[0] + "\nnão está definida.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    } else {
        var variable_status = "As variáveis\n" + missingVariables.join(", ") + "\nnão estão definidas.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    }
} else {
    setLocal('variable_status', "Todas as variáveis estão definidas.\n\n");
    setLocal('variable_err', "");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act57" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act58" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act59" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act6" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act60" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act61" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act62" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act63" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act64" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>group_text_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act65" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var type = local('type');
var port = local('port');
var number = local('number');
var caption = local('caption');
var display_forwarded = local('display_forwarded');

var missingVariables = [];

if (!type) {
    missingVariables.push("| %type |");
}
if (!port) {
    missingVariables.push("| %port |");
}
if (!number) {
    missingVariables.push("| %number |");
}
if (!caption) {
    missingVariables.push("| %caption |");
}
if (!display_forwarded) {
    missingVariables.push("| %display_forwarded |");
}

if (missingVariables.length &gt; 0) {
    if (missingVariables.length === 1) {
        var variable_status = "A variável\n" + missingVariables[0] + "\nnão está definida.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    } else {
        var variable_status = "As variáveis\n" + missingVariables.join(", ") + "\nnão estão definidas.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    }
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act66" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act67" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act68" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act69" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act7" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act70" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act71" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act72" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act73" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>audio_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act74" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var port = local('port');
var number = local('number');
var path = local('path');

var missingVariables = [];

if (!port) {
    missingVariables.push("| %port |");
}
if (!number) {
    missingVariables.push("| %number |");
}
if (!path) {
    missingVariables.push("| %path |");
}

if (missingVariables.length &gt; 0) {
    if (missingVariables.length === 1) {
        variable_status = "A variável\n" + missingVariables[0] + "\nnão está definida.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    } else {
        variable_status = "As variáveis\n" + missingVariables.join(", ") + "\nnão estão definidas.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    }
} else {
    variable_status = "Todas as variáveis estão definidas.\n\n";
    setLocal('variable_status', variable_status);
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act75" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act76" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act77" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act78" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act79" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act8" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act80" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act81" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act82" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>group_audio_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act83" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var port = local('port');
var number = local('number');
var path = local('path');

var missingVariables = [];

if (!port) {
    missingVariables.push("| %port |");
}
if (!number) {
    missingVariables.push("| %number |");
}
if (!path) {
    missingVariables.push("| %path |");
}

if (missingVariables.length &gt; 0) {
    if (missingVariables.length === 1) {
        variable_status = "A variável\n" + missingVariables[0] + "\nnão está definida.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    } else {
        variable_status = "As variáveis\n" + missingVariables.join(", ") + "\nnão estão definidas.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    }
} else {
    variable_status = "Todas as variáveis estão definidas.\n\n";
    setLocal('variable_status', variable_status);
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act84" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act85" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act86" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act87" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act88" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act89" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act9" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act90" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act91" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>presence_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act92" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var port = local('port');
var number = local('number');
var type_presence = local('type_presence');
var duration = local('duration');

var missingVariables = [];

if (!port) {
    missingVariables.push("| %port |");
}
if (!number) {
    missingVariables.push("| %number |");
}
if (!type_presence) {
    missingVariables.push("| %type_presence |");
}
if (!duration) {
    missingVariables.push("| %duration |");
}

// Verificação adicional para a variável duration
if (duration) {
    if (isNaN(duration)) {
        missingVariables.push("| %duration (valor não numérico) |");
    } else if (Number(duration) === 0) {
        missingVariables.push("| %duration (valor não pode ser zero) |");
    }
}

if (missingVariables.length &gt; 0) {
    if (missingVariables.length === 1) {
        variable_status = "A variável\n" + missingVariables[0] + "\nnão está definida ou contém um valor inválido.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    } else {
        variable_status = "As variáveis\n" + missingVariables.join(", ") + "\nnão estão definidas ou contêm valores inválidos.\n\n";
        setLocal('variable_status', variable_status);
        setLocal('variable_err', "no variable");
    }
} else {
    variable_status = "Todas as variáveis estão definidas corretamente.\n\n";
    setLocal('variable_status', variable_status);
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act93" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%variable_err</lhs>
					<op>12</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act94" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;%variable_status</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">5000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act95" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3">011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act96" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act97" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act98" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act99" ve="7">
			<code>38</code>
		</Action>
		<Img sr="icn" ve="2">
			<fle>/storage/emulated/0/Tasker/termux/zap-replay-api/icones/system.png</fle>
		</Img>
	</Task>
	<Task sr="task335">
		<cdate>1750773941558</cdate>
		<edate>1751556973870</edate>
		<id>335</id>
		<nme>011-( SISTEMA )-ENVIOS [ zap-replay-api ] v(1.0)</nme>
		<rty>2</rty>
		<Action sr="act0" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%caller1</lhs>
					<op>2</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act1" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>13</op>
					<rhs></rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act10" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act100" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act101" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act102" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act103" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act104" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act105" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>avatar_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act106" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%number/%high_resolution</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act107" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%high_resolution_request</Str>
			<Str sr="arg1" ve="3">false</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%high_resolution</lhs>
					<op>2</op>
					<rhs>true</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act108" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%high_resolution_request</Str>
			<Str sr="arg1" ve="3">true</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%high_resolution</lhs>
					<op>2</op>
					<rhs>false</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act109" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="0"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/user/avatar?phone=%number@s.whatsapp.net&amp;is_preview=%high_resolution_request&amp;is_community=false</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="20"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act11" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act110" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act111" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act112" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act113" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act114" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act115" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>poll_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act116" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%number/%max_answer/%poll_question/%poll1/%poll2/%poll3/%poll4/%poll5/%poll6/%poll7/%poll8/%poll9/%poll10/%poll11/%poll12</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act117" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%whatsapp_suffix</Str>
			<Str sr="arg1" ve="3">@s.whatsapp.net</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act118" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%max_answe</Str>
			<Str sr="arg1" ve="3">1</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%max_answer</lhs>
					<op>2</op>
					<rhs>true</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act119" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%max_answe</Str>
			<Str sr="arg1" ve="3">2</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%max_answer</lhs>
					<op>2</op>
					<rhs>false</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act12" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act120" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">// Variáveis dinâmicas
var number = local('number');
var question = local('poll_question');
var max_answer = local('max_answe');
var whatsapp_suffix = local('whatsapp_suffix');

// Verifica se as variáveis principais estão definidas
if (!number || !question || !max_answer || !whatsapp_suffix) {
    setLocal('saida_enquete', "");
} else {
    var options = [];

    // Coletar opções válidas de poll1 a poll12
    for (var i = 1; i &lt;= 12; i++) {
        var valor = local('poll' + i);
        if (valor !== null &amp;&amp; valor !== undefined &amp;&amp; valor.trim() !== "") {
            options.push(valor);
        }
    }

    // Criar JSON apenas se tiver pelo menos 2 opções
    if (options.length &gt;= 2) {
        var resultado = {
            phone: number + whatsapp_suffix,
            question: question,
            max_answer: parseInt(max_answer),
            options: options
        };

        setLocal('saida_enquete', JSON.stringify(resultado));
    } else {
        setLocal('saida_enquete', "");
    }
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act121" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/send/poll</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3">Accept: application/json, text/plain, */*
Content-Type: application/json</Str>
			<Str sr="arg5" ve="3">%saida_enquete</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act122" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act123" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act124" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act125" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act126" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act127" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>location_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act128" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%number/%display_forwarded/%lat/%log</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act129" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/send/location</Str>
			<Str sr="arg3" ve="3">Accept: application/json, text/plain, */*
Content-Type: application/json</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{"phone":"%number@s.whatsapp.net","latitude":"%lat","longitude":"%log","is_forwarded":%display_forwarded}</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act13" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act130" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act131" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act132" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act133" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act134" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act135" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>get_contacts</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act136" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act137" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="0"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/user/my/contacts</Str>
			<Str sr="arg3" ve="3">Accept: application/json, text/plain, */*</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act138" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">let input = local('http_data');
let output = '';
let jsonData = JSON.parse(input);
let namedContacts = [];
let noNameContacts = [];

if (jsonData.results &amp;&amp; jsonData.results.data) {
    let contacts = jsonData.results.data;
    for (let i = 0; i &lt; contacts.length; i++) {
        let contact = contacts[i];
        let name = contact.name;
        let jid = contact.jid;
        let number = jid.split('@')[0];
        if (!name || name.trim() === '') {
            name = 'Sem Nome';
            noNameContacts.push({ name, number });
        } else {
            namedContacts.push({ name, number });
        }
    }
}

namedContacts.sort((a, b) =&gt; a.name.localeCompare(b.name));

for (let i = 0; i &lt; namedContacts.length; i++) {
    output += namedContacts[i].name + ' ' + namedContacts[i].number + '\n';
}
for (let i = 0; i &lt; noNameContacts.length; i++) {
    output += noNameContacts[i].name + ' ' + noNameContacts[i].number + '\n';
}

setLocal('contacts', output);</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act139" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">let input = local('http_data');
let namedCount = 0;
let totalCount = 0;
let jsonData = JSON.parse(input);

if (jsonData.results &amp;&amp; jsonData.results.data) {
    let contacts = jsonData.results.data;
    totalCount = contacts.length;
    for (let i = 0; i &lt; contacts.length; i++) {
        let contact = contacts[i];
        let name = contact.name;
        if (name &amp;&amp; name.trim() !== '') {
            namedCount++;
        }
    }
}

setLocal('contacts_count_validated', namedCount);
setLocal('contacts_full', totalCount);</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act14" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act140" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act141" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act142" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act143" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act144" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act145" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>link_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act146" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%number/%caption/%display_forwarded/%link</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act147" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var msg = local("caption");
var saida = msg
  .replace(/\\/g, "\\\\")
  .replace(/"/g, '\\"')
  .replace(/\n/g, "\\n")
  .replace(/\r/g, "\\r");

setLocal("caption_escap", saida);</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act148" ve="7">
			<code>339</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="0"/>
			<Int sr="arg11" val="0"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/send/link</Str>
			<Str sr="arg3" ve="3">Accept: application/json, text/plain, */*
Content-Type: application/json</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{"phone":"%number@s.whatsapp.net","link":"%link","caption":"%caption_escap","is_forwarded":%display_forwarded}</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="0"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%caption</lhs>
					<op>12</op>
					<rhs></rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act149" ve="7">
			<code>339</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="0"/>
			<Int sr="arg11" val="0"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/send/link</Str>
			<Str sr="arg3" ve="3">Accept: application/json, text/plain, */*
Content-Type: application/json</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{"phone":"%number@s.whatsapp.net","link":"%link","caption":" ","is_forwarded":%display_forwarded}</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="0"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%caption</lhs>
					<op>13</op>
					<rhs></rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act15" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>text_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act150" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act151" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act152" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act153" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act154" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act155" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>reaction_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act156" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%number/%message_id/%reaction</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act157" ve="7">
			<code>339</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="0"/>
			<Int sr="arg11" val="0"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/message/%message_id/reaction</Str>
			<Str sr="arg3" ve="3">Accept: application/json, text/plain, */*
Content-Type: application/json</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{"phone":"%number@s.whatsapp.net","emoji":"%reaction"}</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act158" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act159" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act16" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%number/%caption/%display_forwarded</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act160" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act161" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act162" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act163" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>update_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act164" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%number/%message_id/%update_message</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act165" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var msg = local("update_message");
var saida = msg
  .replace(/\\/g, "\\\\")
  .replace(/"/g, '\\"')
  .replace(/\n/g, "\\n")
  .replace(/\r/g, "\\r");

setLocal("update_message_escap", saida);</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act166" ve="7">
			<code>339</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="0"/>
			<Int sr="arg11" val="0"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/message/%message_id/update</Str>
			<Str sr="arg3" ve="3">Accept: application/json, text/plain, */*
Content-Type: application/json</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{"phone":"%number@s.whatsapp.net","message":"%update_message"}</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act167" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act168" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act169" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act17" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var msg = local("caption");
var saida = msg
  .replace(/\\/g, "\\\\")
  .replace(/"/g, '\\"')
  .replace(/\n/g, "\\n")
  .replace(/\r/g, "\\r");

setLocal("caption_escap", saida);</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act170" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act171" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act172" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>mark_read_text_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act173" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%number/%message_id</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act174" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/chat/mark-read</Str>
			<Str sr="arg3" ve="3">Content-Type: application/json</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{"Phone": "%number@s.whatsapp.net", "message_id": "%message_id", "played": false}</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act175" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act176" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act177" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act178" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act179" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act18" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/send/message</Str>
			<Str sr="arg3" ve="3">Accept: application/json, text/plain, */*
Content-Type: application/json</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{"phone":"%number@s.whatsapp.net","message":"%caption_escap","is_forwarded":%display_forwarded}</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act180" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>mark_read_audio_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act181" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%number/%message_id/%played</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act182" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/chat/mark-read</Str>
			<Str sr="arg3" ve="3">Content-Type: application/json</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{"Phone": "%number@s.whatsapp.net", "message_id": "%message_id", "played": false}</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act183" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/chat/mark-read</Str>
			<Str sr="arg3" ve="3">Content-Type: application/json</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{"Phone": "%number@s.whatsapp.net", "message_id": "%message_id", "played": true}</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act184" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act185" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act186" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act187" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act188" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act189" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>photo_profile_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act19" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act190" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%path</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act191" ve="7">
			<code>123</code>
			<label>alterar avatar Por enquanto só tá funcionando com Shell script</label>
			<Str sr="arg0" ve="3">curl \
 --request POST 'http://localhost:%port/user/avatar' \
 --header "Content-Type: multipart/form-data" \
 --form "avatar=@%path"</Str>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="0"/>
			<Str sr="arg3" ve="3">%data</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="1"/>
			<Int sr="arg7" val="0"/>
		</Action>
		<Action sr="act192" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%data</Str>
			<Str sr="arg1" ve="3">%data</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act193" ve="7">
			<code>37</code>
			<coll>false</coll>
			<label>{"code":"SUCCESS","message":"Success change avatar"}</label>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%data.message</lhs>
					<op>0</op>
					<rhs>Success change avatar</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act194" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act195" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act196" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act197" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act198" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>name_profile_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act199" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%name</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act2" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">&lt;b&gt;&lt;big&gt;
A variável
| %type |
 não está definida.</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3">#FFFF0000</Str>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="1"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FFFFFFFF</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3">7000</Str>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act20" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act200" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/user/pushname</Str>
			<Str sr="arg3" ve="3">Content-Type:application/json</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{"push_name":"%name"}</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act201" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act202" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act203" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act204" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act205" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act206" ve="7">
			<code>300</code>
			<label>Grupo</label>
			<on>false</on>
		</Action>
		<Action sr="act207" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>group_image_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act208" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%number/%caption/%path/%display_forwarded/%single_view</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act209" ve="7">
			<code>123</code>
			<Str sr="arg0" ve="3">base64 "%path" | tr -d '\n'</Str>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="0"/>
			<Str sr="arg3" ve="3">%base64</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="1"/>
			<Int sr="arg7" val="0"/>
		</Action>
		<Action sr="act21" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act210" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var msg = local("caption");
var saida = msg
  .replace(/\\/g, "\\\\")
  .replace(/"/g, '\\"')
  .replace(/\n/g, "\\n")
  .replace(/\r/g, "\\r");

setLocal("caption_escap", saida);</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act211" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/chat/send/image</Str>
			<Str sr="arg3" ve="3">Content-Type: application/json</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{
    "Phone": "%number@g.us",
    "Caption": "%caption_escap",
    "ImagePath": "%path",
    "view_once": %single_view,
    "is_forwarded": %display_forwarded
  }</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%caption</lhs>
					<op>12</op>
					<rhs></rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act212" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/chat/send/image</Str>
			<Str sr="arg3" ve="3">Content-Type: application/json</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{
    "Phone": "%number@g.us",
    "Caption": "",
    "ImagePath": "%path",
    "view_once": %single_view,
    "is_forwarded": %display_forwarded
  }</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%caption</lhs>
					<op>13</op>
					<rhs></rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act213" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act214" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act215" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act216" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act217" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act218" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>group_text_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act219" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%number/%caption/%display_forwarded</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act22" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act220" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var msg = local("caption");
var saida = msg
  .replace(/\\/g, "\\\\")
  .replace(/"/g, '\\"')
  .replace(/\n/g, "\\n")
  .replace(/\r/g, "\\r");

setLocal("caption_escap", saida);</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act221" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/send/message</Str>
			<Str sr="arg3" ve="3">Accept: application/json, text/plain, */*
Content-Type: application/json</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{"phone":"%number@g.us","message":"%caption_escap","is_forwarded":%display_forwarded}</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act222" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act223" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act224" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act225" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act226" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act227" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>group_video_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act228" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%number/%path/%caption</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act229" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var msg = local("caption");
var saida = msg
  .replace(/\\/g, "\\\\")
  .replace(/"/g, '\\"')
  .replace(/\n/g, "\\n")
  .replace(/\r/g, "\\r");

setLocal("caption_escap", saida);</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act23" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act230" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/chat/send/video</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{
    "Phone": "%number@g.us",
    "Caption": "%caption_escap",
    "VideoPath": "%path",
    "view_once": %single_view,
    "is_forwarded": %display_forwarded
  }</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%caption</lhs>
					<op>12</op>
					<rhs></rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act231" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/chat/send/video</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{
    "Phone": "%number@g.us",
    "Caption": "",
    "VideoPath": "%path",
    "view_once": %single_view,
    "is_forwarded": %display_forwarded
  }</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%caption</lhs>
					<op>13</op>
					<rhs></rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act232" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act233" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act234" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act235" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act236" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act237" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>group_audio_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act238" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%number/%path/%auto_del</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act239" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/chat/send/audio</Str>
			<Str sr="arg3" ve="3">Content-Type: application/json</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{"Phone": "%number@g.us", "media": "%path"}</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act24" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>video_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act240" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act241" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act242" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act243" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act244" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act245" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>group_presence_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act246" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%number/%type_presence/%duration</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act247" ve="7">
			<code>339</code>
			<label>enviar gravando</label>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="0"/>
			<Int sr="arg11" val="0"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/send-presence</Str>
			<Str sr="arg3" ve="3">Content-Type:application/json</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{"Phone":"%number@g.us", "presence":"%type_presence", "duration":%duration}</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act248" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act249" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act25" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%number/%path/%display_forwarded/%single_view</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act250" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act251" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act252" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act253" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>group_document_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act254" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%number/%caption/%path/%display_forwarded</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act255" ve="7">
			<code>129</code>
			<se>false</se>
			<Str sr="arg0" ve="3">var fullPath = local('path');

var fileName = fullPath.split('/').pop().split('.').slice(0, -1).join('.');

setLocal('name_pdf', fileName);</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act256" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var msg = local("caption");
var saida = msg
  .replace(/\\/g, "\\\\")
  .replace(/"/g, '\\"')
  .replace(/\n/g, "\\n")
  .replace(/\r/g, "\\r");

setLocal("caption_escap", saida);</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act257" ve="7">
			<code>339</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="0"/>
			<Int sr="arg11" val="0"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/chat/send/document</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{
    "Phone": "%number@g.us",
    "FileName": "%name_pdf",
    "Caption": "%caption_escap",
    "DocumentPath": "%path",
    "is_forwarded": %display_forwarded
  }</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="0"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%caption</lhs>
					<op>12</op>
					<rhs></rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act258" ve="7">
			<code>339</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="0"/>
			<Int sr="arg11" val="0"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/chat/send/document</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{
    "Phone": "%number@g.us",
    "FileName": "%name_pdf",
    "Caption": "",
    "DocumentPath": "%path",
    "is_forwarded": %display_forwarded
  }</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="0"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%caption</lhs>
					<op>13</op>
					<rhs></rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act259" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act26" ve="7">
			<code>129</code>
			<se>false</se>
			<Str sr="arg0" ve="3">var msg = local("caption");
var saida = msg
  .replace(/\\/g, "\\\\")
  .replace(/"/g, '\\"')
  .replace(/\n/g, "\\n")
  .replace(/\r/g, "\\r");

setLocal("caption_escap", saida);</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act260" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act261" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act262" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act263" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act264" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>group_text_quote_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act265" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%number/%jid/%caption/%message_id</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act266" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var msg = local("caption");
var saida = msg
  .replace(/\\/g, "\\\\")
  .replace(/"/g, '\\"')
  .replace(/\n/g, "\\n")
  .replace(/\r/g, "\\r");

setLocal("caption_escap", saida);</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act267" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/send/message</Str>
			<Str sr="arg3" ve="3">Content-Type:application/json</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{
    "Jid": "%jid@g.us",
    "message": "%caption_escap",
    "reply_message_id": "%message_id",
    "Phone": "%number@s.whatsapp.net"
}</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act268" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act269" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act27" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/chat/send/video</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{
    "Phone": "%number@s.whatsapp.net",
    "Caption": "%caption_escap",
    "VideoPath": "%path",
    "view_once": %single_view,
    "is_forwarded": %display_forwarded
  }</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%caption</lhs>
					<op>12</op>
					<rhs></rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act270" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act271" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act272" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act273" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>get_groups_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act274" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act275" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="0"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/user/my/groups</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act276" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">(function() {
    var jsonString = local('http_data');
    try {
        var jsonObj = JSON.parse(jsonString);
        var dadosFiltrados = jsonObj.results.data.map(function(grupo) {
            return {
                JID: grupo.JID,
                OwnerJID: grupo.OwnerJID,
                Name: grupo.Name,
                Topic: grupo.Topic,
                GroupCreated: grupo.GroupCreated,
                Participants: grupo.Participants.map(function(participante) {
                    return {
                        PhoneNumber: participante.PhoneNumber,
                        IsAdmin: participante.IsAdmin,
                        IsSuperAdmin: participante.IsSuperAdmin,
                        DisplayName: participante.DisplayName
                    };
                })
            };
        });
        var jsonFormatado = JSON.stringify(dadosFiltrados, null, 2);
        setLocal('groups_data', jsonFormatado);
        true;
    } catch (e) {
        setLocal('groups_data', '❌ Erro: ' + e.message);
        false;
    }
})();</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act277" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act278" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act279" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act28" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/chat/send/video</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{
    "Phone": "%number@s.whatsapp.net",
    "Caption": "",
    "VideoPath": "%path",
    "view_once": %single_view,
    "is_forwarded": %display_forwarded
  }</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%caption</lhs>
					<op>13</op>
					<rhs></rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act280" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act281" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act282" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>group_location_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act283" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%number/%display_forwarded/%lat/%log</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act284" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/send/location</Str>
			<Str sr="arg3" ve="3">Accept: application/json, text/plain, */*
Content-Type: application/json</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{"phone":"%number@g.us","latitude":"%lat","longitude":"%log","is_forwarded":%display_forwarded}</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act285" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act286" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act287" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act288" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act289" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act29" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act290" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>group_link_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act291" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%number/%caption/%display_forwarded/%link</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act292" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var msg = local("caption");
var saida = msg
  .replace(/\\/g, "\\\\")
  .replace(/"/g, '\\"')
  .replace(/\n/g, "\\n")
  .replace(/\r/g, "\\r");

setLocal("caption_escap", saida);</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act293" ve="7">
			<code>339</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="0"/>
			<Int sr="arg11" val="0"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/send/link</Str>
			<Str sr="arg3" ve="3">Accept: application/json, text/plain, */*
Content-Type: application/json</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{"phone":"%number@g.us","link":"%link","caption":"%caption_escap","is_forwarded":%display_forwarded}</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="0"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%caption</lhs>
					<op>12</op>
					<rhs></rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act294" ve="7">
			<code>339</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="0"/>
			<Int sr="arg11" val="0"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/send/link</Str>
			<Str sr="arg3" ve="3">Accept: application/json, text/plain, */*
Content-Type: application/json</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{"phone":"%number@g.us","link":"%link","caption":" ","is_forwarded":%display_forwarded}</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="0"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%caption</lhs>
					<op>13</op>
					<rhs></rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act295" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act296" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act297" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act298" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act299" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act3" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3"/>
		</Action>
		<Action sr="act30" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act300" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>group_reaction_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act301" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%number/%message_id/%reaction</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act302" ve="7">
			<code>339</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="0"/>
			<Int sr="arg11" val="0"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/message/%message_id/reaction</Str>
			<Str sr="arg3" ve="3">Accept: application/json, text/plain, */*
Content-Type: application/json</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{"phone":"%number@g.us","emoji":"%reaction"}</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act303" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act304" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act305" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act306" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act307" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act308" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>group_update_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act309" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%number/%message_id/%update_message</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act31" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act310" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var msg = local("update_message");
var saida = msg
  .replace(/\\/g, "\\\\")
  .replace(/"/g, '\\"')
  .replace(/\n/g, "\\n")
  .replace(/\r/g, "\\r");

setLocal("update_message_escap", saida);</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act311" ve="7">
			<code>339</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="0"/>
			<Int sr="arg11" val="0"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/message/%message_id/update</Str>
			<Str sr="arg3" ve="3">Accept: application/json, text/plain, */*
Content-Type: application/json</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{"phone":"%number@g.us","message":"%update_message_escap"}</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act312" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act313" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act314" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act315" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act316" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act317" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>group_mark_read_text_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act318" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%number/%jid/%message_id</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act319" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/chat/mark-read</Str>
			<Str sr="arg3" ve="3">Content-Type: application/json</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{"Phone": "%jid@g.us", "message_id": "%message_id", "sender": "%number@s.whatsapp.net", "played": false}</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act32" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act320" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act321" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act322" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act323" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act324" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act325" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>create_group_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act326" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%title_group/%participants</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act327" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var title = local('title_group');
var partsRaw = local('participants');

var partsArray = partsRaw
    .split(/[\n,]+/)
    .map(function(p) { return p.trim(); })
    .filter(function(p) { return p.length &gt; 0; });

var resultado = {
    title: title,
    participants: partsArray
};

setLocal('create_group_json', JSON.stringify(resultado));</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act328" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/group</Str>
			<Str sr="arg3" ve="3">Content-Type:application/json</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">%create_group_json</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act329" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act33" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act330" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act331" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act332" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act333" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act334" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>adm_part_grp_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act335" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%jid/%participants</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act336" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var group_id = local('jid');
var partsRaw = local('participants');

var partsArray = partsRaw
    .split(/[\n,]+/)
    .map(function(p) { return p.trim(); })
    .filter(function(p) { return p.length &gt; 0; });

var resultado = {
    group_id: group_id,
    participants: partsArray
};

setLocal('participants_group_json', JSON.stringify(resultado));</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act337" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/group/participants</Str>
			<Str sr="arg3" ve="3">Content-Type: application/json</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">%participants_group_json</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act338" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act339" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act34" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>audio_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act340" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act341" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act342" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act343" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>del_part_grp_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act344" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%jid/%participants</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act345" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var group_id = local('jid');
var partsRaw = local('participants');

var partsArray = partsRaw
    .split(/[\n,]+/)
    .map(function(p) { return p.trim(); })
    .filter(function(p) { return p.length &gt; 0; });

var resultado = {
    group_id: group_id,
    participants: partsArray
};

setLocal('del_part', JSON.stringify(resultado));</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act346" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/group/participants/remove</Str>
			<Str sr="arg3" ve="3">Content-Type: application/json</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">%del_part</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act347" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act348" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act349" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act35" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%number/%path</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act350" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act351" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act352" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>demote_adm_grp_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act353" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%jid/%participants</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act354" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var group_id = local('jid');
var partsRaw = local('participants');

var partsArray = partsRaw
    .split(/[\n,]+/)
    .map(function(p) { return p.trim(); })
    .filter(function(p) { return p.length &gt; 0; });

var resultado = {
    group_id: group_id,
    participants: partsArray
};

setLocal('demote_adm_part', JSON.stringify(resultado));</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act355" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/group/participants/demote</Str>
			<Str sr="arg3" ve="3">Content-Type:application/json</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">%demote_adm_part</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act356" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act357" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act358" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act359" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act36" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/chat/send/audio</Str>
			<Str sr="arg3" ve="3">Content-Type: application/json</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{"Phone": "%number@s.whatsapp.net", "media": "%path"}</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act360" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act361" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>list_users_in_wait_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act362" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%jid</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act363" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="0"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/group/participant-requests?group_id=%jid%40g.us</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act364" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%waiting_in_participants</Str>
			<Str sr="arg1" ve="3">%http_data</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act365" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act366" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act367" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act368" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act369" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act37" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act370" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>accept_participants_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act371" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%jid/%participants</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act372" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var group_id = local('jid');
var partsRaw = local('participants');

var partsArray = partsRaw
    .split(/[\n,]+/)
    .map(function(p) { return p.trim(); })
    .filter(function(p) { return p.length &gt; 0; });

var resultado = {
    group_id: group_id,
    participants: partsArray
};

setLocal('accept_participants', JSON.stringify(resultado));</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act373" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/group/participant-requests/approve</Str>
			<Str sr="arg3" ve="3">Content-Type:application/json</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">%accept_participants</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act374" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%accept_participants</Str>
			<Str sr="arg1" ve="3">%http_data</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act375" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act376" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act377" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act378" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act379" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act38" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act380" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>reject_participants_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act381" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%jid/%participants</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act382" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var group_id = local('jid');
var partsRaw = local('participants');

var partsArray = partsRaw
    .split(/[\n,]+/)
    .map(function(p) { return p.trim(); })
    .filter(function(p) { return p.length &gt; 0; });

var resultado = {
    group_id: group_id,
    participants: partsArray
};

setLocal('reject_participants', JSON.stringify(resultado));</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act383" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/group/participant-requests/reject</Str>
			<Str sr="arg3" ve="3">Content-Type:application/json</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">%reject_participants</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act384" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%reject_participants</Str>
			<Str sr="arg1" ve="3">%http_data</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act385" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act386" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act387" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act388" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act389" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act39" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act390" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>exit_group_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act391" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%jid</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act392" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var title = local('title_group');
var partsRaw = local('participants');

var partsArray = partsRaw
    .split(/[\n,]+/)
    .map(function(p) { return p.trim(); })
    .filter(function(p) { return p.length &gt; 0; });

var resultado = {
    title: title,
    participants: partsArray
};

setLocal('create_group_json', JSON.stringify(resultado));</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act393" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/group/leave</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{"group_id":"%jid@g.us"}</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act394" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act395" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act396" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act397" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act398" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act399" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>group_poll_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act4" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act40" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act400" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%number/%max_answer/%poll_question/%poll1/%poll2/%poll3/%poll4/%poll5/%poll6/%poll7/%poll8/%poll9/%poll10/%poll11/%poll12</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act401" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%whatsapp_suffix</Str>
			<Str sr="arg1" ve="3">@g.us</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act402" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%max_answe</Str>
			<Str sr="arg1" ve="3">1</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%max_answer</lhs>
					<op>2</op>
					<rhs>true</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act403" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%max_answe</Str>
			<Str sr="arg1" ve="3">2</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%max_answer</lhs>
					<op>2</op>
					<rhs>false</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act404" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">// Variáveis dinâmicas
var number = local('number');
var question = local('poll_question');
var max_answer = local('max_answe');
var whatsapp_suffix = local('whatsapp_suffix');

// Verifica se as variáveis principais estão definidas
if (!number || !question || !max_answer || !whatsapp_suffix) {
    setLocal('saida_enquete', "");
} else {
    var options = [];

    // Coletar opções válidas de poll1 a poll12
    for (var i = 1; i &lt;= 12; i++) {
        var valor = local('poll' + i);
        if (valor !== null &amp;&amp; valor !== undefined &amp;&amp; valor.trim() !== "") {
            options.push(valor);
        }
    }

    // Criar JSON apenas se tiver pelo menos 2 opções
    if (options.length &gt;= 2) {
        var resultado = {
            phone: number + whatsapp_suffix,
            question: question,
            max_answer: parseInt(max_answer),
            options: options
        };

        setLocal('saida_enquete', JSON.stringify(resultado));
    } else {
        setLocal('saida_enquete', "");
    }
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act405" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/send/poll</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3">Accept: application/json, text/plain, */*
Content-Type: application/json</Str>
			<Str sr="arg5" ve="3">%saida_enquete</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act406" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act407" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act408" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act409" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act41" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act410" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act42" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>presence_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act43" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%number/%type_presence/%duration</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act44" ve="7">
			<code>339</code>
			<label>enviar gravando</label>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="0"/>
			<Int sr="arg11" val="0"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/send-presence</Str>
			<Str sr="arg3" ve="3">Content-Type:application/json</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{"Phone":"%number@s.whatsapp.net", "presence":"%type_presence", "duration":%duration}</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act45" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act46" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act47" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act48" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act49" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act5" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>image_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act50" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>document_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act51" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%number/%caption/%path/%display_forwarded</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act52" ve="7">
			<code>129</code>
			<se>false</se>
			<Str sr="arg0" ve="3">var fullPath = local('path');

var fileName = fullPath.split('/').pop().split('.').slice(0, -1).join('.');

setLocal('name_pdf', fileName);</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act53" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var msg = local("caption");
var saida = msg
  .replace(/\\/g, "\\\\")
  .replace(/"/g, '\\"')
  .replace(/\n/g, "\\n")
  .replace(/\r/g, "\\r");

setLocal("caption_escap", saida);</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act54" ve="7">
			<code>339</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="0"/>
			<Int sr="arg11" val="0"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/chat/send/document</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{
    "Phone": "%number@s.whatsapp.net",
    "FileName": "%name_pdf",
    "Caption": "%caption_escap",
    "DocumentPath": "%path",
    "is_forwarded": %display_forwarded
  }</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="0"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%caption</lhs>
					<op>12</op>
					<rhs></rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act55" ve="7">
			<code>339</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="0"/>
			<Int sr="arg11" val="0"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/chat/send/document</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{
    "Phone": "%number@s.whatsapp.net",
    "FileName": "%name_pdf",
    "Caption": "",
    "DocumentPath": "%path",
    "is_forwarded": %display_forwarded
  }</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="0"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%caption</lhs>
					<op>13</op>
					<rhs></rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act56" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act57" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act58" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act59" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act6" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%number/%caption/%path/%display_forwarded/%single_view</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act60" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act61" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>text_quote_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act62" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%number/%caption/%message_id</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act63" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var msg = local("caption");
var saida = msg
  .replace(/\\/g, "\\\\")
  .replace(/"/g, '\\"')
  .replace(/\n/g, "\\n")
  .replace(/\r/g, "\\r");

setLocal("caption_escap", saida);</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act64" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/send/message</Str>
			<Str sr="arg3" ve="3">Accept: application/json, text/plain, */*
Content-Type: application/json</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{"Phone":"%number@s.whatsapp.net","message":"%caption_escap","reply_message_id":"%message_id"}</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act65" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act66" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act67" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act68" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act69" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act7" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var msg = local("caption");
var saida = msg
  .replace(/\\/g, "\\\\")
  .replace(/"/g, '\\"')
  .replace(/\n/g, "\\n")
  .replace(/\r/g, "\\r");

setLocal("caption_escap", saida);</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act70" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>text_status_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act71" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%caption/%number</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act72" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var msg = local("caption");
var saida = msg
  .replace(/\\/g, "\\\\")
  .replace(/"/g, '\\"')
  .replace(/\n/g, "\\n")
  .replace(/\r/g, "\\r");

setLocal("caption_escap", saida);</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act73" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/send/message</Str>
			<Str sr="arg3" ve="3">Accept: application/json, text/plain, */*
Content-Type: application/json</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{"phone":"status@broadcast","message":"%caption_escap","is_forwarded":false}</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act74" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act75" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act76" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act77" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act78" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act79" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>image_status_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act8" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/chat/send/image</Str>
			<Str sr="arg3" ve="3">Content-Type: application/json</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{
    "Phone": "%number@s.whatsapp.net",
    "Caption": "%caption_escap",
    "ImagePath": "%path",
    "view_once": %single_view,
    "is_forwarded": %display_forwarded
  }</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%caption</lhs>
					<op>12</op>
					<rhs></rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act80" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%caption/%number/%path</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act81" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var msg = local("caption");
var saida = msg
  .replace(/\\/g, "\\\\")
  .replace(/"/g, '\\"')
  .replace(/\n/g, "\\n")
  .replace(/\r/g, "\\r");

setLocal("caption_escap", saida);</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act82" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/chat/send/image</Str>
			<Str sr="arg3" ve="3">Content-Type: application/json</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{"Phone":"status@broadcast", "Caption":"%caption_escap", "ImagePath":"%path"}</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act83" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act84" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act85" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act86" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act87" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act88" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>video_status_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act89" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%caption/%number/%path</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act9" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/chat/send/image</Str>
			<Str sr="arg3" ve="3">Content-Type: application/json</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{
    "Phone": "%number@s.whatsapp.net",
    "Caption": "",
    "ImagePath": "%path",
    "view_once": %single_view,
    "is_forwarded": %display_forwarded
  }</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%caption</lhs>
					<op>13</op>
					<rhs></rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act90" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var msg = local("caption");
var saida = msg
  .replace(/\\/g, "\\\\")
  .replace(/"/g, '\\"')
  .replace(/\n/g, "\\n")
  .replace(/\r/g, "\\r");

setLocal("caption_escap", saida);</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act91" ve="7">
			<code>339</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="0"/>
			<Int sr="arg11" val="0"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/chat/send/video</Str>
			<Str sr="arg3" ve="3">Content-Type:application/json</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{"Phone":"status@broadcast", "Caption":"%caption_escap", "VideoPath":"%path"}</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act92" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>2</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act93" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Str sr="arg1" ve="3">success</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act94" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3">%result</Str>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act95" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act96" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act97" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%type</lhs>
					<op>2</op>
					<rhs>call_message</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act98" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">010-CHECAR-VARIAVEIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%type/%port/%number/%call_id</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act99" ve="7">
			<code>339</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="1"/>
			<Int sr="arg10" val="0"/>
			<Int sr="arg11" val="0"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">http://localhost:%port/call-ended</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3">{"call_id":"%call_id","Phone":"%number@s.whatsapp.net"}</Str>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Img sr="icn" ve="2">
			<fle>/storage/emulated/0/Tasker/termux/zap-replay-api/icones/system.png</fle>
		</Img>
	</Task>
	<Task sr="task340">
		<cdate>1750774903586</cdate>
		<edate>1751556001940</edate>
		<id>340</id>
		<nme>004 CAPTURAR NÚMERO E JID [ zap-replay-api ] v(1.0)</nme>
		<pri>100</pri>
		<rty>2</rty>
		<Action sr="act0" ve="7">
			<code>365</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%shortcut
Atalho
&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Str sr="arg1" ve="3">ShortcutDialog()</Str>
		</Action>
		<Action sr="act1" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var intentData = local("shortcut");

// Extrair JID (funciona para contato ou grupo)
var jidStart = intentData.indexOf("S.jid=");
var numero = "Não encontrado";

if (jidStart &gt;= 0) {
    jidStart += 6; // tamanho de "S.jid="
    var jidEnd = intentData.indexOf(";", jidStart); // termina no ;
    if (jidEnd &gt;= 0) {
        var jid = intentData.substring(jidStart, jidEnd);
        numero = jid.split("%40")[0]; // remove o sufixo (ex: %40s.whatsapp.net ou %40g.us)
    }
}

// Extrair nome (displayname)
var nameStart = intentData.indexOf("S.displayname=");
var nome = "Não encontrado";

if (nameStart &gt;= 0) {
    nameStart += 14; // tamanho de "S.displayname="
    var nameEnd = intentData.indexOf(";", nameStart);
    if (nameEnd &gt;= 0) {
        var nomeCodificado = intentData.substring(nameStart, nameEnd);
        nome = decodeURIComponent(nomeCodificado);
    }
}

// Salvar variáveis locais
setLocal("number", numero);
setLocal("name", nome);</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act2" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%name</lhs>
					<op>5</op>
					<rhs>.*[A-Za-zÀ-ÿ].*</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act3" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">Sem informações de nome</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="0"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="0"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act4" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act5" ve="7">
			<code>105</code>
			<Str sr="arg0" ve="3">%number</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg2" ve="3"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act6" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">Copiado %number</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="0"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="0"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Img sr="icn" ve="2">
			<fle>/storage/emulated/0/Tasker/termux/zap-replay-api/icones/user-allowed.png</fle>
		</Img>
	</Task>
	<Task sr="task348">
		<cdate>1751567176596</cdate>
		<edate>1751567176596</edate>
		<id>348</id>
		<pri>102</pri>
		<Action sr="act0" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">005-ATUALIZACOES [ zap-replay-api ] v(1.0)</Str>
		</Action>
	</Task>
	<Task sr="task4080">
		<cdate>1751351658710</cdate>
		<edate>1751569754896</edate>
		<id>4080</id>
		<nme>005-ATUALIZACOES [ zap-replay-api ] v(1.0)</nme>
		<pri>100</pri>
		<rty>2</rty>
		<Action sr="act0" ve="7">
			<code>123</code>
			<Str sr="arg0" ve="3">find /storage/emulated/0/Tasker/termux/zap-replay-api/instalacao -type f -name "*.xml" -delete</Str>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="0"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="1"/>
			<Int sr="arg7" val="0"/>
		</Action>
		<Action sr="act1" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%updated_project</lhs>
					<op>2</op>
					<rhs>true</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act10" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%new_update</Str>
			<Str sr="arg1" ve="3">true</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act11" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">005-ATUALIZACOES [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act12" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">006- SCRIPTS-GERAIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+10</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3">atualizacoes</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%new_update</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act13" ve="7">
			<code>47</code>
			<se>false</se>
			<Str sr="arg0" ve="3">005-ATUALIZACOES [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1" val="10"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg2" val="100"/>
			<Int sr="arg3" val="100"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="1"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act14" ve="7">
			<code>53</code>
			<Str sr="arg0" ve="3">005-ATUALIZACOES [ zap-replay-api ] v(1.0)</Str>
			<Str sr="arg1" ve="3">005-ATUALIZACOES [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg2" val="0"/>
			<Str sr="arg3" ve="3"/>
		</Action>
		<Action sr="act15" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act16" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act17" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%caller1</lhs>
					<op>2</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act18" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var http_data = local('http_data');
var update = local('update');

function normalize(text) {
  return text.replace(/(\r\n|\n|\r)$/, '');
}

var http_normalized = normalize(http_data);
var update_normalized = normalize(update);

var is_different = http_normalized !== update_normalized;

setLocal('is_different', is_different.toString());</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act19" ve="7">
			<code>37</code>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%is_different</lhs>
					<op>2</op>
					<rhs>true</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act2" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%update</Str>
			<Str sr="arg1" ve="3">%http_data</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act20" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%new_update</Str>
			<Str sr="arg1" ve="3">true</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act21" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act22" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%new_update</Str>
			<Str sr="arg1" ve="3">false</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act23" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act24" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">005-ATUALIZACOES [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act25" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">006- SCRIPTS-GERAIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+10</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3">atualizacoes</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%new_update</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act26" ve="7">
			<code>47</code>
			<se>false</se>
			<Str sr="arg0" ve="3">005-ATUALIZACOES [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1" val="10"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg2" val="100"/>
			<Int sr="arg3" val="100"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="1"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act27" ve="7">
			<code>53</code>
			<Str sr="arg0" ve="3">005-ATUALIZACOES [ zap-replay-api ] v(1.0)</Str>
			<Str sr="arg1" ve="3">005-ATUALIZACOES [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg2" val="0"/>
			<Str sr="arg3" ve="3"/>
		</Action>
		<Action sr="act28" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act3" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3"/>
		</Action>
		<Action sr="act4" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act5" ve="7">
			<code>339</code>
			<label>=&gt;update_url</label>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="0"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">%update_url</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act6" ve="7">
			<code>135</code>
			<Int sr="arg0" val="1"/>
			<Int sr="arg1" val="1"/>
			<Str sr="arg2" ve="3">=&gt;update_url</Str>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>3</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act7" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%caller1</lhs>
					<op>3</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act8" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var http_data = local('http_data');
var update = local('update');

function normalize(text) {
  return text.replace(/(\r\n|\n|\r)$/, '');
}

var http_normalized = normalize(http_data);
var update_normalized = normalize(update);

var is_different = http_normalized !== update_normalized;

setLocal('is_different', is_different.toString());</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act9" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%is_different</lhs>
					<op>2</op>
					<rhs>true</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Img sr="icn" ve="2">
			<fle>/storage/emulated/0/Tasker/termux/zap-replay-api/icones/user-allowed.png</fle>
		</Img>
		<ProfileVariable sr="pv0">
			<clearout>true</clearout>
			<exportval></exportval>
			<immutable>false</immutable>
			<pvci>true</pvci>
			<pvd></pvd>
			<pvdn></pvdn>
			<pvid>4080</pvid>
			<pvit>t</pvit>
			<pvn>%update_url</pvn>
			<pvt>t</pvt>
			<pvv>https://raw.githubusercontent.com/ZapReplyApi/PROJETO-TASKER-ZAP-REPLAY-API/refs/heads/main/Update-ZapReplyApi.txt</pvv>
			<strout>true</strout>
		</ProfileVariable>
		<ProfileVariable sr="pv1">
			<clearout>true</clearout>
			<exportval></exportval>
			<immutable>false</immutable>
			<pvci>true</pvci>
			<pvd></pvd>
			<pvdn></pvdn>
			<pvid>4080</pvid>
			<pvit>t</pvit>
			<pvn>%update</pvn>
			<pvt>t</pvt>
			<pvv>        &lt;p class="changelog-text"&gt;
            &lt;b&gt;*Melhoria de Funcionalidades*&lt;/b&gt;&lt;br&gt;
            Melhorias nas responsividades das cenas&lt;br&gt;
            01 de Julho de 2025&lt;br&gt;
        &lt;/p&gt;
</pvv>
			<strout>true</strout>
		</ProfileVariable>
		<ProfileVariable sr="pv2">
			<clearout>true</clearout>
			<exportval></exportval>
			<immutable>false</immutable>
			<pvci>true</pvci>
			<pvd></pvd>
			<pvdn></pvdn>
			<pvid>4080</pvid>
			<pvit>t</pvit>
			<pvn>%template_url</pvn>
			<pvt>t</pvt>
			<pvv>https://raw.githubusercontent.com/ZapReplyApi/PROJETO-TASKER-ZAP-REPLAY-API/refs/heads/main/ZAP_RAPLY_API_v_1.0_.prj.xml</pvv>
			<strout>true</strout>
		</ProfileVariable>
		<ProfileVariable sr="pv3">
			<clearout>true</clearout>
			<exportval></exportval>
			<immutable>false</immutable>
			<pvci>true</pvci>
			<pvd></pvd>
			<pvdn></pvdn>
			<pvid>4080</pvid>
			<pvit>t</pvit>
			<pvn>%version_url</pvn>
			<pvt>t</pvt>
			<pvv>https://raw.githubusercontent.com/ZapReplyApi/PROJETO-TASKER-ZAP-REPLAY-API/refs/heads/main/VERSION.txt</pvv>
			<strout>true</strout>
		</ProfileVariable>
	</Task>
	<Task sr="task5001">
		<cdate>1751354730604</cdate>
		<edate>1751569766892</edate>
		<id>5001</id>
		<nme>012-MENSAGENS-RECEBIDAS [ zap-replay-api ] v(1.0)</nme>
		<pri>6</pri>
		<rty>2</rty>
		<Action sr="act0" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%caller1</lhs>
					<op>3</op>
					<rhs>ui</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act1" ve="7">
			<code>342</code>
			<Int sr="arg0" val="5"/>
			<Str sr="arg1" ve="3">Tasker/termux/zap-replay-api/instalacao/users_connecteds.txt</Str>
			<Str sr="arg2" ve="3">%in_exist</Str>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="1"/>
		</Action>
		<Action sr="act10" ve="7">
			<code>159</code>
			<Str sr="arg0" ve="3">001-BAIXAR-ICONES [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1" val="0"/>
		</Action>
		<Action sr="act11" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act12" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var jsonString = local("http_request_body");

function converterUnicode(str) {
    if (!str) return "";
    return str.replace(/\\u([\dA-Fa-f]{4})/g, function(match, codigoHex) {
        return String.fromCharCode(parseInt(codigoHex, 16));
    });
}

function extractPhoneNumber(vcard) {
    if (!vcard) return "";
    // Extrair o número do campo waid ou TEL no vcard
    const match = vcard.match(/waid=(\d+):\+([\d\s-]+)/) || vcard.match(/TEL[^:]*:(\+[\d\s-]+)/);
    return match ? match[1].replace(/[\s-]/g, "") : "";
}

try {
    var json = JSON.parse(jsonString);
    
    var port = json.Port || "";
    var sender_number = json.SenderNumber ? json.SenderNumber.split("@")[0] : "";
    var message_id = json.message?.ID || "";
    var message = json.message?.TextMessage || "";
    var is_group = String(json.IsGroup || "false");
    var my_number = String(json.MyNumber || "false");
    
    var pushname = converterUnicode(json.PushName) || "";
    var group_name = (is_group === "true") ? converterUnicode(json.GroupName) || "" : "";
    
    var type = json.Type || "";
    var message_origin = json.message?.MessageOrigin || "";
    var replied_id = json.message?.RepliedId || "";
    
    var jid = "";
    if (json.SenderNumber &amp;&amp; json.SenderNumber.includes("g.us")) {
        var match = json.SenderNumber.match(/(\d+)@g\.us/);
        if (match &amp;&amp; match[1]) {
            jid = match[1];
        }
    }

    var timestamp = "";
    if (json.timestamp) {
        var data = new Date(json.timestamp);
        timestamp = 
            ("0" + data.getDate()).slice(-2) + "/" +
            ("0" + (data.getMonth() + 1)).slice(-2) + "/" +
            data.getFullYear() + " " +
            ("0" + data.getHours()).slice(-2) + "." +
            ("0" + data.getMinutes()).slice(-2) + "." +
            ("0" + data.getSeconds()).slice(-2);
    }
    
    var call_id = json.Call_Id || "";
    var call_status = json.Status_Call || "";
    
    // Processar informações de contato
    var vcard = "";
    if (type === "contact" &amp;&amp; json.contact &amp;&amp; typeof json.contact === "object") {
        if (Array.isArray(json.contact)) {
            // Caso de múltiplos contatos
            vcard = json.contact.map(contact =&gt; ({
                name: contact.displayName || "",
                number: extractPhoneNumber(contact.vcard)
            }));
        } else if (json.contact.displayName || json.contact.vcard) {
            // Caso de um único contato
            vcard = {
                name: json.contact.displayName || "",
                number: extractPhoneNumber(json.contact.vcard)
            };
        }
    }
    
    // Processar informações de link
    var link_title = json.message?.TitleLink || "";
    var link_description = json.message?.LinkDescription || "";
    
    // Processar link do Google Maps para localização
    var link_google_maps = "";
    if ((type === "live_location_message" || type === "location_message") &amp;&amp; json.live_location) {
        var latitude = json.live_location.degreesLatitude || 0;
        var longitude = json.live_location.degreesLongitude || 0;
        link_google_maps = `https://www.google.com/maps?q=${latitude},${longitude}`;
    } else if ((type === "live_location_message" || type === "location_message") &amp;&amp; json.location) {
        var latitude = json.location.degreesLatitude || 0;
        var longitude = json.location.degreesLongitude || 0;
        link_google_maps = `https://www.google.com/maps?q=${latitude},${longitude}`;
    }
    
    // Criar objeto com todas as variáveis na sequência especificada
    var output = {
        port: port,
        type: type,
        sender_number: sender_number,
        pushname: pushname,
        group_name: group_name,
        jid: jid,
        is_group: is_group,
        message_id: message_id,
        message: message,
        my_number: my_number,
        message_origin: message_origin,
        replied_id: replied_id,
        call_id: call_id,
        call_status: call_status,
        timestamp: timestamp,
        vcard: vcard,
        link_title: link_title,
        link_description: link_description,
        link_google_maps: link_google_maps
    };
    
    // Converter para JSON e salvar na variável de saída
    setLocal("output_json", JSON.stringify(output));
    
    // SetLocal na sequência especificada
    setLocal("port", port);
    setLocal("type", type);
    setLocal("sender_number", sender_number);
    setLocal("pushname", pushname);
    setLocal("group_name", group_name);
    setLocal("jid", jid);
    setLocal("is_group", is_group);
    setLocal("message_id", message_id);
    setLocal("message", message);
    setLocal("my_number", my_number);
    setLocal("message_origin", message_origin);
    setLocal("replied_id", replied_id);
    setLocal("call_id", call_id);
    setLocal("call_status", call_status);
    setLocal("timestamp", timestamp);
    setLocal("vcard", JSON.stringify(vcard || ""));
    setLocal("link_title", link_title);
    setLocal("link_description", link_description);
    setLocal("link_google_maps", link_google_maps);

} catch (e) {
    // Criar objeto com valores vazios na sequência especificada
    var output = {
        port: "",
        type: "",
        sender_number: "",
        pushname: "",
        group_name: "",
        jid: "",
        is_group: "",
        message_id: "",
        message: "",
        my_number: "",
        message_origin: "",
        replied_id: "",
        call_id: "",
        call_status: "",
        timestamp: "",
        vcard: "",
        link_title: "",
        link_description: "",
        link_google_maps: ""
    };
    
    // Converter para JSON e salvar na variável de saída
    setLocal("output_json", JSON.stringify(output));
    
    // SetLocal na sequência especificada
    setLocal("port", "");
    setLocal("type", "");
    setLocal("sender_number", "");
    setLocal("pushname", "");
    setLocal("group_name", "");
    setLocal("jid", "");
    setLocal("is_group", "");
    setLocal("message_id", "");
    setLocal("message", "");
    setLocal("my_number", "");
    setLocal("message_origin", "");
    setLocal("replied_id", "");
    setLocal("call_id", "");
    setLocal("call_status", "");
    setLocal("timestamp", "");
    setLocal("vcard", "");
    setLocal("link_title", "");
    setLocal("link_description", "");
    setLocal("link_google_maps", "");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act13" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var jsonString = local("http_request_body");

function converterUnicode(str) {
    if (!str) return "";
    return str.replace(/\\u([\dA-Fa-f]{4})/g, function(match, codigoHex) {
        return String.fromCharCode(parseInt(codigoHex, 16));
    });
}

function extractPhoneNumber(vcard) {
    if (!vcard) return "";
    const match = vcard.match(/waid=(\d+):\+([\d\s-]+)/) || vcard.match(/TEL[^:]*:(\+[\d\s-]+)/);
    return match ? match[1].replace(/[\s-]/g, "") : "";
}

// Função para mapear mime_type para extensão de arquivo
function getFileExtension(mime_type) {
    if (!mime_type) return "";
    const mimeMap = {
        "image/jpeg": ".jpeg",
        "image/png": ".png",
        "image/gif": ".gif",
        "video/mp4": ".mp4",
        "video/3gpp": ".3gp",
        "audio/mpeg": ".mp3",
        "audio/ogg": ".ogg",
        "audio/aac": ".aac",
        "document/pdf": ".pdf"
    };
    return mimeMap[mime_type] || "";
}

try {
    var json = JSON.parse(jsonString);
    
    var port = json.Port || "";
    var sender_number = json.SenderNumber ? json.SenderNumber.split("@")[0] : "";
    var message_id = json.message?.ID || "";
    var message = json.message?.TextMessage || "";
    var is_group = String(json.IsGroup || "false");
    var my_number = String(json.MyNumber || "false");
    
    var pushname = converterUnicode(json.PushName) || "";
    var group_name = (is_group === "true") ? converterUnicode(json.GroupName) || "" : "";
    
    var type = json.Type || "";
    var message_origin = json.message?.MessageOrigin || "";
    var replied_id = json.message?.RepliedId || "";
    
    var jid = "";
    if (json.SenderNumber &amp;&amp; json.SenderNumber.includes("g.us")) {
        var match = json.SenderNumber.match(/(\d+)@g\.us/);
        if (match &amp;&amp; match[1]) {
            jid = match[1];
        }
    }

    var timestamp = "";
    if (json.timestamp) {
        var data = new Date(json.timestamp);
        timestamp = 
            ("0" + data.getDate()).slice(-2) + "/" +
            ("0" + (data.getMonth() + 1)).slice(-2) + "/" +
            data.getFullYear() + " " +
            ("0" + data.getHours()).slice(-2) + "." +
            ("0" + data.getMinutes()).slice(-2) + "." +
            ("0" + data.getSeconds()).slice(-2);
    }
    
    var call_id = json.Call_Id || "";
    var call_status = json.Status_Call || "";
    
    // Processar informações de contato
    var vcard = "";
    if (type === "contact" &amp;&amp; json.contact &amp;&amp; typeof json.contact === "object") {
        if (Array.isArray(json.contact)) {
            vcard = json.contact.map(contact =&gt; ({
                name: contact.displayName || "",
                number: extractPhoneNumber(contact.vcard)
            }));
        } else if (json.contact.displayName || json.contact.vcard) {
            vcard = {
                name: json.contact.displayName || "",
                number: extractPhoneNumber(json.contact.vcard)
            };
        }
    }
    
    // Processar informações de link
    var link_title = json.message?.TitleLink || "";
    var link_description = json.message?.LinkDescription || "";
    
    // Processar link do Google Maps para localização
    var link_google_maps = "";
    if ((type === "live_location_message" || type === "location_message") &amp;&amp; json.live_location) {
        var latitude = json.live_location.degreesLatitude || 0;
        var longitude = json.live_location.degreesLongitude || 0;
        link_google_maps = `https://www.google.com/maps?q=${latitude},${longitude}`;
    } else if ((type === "live_location_message" || type === "location_message") &amp;&amp; json.location) {
        var latitude = json.location.degreesLatitude || 0;
        var longitude = json.location.degreesLongitude || 0;
        link_google_maps = `https://www.google.com/maps?q=${latitude},${longitude}`;
    }
    
    // Processar extensão do arquivo e caption
    var file_extension = "";
    var caption = "";
    if (type === "image_message" &amp;&amp; json.image) {
        file_extension = getFileExtension(json.image.mime_type);
        caption = json.image.caption || "";
    } else if (type === "video_message" &amp;&amp; json.video) {
        file_extension = getFileExtension(json.video.mime_type);
        caption = json.video.caption || "";
    } else if (type === "video_snapshot_message" &amp;&amp; json.video) { // Novo caso adicionado
        file_extension = getFileExtension(json.video.mime_type);
        caption = json.video.caption || "";
    } else if (type === "audio_message" &amp;&amp; json.audio) {
        file_extension = getFileExtension(json.audio.mime_type);
        caption = json.audio.caption || "";
    } else if (type === "document_message" &amp;&amp; json.document) {
        file_extension = getFileExtension(json.document.mime_type);
        caption = json.document.caption || "";
    }
    
    // Criar objeto com todas as variáveis na sequência especificada
    var output = {
        port: port,
        type: type,
        sender_number: sender_number,
        pushname: pushname,
        group_name: group_name,
        jid: jid,
        is_group: is_group,
        message_id: message_id,
        message: message,
        my_number: my_number,
        message_origin: message_origin,
        replied_id: replied_id,
        call_id: call_id,
        call_status: call_status,
        timestamp: timestamp,
        vcard: vcard,
        link_title: link_title,
        link_description: link_description,
        link_google_maps: link_google_maps,
        file_extension: file_extension,
        caption: caption
    };
    
    // Converter para JSON e salvar na variável de saída
    setLocal("output_json", JSON.stringify(output));
    
    // SetLocal na sequência especificada
    setLocal("port", port);
    setLocal("type", type);
    setLocal("sender_number", sender_number);
    setLocal("pushname", pushname);
    setLocal("group_name", group_name);
    setLocal("jid", jid);
    setLocal("is_group", is_group);
    setLocal("message_id", message_id);
    setLocal("message", message);
    setLocal("my_number", my_number);
    setLocal("message_origin", message_origin);
    setLocal("replied_id", replied_id);
    setLocal("call_id", call_id);
    setLocal("call_status", call_status);
    setLocal("timestamp", timestamp);
    setLocal("vcard", JSON.stringify(vcard || ""));
    setLocal("link_title", link_title);
    setLocal("link_description", link_description);
    setLocal("link_google_maps", link_google_maps);
    setLocal("file_extension", file_extension);
    setLocal("caption", caption);

} catch (e) {
    // Criar objeto com valores vazios na sequência especificada
    var output = {
        port: "",
        type: "",
        sender_number: "",
        pushname: "",
        group_name: "",
        Diagnostics: {
            Error: e.message
        },
        jid: "",
        is_group: "",
        message_id: "",
        message: "",
        my_number: "",
        message_origin: "",
        replied_id: "",
        call_id: "",
        call_status: "",
        timestamp: "",
        vcard: "",
        link_title: "",
        link_description: "",
        link_google_maps: "",
        file_extension: "",
        caption: ""
    };
    
    // Converter para JSON e salvar na variável de saída
    setLocal("output_json", JSON.stringify(output));
    
    // SetLocal na sequência especificada
    setLocal("port", "");
    setLocal("type", "");
    setLocal("sender_number", "");
    setLocal("pushname", "");
    setLocal("group_name", "");
    setLocal("jid", "");
    setLocal("is_group", "");
    setLocal("message_id", "");
    setLocal("message", "");
    setLocal("my_number", "");
    setLocal("message_origin", "");
    setLocal("replied_id", "");
    setLocal("call_id", "");
    setLocal("call_status", "");
    setLocal("timestamp", "");
    setLocal("vcard", "");
    setLocal("link_title", "");
    setLocal("link_description", "");
    setLocal("link_google_maps", "");
    setLocal("file_extension", "");
    setLocal("file_caption", "");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act14" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%output_json</Str>
			<Str sr="arg1" ve="3">%output_json</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act15" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">MENSAGENS-RECEBIDAS [ zap-replay-api ]</Str>
			<Int sr="arg1">
				<var>%priority+30</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%http_request_body/%output_json/%port/%type/%sender_number/%pushname/%group_name/%jid/%is_group/%message_id/%message/%my_number/%message_origin/%replied_id/%call_id/%call_status/%timestamp/%vcard/%link_title/%link_description/%link_google_maps/%file_extension/%file_caption</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act16" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act2" ve="7">
			<code>417</code>
			<se>false</se>
			<Str sr="arg0" ve="3">Tasker/termux/zap-replay-api/instalacao/users_connecteds.txt</Str>
			<Str sr="arg1" ve="3">%users_connecteds</Str>
			<Int sr="arg2" val="1"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%in_exist</lhs>
					<op>2</op>
					<rhs>true</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act3" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var users_connecteds = local('users_connecteds');

function isValidJson(jsonString) {
  try {
    const parsed = JSON.parse(jsonString);
    return Array.isArray(parsed); // Verifica se é um array
  } catch (e) {
    return false; // Retorna false se o JSON for inválido
  }
}

var is_valid = isValidJson(users_connecteds);

setLocal('json_valid', is_valid.toString());</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act4" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%json_valid</lhs>
					<op>2</op>
					<rhs>true</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act5" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%users</Str>
			<Str sr="arg1" ve="3">%users_connecteds</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act6" ve="7">
			<code>43</code>
		</Action>
		<Action sr="act7" ve="7">
			<code>159</code>
			<Str sr="arg0" ve="3">003-RECEBER_MENSAGENS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1" val="0"/>
		</Action>
		<Action sr="act8" ve="7">
			<code>159</code>
			<Str sr="arg0" ve="3">002-RECONECTAR [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1" val="0"/>
		</Action>
		<Action sr="act9" ve="7">
			<code>159</code>
			<Str sr="arg0" ve="3">004- CENTRAL-DE-ATUALIZACOES [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1" val="0"/>
		</Action>
		<Img sr="icn" ve="2">
			<fle>/storage/emulated/0/Tasker/termux/zap-replay-api/icones/system.png</fle>
		</Img>
	</Task>
	<Task sr="task61">
		<cdate>1749667525619</cdate>
		<edate>1751567135455</edate>
		<id>61</id>
		<nme>006- SCRIPTS-GERAIS [ zap-replay-api ] v(1.0)</nme>
		<pri>100</pri>
		<rty>2</rty>
		<Action sr="act0" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%par1</lhs>
					<op>2</op>
					<rhs>menu-inicial</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act1" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%project_path</Str>
			<Str sr="arg1" ve="3">/storage/emulated/0/Tasker/task-web-view/zap-replay-api/menu-inicial</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act10" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act11" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act12" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%par1</lhs>
					<op>2</op>
					<rhs>script-instalacao</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act13" ve="7">
			<code>547</code>
			<label>Caminho base para salvar arquivos da tarefa</label>
			<Str sr="arg0" ve="3">%termux_path</Str>
			<Str sr="arg1" ve="3">/storage/emulated/0/Tasker/termux/zap-replay-api/instalacao/sh</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act14" ve="7">
			<code>410</code>
			<label>Script com código a ser executado</label>
			<Str sr="arg0" ve="3">%termux_path/install.sh</Str>
			<Str sr="arg1" ve="3">#!/data/data/com.termux/files/usr/bin/bash

# Definir variáveis
RESET=%json_conect.reset        # true para apagar tudo; false para apagar apenas a pasta da instância
PORT=%json_conect.port         # Porta para a instância
FOREIGN_KEYS=on   # on ou off para foreign keys no banco de dados
CHAT_STORAGE=true # true ou false para WHATSAPP_CHAT_STORAGE

BLUE='\033[1;34m'
NC='\033[0m' # Reset

LOG_DIR="/storage/emulated/0/Tasker/termux/zap-replay-api/instalacao/logs"
LOG_FILE="$LOG_DIR/install.txt"
PROGRESS_FILE="$LOG_DIR/progress.txt"

# Criar diretório de logs e limpar arquivos antigos
mkdir -p "$LOG_DIR"
rm -f "$LOG_DIR"/* # Limpa todos os arquivos no diretório de logs, incluindo progress.txt
: &gt; "$PROGRESS_FILE" # Garante que progress.txt esteja vazio para uma instalação limpa
exec &gt; &gt;(tee -a "$LOG_FILE") 2&gt;&amp;1

# Contador de processos (25 etapas principais antes de iniciar o servidor)
TOTAL_STEPS=25
CURRENT_STEP=0

# Lista de tempos fixos para cada processo (em segundos, ajuste manualmente aqui)
DELAYS=(0 5 5 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0) # 25 valores
DELAY_INDEX=0

# Função para aplicar tempo fixo
fixed_delay() {
    DELAY=${DELAYS[$DELAY_INDEX]}
    echo "[+] Aguardando $DELAY segundos antes do próximo processo..."
    sleep $DELAY
    DELAY_INDEX=$((DELAY_INDEX + 1))
}

# Função para atualizar progresso
update_progress() {
    CURRENT_STEP=$((CURRENT_STEP + 1))
    PROGRESS=$(awk "BEGIN {printf \"%.2f\", ($CURRENT_STEP * 100) / $TOTAL_STEPS}")
    echo "Progresso: $PROGRESS%" &gt;&gt; "$PROGRESS_FILE"
}

clear

print_banner() {
  echo -e "${BLUE}"
  echo "▁ ▂ ▄ ▅ ▆ ▇ █ ᴢᴀᴘʀᴇᴘʟʏᴀᴘɪ █ ▇ ▆ ▅ ▄ ▂ ▁"
  echo -e "${NC}"
  fixed_delay
  update_progress
}

print_banner

# Configurar mirror do Termux
echo "[+] Configurando mirror do Termux..."
echo "deb https://termux.mentality.rip/termux-main stable main" &gt; $PREFIX/etc/apt/sources.list
echo "[✓] Mirror configurado."
echo ""
fixed_delay
update_progress

print_banner

# Atualizar pacotes
echo "[+] Atualizando pacotes do Termux..."
yes | pkg update -o Acquire::Retries=3 --allow-downgrades &amp;&amp; yes | pkg upgrade -o Acquire::Retries=3 --allow-downgrades
echo "[✓] Atualização finalizada."
echo ""
fixed_delay
update_progress

print_banner

install_if_missing() {
  if ! command -v "$1" &gt;/dev/null 2&gt;&amp;1; then
    echo "[+] Instalando pacote: $1..."
    pkg install -y "$1" -o Acquire::Retries=3
  else
    echo "[✓] Pacote já instalado: $1"
  fi
  fixed_delay
  update_progress
}

install_if_missing git
install_if_missing golang
install_if_missing ffmpeg
install_if_missing psmisc
echo "[✓] Pacotes essenciais instalados."
echo ""
fixed_delay
update_progress

print_banner

# Configurar Git
echo "[+] Configurando Git..."
git config --global http.lowSpeedLimit 0
git config --global http.lowSpeedTime 999999
git config --global http.retries 3
echo "[✓] Git configurado."
echo ""
fixed_delay
update_progress

# Definir PROJECT_DIR
PROJECT_DIR="$HOME/ZapReplyApi$PORT"

# Lógica para RESET
if [ "$RESET" = "true" ]; then
    echo "[!] RESET=true: Apagando todas as pastas ZapReplyApi*..."
    rm -rf "$HOME"/ZapReplyApi*
    echo "[✓] Pastas removidas."
else
    if [ -d "$PROJECT_DIR" ]; then
        echo "[!] Diretório '$PROJECT_DIR' existe. Removendo..."
        rm -rf "$PROJECT_DIR"
        echo "[✓] Diretório removido."
    else
        echo "[+] Diretório não encontrado. Clonando repositório..."
    fi
fi
fixed_delay
update_progress

# Clonar repositório
echo "[+] Clonando repositório ZapReplyApi..."
git clone https://github.com/ZapReplyApi/ZapReplyApi.git "$PROJECT_DIR" --depth=1
echo "[✓] Repositório clonado."
echo ""
fixed_delay
update_progress

print_banner

# Verificar pasta src
if [ -f "$PROJECT_DIR/src/main.go" ]; then
    cd "$PROJECT_DIR/src" || { echo "[ERRO] Falha ao acessar $PROJECT_DIR/src"; exit 1; }
else
    echo -e "${BLUE}[ERRO] main.go não encontrado em $PROJECT_DIR/src.${NC}"
    exit 1
fi
fixed_delay
update_progress

# Configurar proxy Go
echo "[+] Configurando proxy Go..."
export GOPROXY=https://goproxy.io
echo "[✓] Proxy configurado."
echo ""
fixed_delay
update_progress

# Instalar dependências Go
echo "[+] Instalando dependências Go..."
go get -u -v go.mau.fi/whatsmeow@latest
go get -u -v golang.org/x/sync/errgroup@latest
go get -u -v github.com/joho/godotenv@latest
go get -u -v github.com/gofiber/fiber/v2@latest
go get -u -v github.com/sirupsen/logrus@latest
go get -u -v modernc.org/sqlite@latest
go mod tidy
echo "[✓] Dependências instaladas."
echo ""
fixed_delay
update_progress

print_banner

# Compilar
echo "[+] Compilando zapreplayapi..."
if ! go build -o zapreplayapi 2&gt; build_error.log; then
    echo "[ERRO] Falha na compilação. Detalhes:"
    cat build_error.log
    rm build_error.log
    exit 1
fi
if [ ! -f zapreplayapi ]; then
    echo "[ERRO] Executável zapreplayapi não foi gerado."
    exit 1
fi
echo "[✓] Compilação concluída."
echo ""
fixed_delay
update_progress

print_banner

# Criar diretório storages
echo "[+] Criando diretório storages..."
mkdir -p storages
echo "[✓] Diretório criado."
echo ""
fixed_delay
update_progress

# Criar .env
echo "[+] Criando .env..."
cat &gt; .env &lt;&lt; EOL
APP_PORT=$PORT
DB_URI=file:storages/whatsapp.db?_foreign_keys=$FOREIGN_KEYS
WHATSAPP_WEBHOOK=http://localhost:3129/Tasker
WHATSAPP_CHAT_STORAGE=$CHAT_STORAGE
APP_OS=ZAP-REPLAY-API
APP_CHAT_FLUSH_INTERVAL=7
EOL
echo "[✓] .env criado."
echo ""
fixed_delay
update_progress

print_banner

# Mensagem de conclusão
echo -e "${BLUE}╔═══════════════════════════════════════════════╗${NC}"
echo -e "${BLUE}║        Instalação concluída com sucesso!      ║${NC}"
echo -e "${BLUE}║      Desenvolvido por: Andredye Oliveira      ║${NC}"
echo -e "${BLUE}╚═══════════════════════════════════════════════╝${NC}"
echo "✅ Iniciando zapreplayapi..."
fixed_delay
update_progress # Última atualização do progresso, atinge 100%

# Iniciar servidor
echo "[+] Iniciando servidor..."
echo "🔍 Procurando processo zapreplayapi..."
PID=$(ps aux | grep "./zapreplayapi" | grep -v grep | awk '{print $2}')
if [ -n "$PID" ]; then
    echo "🔴 Processo encontrado: PID $PID. Encerrando..."
    kill -9 $PID
    echo "✅ Processo $PID encerrado."
else
    echo "🟢 Nenhum processo encontrado."
fi

echo "🚀 Iniciando zapreplayapi..."
./zapreplayapi rest --debug=true</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act15" ve="7">
			<code>410</code>
			<label>Script com código a ser executado</label>
			<on>false</on>
			<Str sr="arg0" ve="3">%termux_path/install.sh</Str>
			<Str sr="arg1" ve="3">#!/data/data/com.termux/files/usr/bin/bash

# Definir variáveis
RESET=true        # true para apagar tudo; false para apagar apenas a pasta da instância
PORT=7774         # Porta para a instância
FOREIGN_KEYS=on   # on ou off para foreign keys no banco de dados
CHAT_STORAGE=true # true ou false para WHATSAPP_CHAT_STORAGE

BLUE='\033[1;34m'
NC='\033[0m' # Reset

LOG_DIR="/storage/emulated/0/Tasker/termux/zap-replay-api/instalacao/logs"
LOG_FILE="$LOG_DIR/install.txt"
PROGRESS_FILE="$LOG_DIR/progress.txt"

# Criar diretório de logs e limpar arquivos antigos
mkdir -p "$LOG_DIR"
rm -f "$LOG_DIR"/* # Limpa todos os arquivos no diretório de logs, incluindo progress.txt
: &gt; "$PROGRESS_FILE" # Garante que progress.txt esteja vazio para uma instalação limpa
exec &gt; &gt;(tee -a "$LOG_FILE") 2&gt;&amp;1

# Contador de processos (25 etapas principais antes de iniciar o servidor)
TOTAL_STEPS=25
CURRENT_STEP=0

# Lista de tempos fixos para cada processo (em segundos, ajuste manualmente aqui)
DELAYS=(0 5 5 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0 0) # 25 valores
DELAY_INDEX=0

# Função para aplicar tempo fixo
fixed_delay() {
    DELAY=${DELAYS[$DELAY_INDEX]}
    echo "[+] Aguardando $DELAY segundos antes do próximo processo..."
    sleep $DELAY
    DELAY_INDEX=$((DELAY_INDEX + 1))
}

# Função para atualizar progresso
update_progress() {
    CURRENT_STEP=$((CURRENT_STEP + 1))
    PROGRESS=$(awk "BEGIN {printf \"%.2f\", ($CURRENT_STEP * 100) / $TOTAL_STEPS}")
    echo "Progresso: $PROGRESS%" &gt;&gt; "$PROGRESS_FILE"
}

clear

print_banner() {
  echo -e "${BLUE}"
  echo "▁ ▂ ▄ ▅ ▆ ▇ █ ᴢᴀᴘʀᴇᴘʟʏᴀᴘɪ █ ▇ ▆ ▅ ▄ ▂ ▁"
  echo -e "${NC}"
  fixed_delay
  update_progress
}

print_banner

# Configurar mirror do Termux
echo "[+] Configurando mirror do Termux..."
echo "deb https://termux.mentality.rip/termux-main stable main" &gt; $PREFIX/etc/apt/sources.list
echo "[✓] Mirror configurado."
echo ""
fixed_delay
update_progress

print_banner

# Atualizar pacotes
echo "[+] Atualizando pacotes do Termux..."
yes | pkg update -o Acquire::Retries=3 --allow-downgrades &amp;&amp; yes | pkg upgrade -o Acquire::Retries=3 --allow-downgrades
echo "[✓] Atualização finalizada."
echo ""
fixed_delay
update_progress

print_banner

install_if_missing() {
  if ! command -v "$1" &gt;/dev/null 2&gt;&amp;1; then
    echo "[+] Instalando pacote: $1..."
    pkg install -y "$1" -o Acquire::Retries=3
  else
    echo "[✓] Pacote já instalado: $1"
  fi
  fixed_delay
  update_progress
}

install_if_missing git
install_if_missing golang
install_if_missing ffmpeg
install_if_missing psmisc
echo "[✓] Pacotes essenciais instalados."
echo ""
fixed_delay
update_progress

print_banner

# Configurar Git
echo "[+] Configurando Git..."
git config --global http.lowSpeedLimit 0
git config --global http.lowSpeedTime 999999
git config --global http.retries 3
echo "[✓] Git configurado."
echo ""
fixed_delay
update_progress

# Definir PROJECT_DIR
PROJECT_DIR="$HOME/ZapReplyApi$PORT"

# Lógica para RESET
if [ "$RESET" = "true" ]; then
    echo "[!] RESET=true: Apagando todas as pastas ZapReplyApi*..."
    rm -rf "$HOME"/ZapReplyApi*
    echo "[✓] Pastas removidas."
else
    if [ -d "$PROJECT_DIR" ]; then
        echo "[!] Diretório '$PROJECT_DIR' existe. Removendo..."
        rm -rf "$PROJECT_DIR"
        echo "[✓] Diretório removido."
    else
        echo "[+] Diretório não encontrado. Clonando repositório..."
    fi
fi
fixed_delay
update_progress

# Clonar repositório
echo "[+] Clonando repositório ZapReplyApi..."
git clone https://github.com/ZapReplyApi/ZapReplyApi.git "$PROJECT_DIR" --depth=1
echo "[✓] Repositório clonado."
echo ""
fixed_delay
update_progress

print_banner

# Verificar pasta src
if [ -f "$PROJECT_DIR/src/main.go" ]; then
    cd "$PROJECT_DIR/src" || { echo "[ERRO] Falha ao acessar $PROJECT_DIR/src"; exit 1; }
else
    echo -e "${BLUE}[ERRO] main.go não encontrado em $PROJECT_DIR/src.${NC}"
    exit 1
fi
fixed_delay
update_progress

# Configurar proxy Go
echo "[+] Configurando proxy Go..."
export GOPROXY=https://goproxy.io
echo "[✓] Proxy configurado."
echo ""
fixed_delay
update_progress

# Instalar dependências Go
echo "[+] Instalando dependências Go..."
go get -u -v go.mau.fi/whatsmeow@latest
go get -u -v golang.org/x/sync/errgroup@latest
go get -u -v github.com/joho/godotenv@latest
go get -u -v github.com/gofiber/fiber/v2@latest
go get -u -v github.com/sirupsen/logrus@latest
go get -u -v modernc.org/sqlite@latest
go mod tidy
echo "[✓] Dependências instaladas."
echo ""
fixed_delay
update_progress

print_banner

# Compilar
echo "[+] Compilando zapreplayapi..."
if ! go build -o zapreplayapi 2&gt; build_error.log; then
    echo "[ERRO] Falha na compilação. Detalhes:"
    cat build_error.log
    rm build_error.log
    exit 1
fi
if [ ! -f zapreplayapi ]; then
    echo "[ERRO] Executável zapreplayapi não foi gerado."
    exit 1
fi
echo "[✓] Compilação concluída."
echo ""
fixed_delay
update_progress

print_banner

# Criar diretório storages
echo "[+] Criando diretório storages..."
mkdir -p storages
echo "[✓] Diretório criado."
echo ""
fixed_delay
update_progress

# Criar .env
echo "[+] Criando .env..."
cat &gt; .env &lt;&lt; EOL
APP_PORT=$PORT
DB_URI=file:storages/whatsapp.db?_foreign_keys=$FOREIGN_KEYS
WHATSAPP_WEBHOOK=http://localhost:3129/Tasker
WHATSAPP_CHAT_STORAGE=$CHAT_STORAGE
APP_OS=ZAP-REPLAY-API
APP_CHAT_FLUSH_INTERVAL=7
EOL
echo "[✓] .env criado."
echo ""
fixed_delay
update_progress

print_banner

# Mensagem de conclusão
echo -e "${BLUE}╔═══════════════════════════════════════════════╗${NC}"
echo -e "${BLUE}║        Instalação concluída com sucesso!      ║${NC}"
echo -e "${BLUE}║      Desenvolvido por: Andredye Oliveira      ║${NC}"
echo -e "${BLUE}╚═══════════════════════════════════════════════╝${NC}"
echo "✅ Iniciando zapreplayapi..."
fixed_delay
update_progress # Última atualização do progresso, atinge 100%

# Iniciar servidor
echo "[+] Iniciando servidor..."
echo "🔍 Procurando processo zapreplayapi..."
PID=$(ps aux | grep "./zapreplayapi" | grep -v grep | awk '{print $2}')
if [ -n "$PID" ]; then
    echo "🔴 Processo encontrado: PID $PID. Encerrando..."
    kill -9 $PID
    echo "✅ Processo $PID encerrado."
else
    echo "🟢 Nenhum processo encontrado."
fi

echo "🚀 Iniciando zapreplayapi..."
./zapreplayapi rest --debug=true</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act16" ve="7">
			<code>389</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""/&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Str sr="arg1" ve="3">%exe
%script
%path
%bkg</Str>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3">$PREFIX/bin/bash
%termux_path/install.sh
/sdcard/
false</Str>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="3"/>
			<Int sr="arg7" val="0"/>
			<Int sr="arg8" val="0"/>
		</Action>
		<Action sr="act17" ve="7">
			<code>365</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""/&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Str sr="arg1" ve="3">TermuxCommand(%exe,%script,%path,%bkg)</Str>
		</Action>
		<Action sr="act18" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act19" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act2" ve="7">
			<code>410</code>
			<label>&lt;b&gt;&lt;font color=#00bfff&gt;

project_path "css"</label>
			<Str sr="arg0" ve="3">%project_path/css/index.css</Str>
			<Str sr="arg1" ve="3">/* Variáveis de cores */
:root {
    --torea-bay: #0d23b3; /* Cor predominante */
    --denim: #1a66c9;
    --picton-blue: #49cee4;
    --botticelli: #d3e3ea;
    --curious-blue: #2593db;
    --ship-cove: #7185c3;
    --victoria: #4c4e94;
    --text-color: #555;
    --developer-color: #2593db;
}

/* Reset e configurações globais */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body,
html {
    width: 100%;
    height: 100vh;
    font-family: Arial, sans-serif;
    background-color: var(--botticelli);
    color: var(--text-color);
    line-height: 1.6;
}

/* Estrutura principal */
.container {
    display: flex;
    flex-direction: column;
    width: 100%;
    min-height: 100vh;
    max-width: 90vw;
    margin: 0 auto;
    justify-content: space-between;
}

.header,
.footer {
    text-align: center;
    padding: 1.5vw;
    color: white;
    background-color: var(--torea-bay);
    font-size: 2.4vw;
    width: 100vw;
    margin-left: calc(-1 * (100vw - 90vw) / 2);
    margin-right: calc(-1 * (100vw - 90vw) / 2);
    position: relative;
}

.header h1 {
    margin-bottom: auto;
    text-align: center;
}

.main {
    flex: 1;
    padding: 2vw;
    display: flex;
    justify-content: center;
    align-items: center;
    overflow-y: auto;
}

/* Seções do formulário */
.form-section {
    border: 2px solid var(--botticelli);
    padding: 2vw;
    margin-bottom: 1.5vw;
    border-radius: 5px;
    text-align: center;
}

.form-section legend {
    display: block;
    font-size: 1.8vw;
    font-weight: bold;
    padding: 0 0.8vw;
    color: var(--text-color);
}

/* Inputs de telefone */
.input-icon-container {
    display: flex;
    align-items: center;
    border: 1px solid var(--botticelli);
    border-radius: 4px;
    min-height: 6vw;
}

.input-icon {
    width: 4vw;
    height: 4vw;
    margin: 0 1.5vw;
}

.inputTel {
    text-align: center;
    font-size: 2.2vw;
    border: none;
    outline: none;
    flex-grow: 1;
    padding: 1.5vw;
    min-height: 6vw;
    border-radius: 5px;
}

.inputTel::placeholder {
    text-align: center;
}

/* Input de busca de portas */
.ports-selection {
    display: flex;
    flex-direction: column;
    align-items: center;
}

#portSearch {
    width: 50%;
    padding: 1.5vw;
    margin: 0 auto 1vw;
    font-size: 2vw;
    border: 1px solid var(--botticelli);
    border-radius: 4px;
    box-sizing: border-box;
    text-align: center;
    min-height: 6vw;
}

#portSearch::placeholder {
    text-align: center;
}

/* Grid de portas */
.ports-grid {
    height: auto;
    max-height: 20vh;
    overflow-y: auto;
    display: flex;
    flex-wrap: wrap;
    gap: 0.8vw;
    justify-content: center;
    padding: 1.5vw;
}

.port-btn {
    color: #fff;
    padding: 0.8vw 1.2vw;
    border-radius: 5px;
    background: var(--denim);
    border: none;
    font-weight: bold;
    margin-top: 0.8vw;
    transition: transform 0.2s;
    font-size: 1.4vw;
}

.port-btn.selected {
    background: var(--picton-blue);
    color: var(--torea-bay);
    transform: scale(1.1);
}

/* Modo de operação */
.radio-group {
    display: flex;
    align-items: center;
    margin: 0.5vw 0;
}

.radio-group input[type="radio"],
.radio-group input[type="checkbox"] {
    margin-right: 0.8vw;
    width: 1.6vw;
    height: 1.6vw;
    accent-color: var(--picton-blue);
}

.radio-group label {
    font-size: 1.8vw; /* Aumentado de 1.6vw para 1.8vw */
    display: flex;
    align-items: center;
}

/* Botão de submit */
.submit-button {
    margin: 0 auto;
    width: 20%;
    padding: 1.5vw;
    background: transparent;
    border: none;
    cursor: pointer;
    display: block;
}

.submit-icon {
    width: 100%;
    height: auto;
    transition: transform 0.3s;
}

.submit-button:active .submit-icon {
    transform: scale(0.95);
}

/* Botão de doação */
.donate-button {
    position: absolute;
    top: 10vw;
    right: 3vw;
    padding: 5vw 5vw;
    background-color: var(--victoria);
    color: white;
    font-weight: bold;
    font-size: 3vw;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition: background-color 0.3s;
    width: 8vh;
}

.donate-button:active {
    background-color: var(--curious-blue);
}

/* Animação de tremido */
@keyframes shake {
    0% { transform: translateX(0); }
    20% { transform: translateX(-5px); }
    40% { transform: translateX(5px); }
    60% { transform: translateX(-5px); }
    80% { transform: translateX(5px); }
    100% { transform: translateX(0); }
}

.donate-button.shake {
    animation: shake 1s ease-in-out;
}

/* Feedback e mensagens */
.error-message {
    font-weight: bold;
    color: red;
    font-size: 1.6vw;
}

.success-message {
    text-align: center;
    font-weight: bold;
    color: var(--picton-blue);
    font-size: 1.8vw;
}

.selected-port {
    margin-top: 1.5vw;
    color: var(--picton-blue);
    font-weight: bold;
    text-align: center;
    font-size: 1.8vw;
}

/* Seção do desenvolvedor */
.developer-section {
    text-align: center;
    padding: 1vw 0;
    background-color: var(--torea-bay);
    width: 100vw;
    margin-left: calc(-1 * (100vw - 90vw) / 2);
    margin-right: calc(-1 * (100vw - 90vw) / 2);
}

.developer-section p {
    font-size: 2.2vw;
    color: #fff;
}

.developer-name {
    color: var(--developer-color);
    text-decoration: underline;
}

/* Modais */
.modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.5);
    z-index: 1000;
}

.modal-content {
    background-color: #fff;
    padding: 2vw;
    border-radius: 5px;
    position: absolute;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
    max-width: 300px;
}

#donateModal .modal-content {
    background-color: rgba(255, 255, 255, 0.9);
}

#modeModal .modal-content {
    right: auto;
    left: auto;
}

.close {
    float: right;
    font-size: 1.5vw;
    cursor: pointer;
}

.mode-desc {
    display: none;
}

#modeDescription .mode-desc[data-mode="enviar"] {
    display: block;
}

.info-icon {
    display: inline-block;
    font-size: 1.8vw; /* Aumentado de 1.6vw para 1.8vw */
    color: var(--picton-blue);
    margin-left: 0.8vw;
    cursor: pointer;
    position: relative;
    padding: 0.2vw;
}

/* Modal de doação */
.pix-type {
    font-size: 2.5vw;
    font-weight: bold;
    color: var(--denim);
    margin: 0.5vw 0;
}

#pixInput {
    width: 100%;
    padding: 1.5vw;
    margin: 1vw 0;
    font-size: 1.5vw;
    min-height: 6vw;
}

#pixInput::placeholder {
    text-align: center;
}

.copy-button {
    padding: 1vw;
    background-color: var(--picton-blue);
    color: white;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    font-size: 1.5vw;
}

.copy-button:hover {
    background-color: var(--curious-blue);
}

/* Media Queries */
@media (max-width: 768px) {
    .header h1,
    .form-section legend,
    .selected-port,
    .submit-button {
        font-size: 3vw;
    }

    .input-icon {
        width: 6vw;
        height: 6vw;
    }

    .port-btn {
        padding: 1.5vw 2vw;
        font-size: 2vw;
    }

    .error-message,
    .success-message {
        font-size: 2.5vw;
    }

    .donate-button {
        font-size: 2.8vw;
        padding: 2vw;
        top: 10vw;
    }

    #portSearch {
        width: 30%;
        font-size: 2.5vw;
        padding: 2vw;
        min-height: 6vw;
    }

    .radio-group input[type="radio"],
    .radio-group input[type="checkbox"] {
        width: 2vw;
        height: 2vw;
    }

    .radio-group label {
        font-size: 2.5vw;
    }

    .info-icon {
        font-size: 3.2vw;
        margin-left: 1.6vw;
        padding: 0.3vw;
    }

    #pixInput {
        padding: 2vw;
        min-height: 6vw;
    }

    .inputTel,
    .input-icon-container {
        min-height: 6vw;
    }

    .submit-icon {
        width: 50%;
    }
}

@media (max-width: 480px) {
    .header h1,
    .form-section legend,
    .selected-port,
    .submit-button {
        font-size: 4vw;
    }

    .input-icon {
        width: 8vw;
        height: 8vw;
    }

    .port-btn {
        padding: 1.8vw 2.5vw;
        font-size: 2.5vw;
    }

    .error-message,
    .success-message {
        font-size: 3vw;
    }

    .donate-button {
        font-size: 2.8vw;
        padding: 0.8vw;
        top: 12vw;
    }

    #portSearch {
        width: 70%;
        font-size: 3vw;
        padding: 2.5vw;
        min-height: 7vw;
    }

    .radio-group input[type="radio"],
    .radio-group input[type="checkbox"] {
        width: 2.5vw;
        height: 2.5vw;
    }

    .radio-group label {
        font-size: 2.8vw; /* Aumentado de 2.5vw para 2.8vw */
    }

    .info-icon {
        font-size: 2.8vw; /* Aumentado de 2.5vw para 2.8vw */
        margin-left: 0.5vw;
        padding: 0.4vw;
    }

    #pixInput {
        padding: 2.5vw;
        min-height: 7vw;
    }

    .inputTel,
    .input-icon-container {
        min-height: 7vw;
    }

    .submit-icon {
        width: 60%;
    }
}</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act20" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%par1</lhs>
					<op>2</op>
					<rhs>desconectar</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act21" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%project_path</Str>
			<Str sr="arg1" ve="3">/storage/emulated/0/Tasker/task-web-view/zap-replay-api/desconectar</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act22" ve="7">
			<code>410</code>
			<label>&lt;b&gt;&lt;font color=#00bfff&gt;

project_path "css"</label>
			<Str sr="arg0" ve="3">%project_path/css/index.css</Str>
			<Str sr="arg1" ve="3">:root {
    --dark-bg: #1a1a1a;
    --dark-container: #2c2c2c;
    --dark-text: #e0e0e0;
    --dark-primary: #1565c0;
    --dark-accent: #d32f2f;
    --dark-hover: #0288d1;
    --dark-modal: #424242;
    --dark-border: #616161;
    --shadow-light: rgba(255, 255, 255, 0.1);
    --shadow-dark: rgba(0, 0, 0, 0.5);
    --neon-glow: #40c4ff;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Segoe UI', Arial, sans-serif;
}

body {
    background-color: var(--dark-bg);
    color: var(--dark-text);
    padding: 20px;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
}

.container {
    max-width: 600px;
    width: 100%;
    background: linear-gradient(145deg, var(--dark-container), #333);
    border-radius: 12px;
    padding: 25px;
    box-shadow: 5px 5px 15px var(--shadow-dark), -5px -5px 15px var(--shadow-light);
    display: flex;
    flex-direction: column;
    gap: 20px;
}

.title {
    background: var(--dark-primary);
    color: var(--dark-text);
    text-align: center;
    padding: 10px;
    border-radius: 8px;
    font-size: 1.8rem;
    font-weight: bold;
    text-shadow: 1px 1px 2px var(--shadow-dark);
}

.controls {
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 10px;
}

.select-all-btn, .remove-selected-btn {
    background: var(--dark-primary);
    color: white;
    border: none;
    padding: 8px 16px;
    border-radius: 6px;
    cursor: pointer;
    transition: transform 0.2s, box-shadow 0.2s;
    box-shadow: 2px 2px 5px var(--shadow-dark);
    display: flex;
    align-items: center;
    gap: 5px;
}

.remove-selected-btn {
    background: var(--dark-accent);
    display: none;
}

.remove-selected-btn.active {
    display: flex;
}

.select-all-btn:hover, .remove-selected-btn:hover {
    transform: scale(1.05);
    box-shadow: 3px 3px 8px var(--shadow-dark);
}

.user-list {
    display: flex;
    flex-direction: column;
    gap: 15px;
}

.user-item {
    background: linear-gradient(145deg, var(--dark-border), #4a4a4a);
    padding: 15px;
    border-radius: 8px;
    transition: transform 0.3s, box-shadow 0.3s;
    box-shadow: 3px 3px 10px var(--shadow-dark), -3px -3px 10px var(--shadow-light);
    display: flex;
    flex-direction: column;
    gap: 10px;
}

.user-item:hover {
    transform: translateY(-3px);
    box-shadow: 5px 5px 15px var(--shadow-dark), -5px -5px 15px var(--shadow-light);
    background: var(--dark-hover);
}

.user-item:active {
    transform: translateY(0);
}

.user-text {
    cursor: pointer;
    font-size: 1rem;
    display: flex;
    align-items: center;
    gap: 10px;
}

.user-text input[type="checkbox"] {
    accent-color: var(--dark-primary);
    width: 16px;
    height: 16px;
    cursor: pointer;
}

.user-details {
    display: none;
    padding: 12px;
    background: var(--dark-modal);
    color: var(--dark-text);
    border-radius: 6px;
    font-size: 0.9rem;
    box-shadow: inset 2px 2px 5px var(--shadow-dark), 0 0 10px var(--neon-glow);
    border: 1px solid var(--neon-glow);
}

.user-details.active {
    display: block;
    animation: neonFadeIn 1s ease-out forwards;
}

@keyframes neonFadeIn {
    0% { opacity: 0; transform: scale(0.95) translateY(10px); box-shadow: 0 0 0 var(--neon-glow); }
    50% { opacity: 0.7; transform: scale(1.02); box-shadow: 0 0 15px var(--neon-glow); }
    100% { opacity: 1; transform: scale(1) translateY(0); box-shadow: 0 0 10px var(--neon-glow); }
}

.remove-btn {
    background: var(--dark-accent);
    color: white;
    border: none;
    padding: 8px 16px;
    border-radius: 6px;
    cursor: pointer;
    transition: transform 0.2s, box-shadow 0.2s;
    display: none;
    box-shadow: 2px 2px 5px var(--shadow-dark);
    align-self: center;
}

.remove-btn.active {
    display: block;
}

.remove-btn:hover {
    transform: scale(1.05);
    box-shadow: 3px 3px 8px var(--shadow-dark);
}

.info-btn {
    position: fixed;
    bottom: 20px;
    right: 20px;
    background: var(--dark-primary);
    color: white;
    border: none;
    width: 40px;
    height: 40px;
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    transition: transform 0.2s, box-shadow 0.2s;
    box-shadow: 2px 2px 5px var(--shadow-dark), 0 0 10px var(--neon-glow);
}

.info-btn:hover {
    transform: scale(1.1);
    box-shadow: 3px 3px 8px var(--shadow-dark), 0 0 15px var(--neon-glow);
}

.modal, .info-modal {
    display: none;
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.8);
    justify-content: center;
    align-items: center;
    z-index: 1000;
}

.modal-content, .info-modal-content {
    background: linear-gradient(145deg, var(--dark-modal), #555);
    padding: 25px;
    border-radius: 12px;
    text-align: center;
    max-width: 90%;
    width: 320px;
    color: var(--dark-text);
    box-shadow: 5px 5px 20px var(--shadow-dark), -5px -5px 20px var(--shadow-light);
    transform: perspective(1000px) rotateX(5deg);
    transition: transform 0.3s;
}

.modal-content p, .info-modal-content p {
    margin-bottom: 20px;
    font-size: 1rem;
}

.modal-buttons {
    display: flex;
    justify-content: space-around;
}

.modal-btn {
    padding: 10px 20px;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    font-size: 1rem;
    transition: transform 0.2s, box-shadow 0.2s;
    box-shadow: 2px 2px 5px var(--shadow-dark);
}

.modal-btn.yes {
    background-color: var(--dark-primary);
    color: white;
}

.modal-btn.no {
    background-color: var(--dark-accent);
    color: white;
}

.modal-btn:hover {
    transform: scale(1.05);
    box-shadow: 3px 3px 8px var(--shadow-dark);
}

footer {
    text-align: center;
    margin-top: 20px;
    font-size: 0.9rem;
    color: var(--dark-text);
}

footer .developer {
    color: var(--dark-primary);
    text-decoration: underline;
}

@media (max-width: 600px) {
    .container { padding: 15px; }
    .title { font-size: 1.4rem; padding: 8px; }
    .select-all-btn, .remove-selected-btn { padding: 6px 12px; font-size: 0.9rem; }
    .user-item { padding: 12px; font-size: 0.9rem; }
    .remove-btn { padding: 6px 12px; font-size: 0.9rem; }
    .modal-content, .info-modal-content { width: 85%; padding: 20px; }
    .modal-btn { padding: 8px 16px; font-size: 0.9rem; }
    .info-btn { width: 35px; height: 35px; bottom: 15px; right: 15px; }
    footer { font-size: 0.8rem; }
}</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act23" ve="7">
			<code>410</code>
			<label>&lt;b&gt;&lt;font color=green&gt;

project_path "js"</label>
			<Str sr="arg0" ve="3">%project_path/js/index.js</Str>
			<Str sr="arg1" ve="3">const users = %users;

let selectedIndex = null;
let isRemovingSelected = false;

function renderUsers() {
    const userList = document.getElementById('userList');
    if (!userList) return;
    userList.innerHTML = '';

    if (users.length === 0) {
        userList.innerHTML = '&lt;p&gt;Nenhum usuário disponível.&lt;/p&gt;';
        return;
    }

    users.forEach((user, index) =&gt; {
        const userItem = document.createElement('div');
        userItem.classList.add('user-item');
        userItem.innerHTML = `
            &lt;div class="user-text"&gt;
                &lt;input type="checkbox" class="user-checkbox" id="checkbox-${index}"&gt;
                Telefone: ${user.phone} | Porta: ${user.port}
            &lt;/div&gt;
            &lt;div class="user-details" id="details-${index}"&gt;
                { "phone": "${user.phone}", "port": "${user.port}", "modo_op": "${user.modo_op}" }
            &lt;/div&gt;
            &lt;button class="remove-btn" id="remove-${index}"&gt;Remover&lt;/button&gt;
        `;
        userItem.querySelector('.user-text').addEventListener('click', (e) =&gt; {
            if (e.target.type !== 'checkbox') toggleDetails(index);
        });
        userItem.querySelector('.remove-btn').addEventListener('click', () =&gt; showModal(index));
        userItem.querySelector('.user-checkbox').addEventListener('change', updateRemoveSelectedButton);
        userList.appendChild(userItem);
    });

    updateRemoveSelectedButton();
}

function toggleDetails(index) {
    const details = document.getElementById(`details-${index}`);
    const removeBtn = document.getElementById(`remove-${index}`);
    const isActive = details.classList.contains('active');

    document.querySelectorAll('.user-details').forEach(detail =&gt; detail.classList.remove('active'));
    document.querySelectorAll('.remove-btn').forEach(btn =&gt; btn.classList.remove('active'));

    if (!isActive) {
        details.classList.add('active');
        removeBtn.classList.add('active');
        selectedIndex = index;
    } else {
        selectedIndex = null;
    }
}

function showModal(index, multiple = false) {
    selectedIndex = index;
    isRemovingSelected = multiple;
    const modalMessage = document.getElementById('modalMessage');
    modalMessage.textContent = multiple ? 'Deseja realmente remover os usuários selecionados?' : 'Deseja realmente remover o usuário?';
    document.getElementById('confirmModal').style.display = 'flex';
}

function showInfoModal() {
    document.getElementById('infoModal').style.display = 'flex';
}

function closeInfoModal(e) {
    if (e.target.classList.contains('info-modal')) {
        document.getElementById('infoModal').style.display = 'none';
    }
}

function confirmRemove() {
    let deletedPorts = [];
    if (isRemovingSelected) {
        const checkboxes = document.querySelectorAll('.user-checkbox:checked');
        const indices = Array.from(checkboxes).map(cb =&gt; parseInt(cb.id.split('-')[1])).sort((a, b) =&gt; b - a);
        indices.forEach(index =&gt; {
            deletedPorts.push(users[index].port);
            users.splice(index, 1);
        });
    } else if (selectedIndex !== null) {
        deletedPorts.push(users[selectedIndex].port);
        users.splice(selectedIndex, 1);
    }

    renderUsers();
    document.getElementById('confirmModal').style.display = 'none';

    const remainingUsersJSON = JSON.stringify(users, null, 2);

    ///alert(users.length &gt; 0 ? `Usuário(s) removido(s). Usuários restantes:\n${remainingUsersJSON}` : 'Usuário(s) removido(s). Nenhum usuário restante.');



tk.setLocal("users",`${remainingUsersJSON}`);





    if (deletedPorts.length &gt; 0) {
        


      ///alert(`Portas dos usuários eliminados: ${deletedPorts.join(',')}`);


       tk.setLocal("logout","true");
       tk.setLocal("ports",`${deletedPorts.join(',')}`)
       window.open("https://www.andre.com", "_blank");
       tk.destroyScene('005-DESCONECTAR-USUARIO [ zap-replay-api ] v(1.0)');



    }

    selectedIndex = null;
    isRemovingSelected = false;
}

function cancelRemove() {
    document.getElementById('confirmModal').style.display = 'none';
    


     ///alert('Ação cancelada.');

    tk.destroyScene('005-DESCONECTAR-USUARIO [ zap-replay-api ] v(1.0)');


    selectedIndex = null;
    isRemovingSelected = false;
}

function toggleSelectAll() {
    const checkboxes = document.querySelectorAll('.user-checkbox');
    const allChecked = Array.from(checkboxes).every(cb =&gt; cb.checked);
    checkboxes.forEach(cb =&gt; cb.checked = !allChecked);
    updateRemoveSelectedButton();
    document.getElementById('selectAllBtn').innerHTML = `&lt;i class="fas fa-${allChecked ? 'check' : 'square-check'}"&gt;&lt;/i&gt; ${allChecked ? 'Selecionar Todos' : 'Desmarcar Todos'}`;
}

function updateRemoveSelectedButton() {
    const removeSelectedBtn = document.getElementById('removeSelectedBtn');
    const anyChecked = Array.from(document.querySelectorAll('.user-checkbox')).some(cb =&gt; cb.checked);
    removeSelectedBtn.classList.toggle('active', anyChecked);
}

document.getElementById('selectAllBtn').addEventListener('click', toggleSelectAll);
document.getElementById('removeSelectedBtn').addEventListener('click', () =&gt; showModal(null, true));
document.getElementById('confirmYes').addEventListener('click', confirmRemove);
document.getElementById('confirmNo').addEventListener('click', cancelRemove);
document.getElementById('infoBtn').addEventListener('click', showInfoModal);
document.getElementById('infoModal').addEventListener('click', closeInfoModal);

renderUsers();</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act24" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act25" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act26" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%par1</lhs>
					<op>2</op>
					<rhs>atualizacoes</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act27" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%project_path</Str>
			<Str sr="arg1" ve="3">/storage/emulated/0/Tasker/task-web-view/zap-replay-api/atualizacoes</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act28" ve="7">
			<code>410</code>
			<label>&lt;b&gt;&lt;font color=#00bfff&gt;

project_path "css"</label>
			<Str sr="arg0" ve="3">%project_path/css/index.css</Str>
			<Str sr="arg1" ve="3">:root {
    --torea-bay: #0d23b3; /* Cor predominante */
    --denim: #1a66c9;
    --picton-blue: #49cee4;
    --botticelli: #d3e3ea;
    --curious-blue: #2593db;
    --ship-cove: #7185c3;
    --victoria: #4c4e94;
    --text-color: #555;
    --developer-color: #2593db;
}

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Roboto', -apple-system, BlinkMacSystemFont, sans-serif;
}

body {
    background: linear-gradient(135deg, var(--torea-bay), var(--denim));
    color: var(--text-color);
    min-height: 100vh;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 15px;
    padding-bottom: 150px; /* Espaço para footer e notificação */
    position: relative;
}

canvas {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: -1;
    opacity: 0.3;
}

header {
    text-align: center;
    padding: 30px 15px;
    background: var(--botticelli);
    border-radius: 12px;
    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.2);
    margin-bottom: 30px;
    width: 100%;
    max-width: 900px;
    z-index: 1;
    margin-top: 50px;
}

header h1 {
    font-size: 2rem;
    color: var(--torea-bay);
    text-transform: uppercase;
    letter-spacing: 1.5px;
}

header p {
    font-size: 1rem;
    color: var(--text-color);
    margin-top: 8px;
}

.changelog-container {
    width: 100%;
    max-width: 900px;
    background: var(--botticelli);
    padding: 15px;
    border-radius: 8px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
    z-index: 1;
}

.changelog-text {
    font-size: 0.95rem;
    color: var(--text-color);
    line-height: 1.5;
}

.highlight {
    background: var(--picton-blue);
    color: white;
    padding: 2px 6px;
    border-radius: 4px;
    font-weight: bold;
}

.update-notification {
    position: fixed;
    bottom: 60px;
    width: 100%;
    max-width: 555px;
    background: var(--botticelli);
    padding: 10px;
    text-align: center;
    border-radius: 8px;
    box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
    z-index: 1;
    display: none;
}

.update-notification.active {
    display: block;
}

.update-notification p {
    font-size: 1.2rem;
    color: var(--curious-blue);
    font-weight: bold;
    margin-bottom: 10px;
}

.update-notification button {
    background: var(--curious-blue);
    color: white;
    border: none;
    padding: 8px 15px;
    margin: 0 10px;
    border-radius: 5px;
    cursor: pointer;
    font-size: 0.85rem;
    transition: background 0.3s ease;
}

.update-notification button:hover {
    background: var(--torea-bay);
}

.schedule-section {
    margin-top: 10px;
    display: none;
}

.schedule-section.active {
    display: block;
}

.schedule-section input[type="time"] {
    padding: 5px;
    border-radius: 5px;
    border: 1px solid var(--ship-cove);
    margin-right: 10px;
    font-size: 0.9rem;
}

.schedule-section button {
    background: var(--victoria);
    color: white;
    border: none;
    padding: 8px 15px;
    border-radius: 5px;
    cursor: pointer;
    font-size: 0.85rem;
}

.schedule-section button:hover {
    background: var(--torea-bay);
}

.error-message {
    color: red !important;
    font-size: 0.8rem;
    font-weight: bold;
    margin-top: 5px;
    display: none;
}

.error-message.active {
    display: block;
}

footer {
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    background: var(--torea-bay);
    text-align: center;
    color: var(--botticelli);
    font-size: 0.85rem;
    padding: 10px 0;
    box-shadow: 0 -2px 5px rgba(0, 0, 0, 0.2);
    z-index: 1;
}

footer .developer {
    font-size: 0.9rem;
    color: var(--botticelli);
}

footer .developer span {
    color: var(--developer-color);
    text-decoration: underline;
}

/* Media Queries para Responsividade */
@media (max-width: 768px) {
    header {
        padding: 20px 10px;
    }

    header h1 {
        font-size: 1.8rem;
    }

    header p {
        font-size: 0.9rem;
    }

    .changelog-container {
        max-width: 900px;
    }

    .changelog-text {
        font-size: 0.9rem;
    }

    .update-notification {
        max-width: 555px;
    }

    .update-notification p {
        font-size: 1.1rem;
    }

    .update-notification button {
        padding: 6px 12px;
        font-size: 0.8rem;
    }

    .schedule-section input[type="time"] {
        font-size: 0.8rem;
    }

    .schedule-section button {
        font-size: 0.8rem;
    }

    .error-message {
        font-size: 0.75rem;
    }

    footer {
        font-size: 0.8rem;
    }

    footer .developer {
        font-size: 0.85rem;
    }
}

@media (max-width: 480px) {
    body {
        padding: 10px;
        padding-bottom: 120px;
    }

    header {
        padding: 15px 8px;
        margin-bottom: 20px;
    }

    header h1 {
        font-size: 1.5rem;
        letter-spacing: 1px;
    }

    header p {
        font-size: 0.85rem;
    }

    .changelog-container {
        padding: 10px;
    }

    .changelog-text {
        font-size: 0.85rem;
        line-height: 1.4;
    }

    .update-notification {
        padding: 8px;
        bottom: 50px;
        max-width: 400px;
    }

    .update-notification p {
        font-size: 1rem;
    }

    .update-notification button {
        padding: 5px 10px;
        font-size: 0.75rem;
        margin: 5px;
    }

    .schedule-section input[type="time"] {
        font-size: 0.75rem;
        width: 120px;
    }

    .schedule-section button {
        font-size: 0.75rem;
        padding: 6px 12px;
    }

    .error-message {
        font-size: 0.7rem;
    }

    footer {
        font-size: 0.8rem;
        padding: 8px 0;
    }

    footer .developer {
        font-size: 0.85rem;
    }
}</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act29" ve="7">
			<code>410</code>
			<label>&lt;b&gt;&lt;font color=green&gt;

project_path "js"</label>
			<Str sr="arg0" ve="3">%project_path/js/index.js</Str>
			<Str sr="arg1" ve="3">// Variável para controlar a exibição da notificação
   const hasUpdate = %new_update;

// Mostrar notificação se hasUpdate for true
if (hasUpdate) {
    document.getElementById('updateNotification').classList.add('active');
}

// Função para o botão "Atualizar Agora"
function updateNow() {



        /// alert('Atualizar Agora');
        window.open("https://www.google.com", "_blank");
        tk.setLocal("immediate_update","true");

}

// Função para exibir e abrir o campo de agendamento
function showSchedule() {
    const scheduleSection = document.getElementById('scheduleSection');
    scheduleSection.classList.add('active');
    document.getElementById('scheduleTime').focus(); // Abre o seletor de horário
}

// Função para validar e confirmar o agendamento
function scheduleUpdate() {
    const scheduleTime = document.getElementById('scheduleTime').value;
    const errorMessage = document.getElementById('errorMessage');
    
    if (!scheduleTime) {
        errorMessage.classList.add('active');
        return;
    }

    // Obter hora atual
    const now = new Date();
    const currentHours = now.getHours();
    const currentMinutes = now.getMinutes();
    const currentTimeInMinutes = currentHours * 60 + currentMinutes;

    // Obter hora do agendamento
    const [hours, minutes] = scheduleTime.split(':').map(Number);
    const scheduleTimeInMinutes = hours * 60 + minutes;

    // Verificar se o agendamento é pelo menos 5 minutos após a hora atual
    if (scheduleTimeInMinutes &lt;= currentTimeInMinutes + 5) {
        errorMessage.classList.add('active');
    } else {
        errorMessage.classList.remove('active');



        ///alert(`Agendamento confirmado para ${scheduleTime}.`);
        ///window.open("https://www.andre.com", "_blank");
        window.open("https://www.google.com", "_blank");
        tk.setLocal("new_time",`${scheduleTime}`);
        tk.destroyScene('');


    }
}

// Função para destacar palavras entre *asteriscos*
function highlightText() {
    const changelogText = document.querySelector('.changelog-text');
    changelogText.innerHTML = changelogText.innerHTML.replace(/\*([^\*]+)\*/g, '&lt;span class="highlight"&gt;$1&lt;/span&gt;');
}

// Executar a função de destaque ao carregar a página
window.addEventListener('DOMContentLoaded', highlightText);

// Animação de partículas no fundo
const canvas = document.getElementById('particles');
const ctx = canvas.getContext('2d');
canvas.width = window.innerWidth;
canvas.height = window.innerHeight;

const particlesArray = [];
const numberOfParticles = 50;

class Particle {
    constructor() {
        this.x = Math.random() * canvas.width;
        this.y = Math.random() * canvas.height;
        this.size = Math.random() * 5 + 1;
        this.speedX = Math.random() * 1 - 0.5;
        this.speedY = Math.random() * 1 - 0.5;
        this.color = Math.random() &gt; 0.5 ? '#49cee4' : '#2593db';
    }

    update() {
        this.x += this.speedX;
        this.y += this.speedY;

        if (this.size &gt; 0.2) this.size -= 0.1;

        if (this.x &lt; 0 || this.x &gt; canvas.width) this.speedX *= -1;
        if (this.y &lt; 0 || this.y &gt; canvas.height) this.speedY *= -1;
    }

    draw() {
        ctx.fillStyle = this.color;
        ctx.beginPath();
        ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);
        ctx.fill();
    }
}

function initParticles() {
    for (let i = 0; i &lt; numberOfParticles; i++) {
        particlesArray.push(new Particle());
    }
}

function animateParticles() {
    ctx.clearRect(0, 0, canvas.width, canvas.height);
    for (let i = 0; i &lt; particlesArray.length; i++) {
        particlesArray[i].update();
        particlesArray[i].draw();
        if (particlesArray[i].size &lt;= 0.2) {
            particlesArray.splice(i, 1);
            particlesArray.push(new Particle());
            i--;
        }
    }
    requestAnimationFrame(animateParticles);
}

initParticles();
animateParticles();

window.addEventListener('resize', () =&gt; {
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
});</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act3" ve="7">
			<code>410</code>
			<label>&lt;b&gt;&lt;font color=green&gt;

project_path "js"</label>
			<Str sr="arg0" ve="3">%project_path/js/index.js</Str>
			<Str sr="arg1" ve="3">// Aguarda o carregamento do DOM
document.addEventListener('DOMContentLoaded', () =&gt; {
    // Gerenciamento de portas
    function generatePortButtons() {
        const portsContainer = document.getElementById('ports');
        if (!portsContainer) return;

        for (let i = 1025; i &lt;= 9999; i++) {
            if (i === 3129) continue; // Exclui a porta 3129
            const button = document.createElement('button');
            button.textContent = i;
            button.type = 'button';
            button.className = 'port-btn';
            button.addEventListener('click', () =&gt; selectPort(i, button));
            portsContainer.appendChild(button);
        }
    }

    function selectPort(port, button) {
        const allButtons = document.querySelectorAll('#ports button');
        allButtons.forEach(btn =&gt; btn.classList.remove('selected'));
        button.classList.add('selected');
        const selectedPort = document.getElementById('selectedPort');
        if (selectedPort) selectedPort.textContent = `Porta selecionada ➪ ${port}`;
        const portsError = document.getElementById('portsError');
        if (portsError) portsError.style.display = 'none';
    }

    // Validação de telefone
    function validatePhoneInput(input) {
        const phonePattern = /^\d{2} \d{2} \d{8}$/;
        return phonePattern.test(input);
    }

    function formatPhone(input) {
        let value = input.value.replace(/\D/g, '');
        if (value.length &lt;= 2) {
            value = value.replace(/(\d{1,2})/, '$1');
        } else if (value.length &lt;= 4) {
            value = value.replace(/(\d{1,2})(\d{1,2})/, '$1 $2');
        } else {
            value = value.replace(/(\d{1,2})(\d{1,2})(\d{1,8})/, '$1 $2 $3');
        }
        input.value = value;
        validatePhoneDisplay(input);
    }

    function validatePhoneDisplay(input) {
        const phoneError = document.getElementById('phoneError');
        const phoneValid = document.getElementById('phoneValid');
        if (validatePhoneInput(input.value)) {
            if (phoneValid) phoneValid.style.display = 'block';
            if (phoneError) phoneError.style.display = 'none';
        } else {
            if (phoneValid) phoneValid.style.display = 'none';
            if (phoneError) phoneError.style.display = 'block';
        }
    }

    // Validação e envio do formulário
    function validateForm(event) {
        event.preventDefault();

        const phoneInput = document.getElementById('phone');
        const phoneError = document.getElementById('phoneError');
        const phoneValid = document.getElementById('phoneValid');
        const selectedPort = document.getElementById('selectedPort');
        const portsError = document.getElementById('portsError');
        const modo_op = document.querySelector('input[name="modo_op"]:checked');
        const resetInput = document.getElementById('reset');

        // 1. Validação do telefone
        if (!validatePhoneInput(phoneInput.value)) {
            if (phoneError) phoneError.style.display = 'block';
            if (phoneValid) phoneValid.style.display = 'none';
            return;
        } else {
            if (phoneError) phoneError.style.display = 'none';
            if (phoneValid) phoneValid.style.display = 'block';
        }

        // 2. Validação da porta
        if (!selectedPort || selectedPort.textContent === '') {
            if (portsError) portsError.style.display = 'block';
            return;
        } else {
            if (portsError) portsError.style.display = 'none';
        }

        // 3. Validação do modo de operação
        if (!modo_op) {
            alert('Por favor, selecione um modo de envio (Só Enviar ou Enviar e Receber).');
            return;
        }

        // 4. Captura o valor do campo Reset
        const resetValue = resetInput ? resetInput.checked : false;

        // Se todos os dados forem válidos, prossegue
        const phone = phoneInput.value.replace(/\s/g, ''); // Remove espaços do número de telefone
        const portSelecionada = selectedPort.textContent.replace('Porta selecionada ➪ ', '');
        const formData = { phone, port: portSelecionada, modo_op: modo_op.value, reset: resetValue };
        

        ///alert(JSON.stringify(formData, null, 2));
        tk.setLocal("json_conect", JSON.stringify(formData, null, 2));
        window.open("https://www.andre.com", "_blank");
        tk.destroyScene('001-CENA-MENU-INICIAL [ zap-replay-api ] v(1.0)');
    }

    // Gerenciamento de modos
    function handleEnviar() {
        const enviarInput = document.getElementById('enviar');
        if (enviarInput) enviarInput.checked = true;
    }

    function handleEnviarReceber() {
        const inputs = document.querySelectorAll('input[name="modo_op"]');
        inputs.forEach(input =&gt; input.checked = false);
        const enviarReceberInput = document.getElementById('enviarReceber');
        if (enviarReceberInput) enviarReceberInput.checked = true;
    }

    // Inicialização
    generatePortButtons();

    const phoneInput = document.getElementById('phone');
    if (phoneInput) {
        phoneInput.addEventListener('input', () =&gt; formatPhone(phoneInput));
    }

    const form = document.getElementById('form');
    if (form) form.addEventListener('submit', validateForm);

    const enviarRadio = document.getElementById('enviar');
    if (enviarRadio) enviarRadio.addEventListener('click', handleEnviar);

    const enviarReceberRadio = document.getElementById('enviarReceber');
    if (enviarReceberRadio) enviarReceberRadio.addEventListener('click', handleEnviarReceber);

    // Gerenciamento de modais
    function identifyPixType(pixValue) {
        const cpfPattern = /^\d{11}$/;
        const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        const uuidPattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;
        if (cpfPattern.test(pixValue)) return 'Chave PIX: CPF';
        if (emailPattern.test(pixValue)) return 'Chave PIX: E-mail';
        if (uuidPattern.test(pixValue)) return 'Chave PIX: Chave Aleatória';
        return 'Chave PIX: Tipo Desconhecido';
    }

    document.querySelectorAll('.info-icon').forEach(icon =&gt; {
        icon.addEventListener('click', (e) =&gt; {
            e.preventDefault();
            e.stopPropagation();
            const mode = icon.getAttribute('data-mode');
            const modal = document.getElementById('modeModal');
            const description = modal.querySelector(`#modeDescription .mode-desc[data-mode="${mode}"]`);
            if (modal &amp;&amp; description) {
                modal.querySelectorAll('.mode-desc').forEach(desc =&gt; desc.style.display = 'none');
                description.style.display = 'block';
                const rect = icon.getBoundingClientRect();
                modal.querySelector('.modal-content').style.top = `${rect.top + window.scrollY}px`;
                modal.querySelector('.modal-content').style.left = `${rect.right + 5}px`;
                modal.style.display = 'block';
            }
        });
    });

    document.addEventListener('click', (e) =&gt; {
        const modeModal = document.getElementById('modeModal');
        const donateModal = document.getElementById('donateModal');
        const isInfoIconClick = e.target.classList.contains('info-icon');
        const isDonateButtonClick = e.target.classList.contains('donate-button');

        if (modeModal &amp;&amp; modeModal.style.display === 'block' &amp;&amp; !modeModal.querySelector('.modal-content').contains(e.target) &amp;&amp; !isInfoIconClick) {
            modeModal.style.display = 'none';
        }
        if (donateModal &amp;&amp; donateModal.style.display === 'block' &amp;&amp; !donateModal.querySelector('.modal-content').contains(e.target) &amp;&amp; !isDonateButtonClick) {
            donateModal.style.display = 'none';
        }
    });

    function openDonateModal() {
        const modal = document.getElementById('donateModal');
        const donateButton = document.querySelector('.donate-button');
        if (modal &amp;&amp; donateButton) {
            const buttonRect = donateButton.getBoundingClientRect();
            const pixValue = document.getElementById('pixInput').value;
            const pixType = document.getElementById('pixType');
            if (pixType) pixType.textContent = identifyPixType(pixValue);
            modal.querySelector('.modal-content').style.top = `${buttonRect.bottom + window.scrollY + 5}px`;
            modal.querySelector('.modal-content').style.right = `${window.innerWidth - buttonRect.right}px`;
            modal.querySelector('.modal-content').style.left = 'auto';
            modal.style.display = 'block';
        }
    }

    document.querySelector('.donate-button').addEventListener('click', (e) =&gt; {
        e.stopPropagation();
        openDonateModal();
    });

    document.querySelector('.copy-button').addEventListener('click', (e) =&gt; {
        e.stopPropagation();
        const pixInput = document.getElementById('pixInput');
        if (pixInput) {
            pixInput.select();
            document.execCommand('copy');
            // alert('PIX copiado para a área de transferência!');
            const donateModal = document.getElementById('donateModal');
            if (donateModal) donateModal.style.display = 'none';
        }
    });

    // Efeito de tremido no botão Doar
    const donateButton = document.querySelector('.donate-button');
    if (donateButton) {
        function shakeDonateButton() {
            donateButton.classList.remove('shake');
            void donateButton.offsetWidth;
            donateButton.classList.add('shake');
        }
        shakeDonateButton();
        setInterval(shakeDonateButton, 5000);
    }

    // Busca de porta
    const portSearch = document.getElementById('portSearch');
    const portSearchError = document.getElementById('portSearchError');
    if (portSearch &amp;&amp; portSearchError) {
        portSearch.addEventListener('input', () =&gt; {
            let searchValue = portSearch.value.trim();
            if (searchValue.length &gt; 4) {
                portSearch.value = searchValue.slice(0, 4);
                searchValue = portSearch.value;
            }
            if (searchValue.length === 4) {
                const portNumber = parseInt(searchValue, 10);
                if (portNumber &lt; 1025 || portNumber &gt; 9999 || portNumber === 3129) {
                    portSearchError.textContent = `A porta ${searchValue} não pode ser utilizada.`;
                    portSearchError.style.display = 'block';
                    portSearch.value = '';
                } else {
                    portSearchError.style.display = 'none';
                    const portButtons = document.querySelectorAll('#ports button');
                    let targetButton = null;
                    portButtons.forEach(button =&gt; {
                        if (button.textContent === searchValue) targetButton = button;
                    });
                    if (targetButton) targetButton.scrollIntoView({ block: 'center', behavior: 'smooth' });
                    portSearch.value = '';
                }
            } else {
                portSearchError.style.display = 'none';
            }
        });
    }

    // Abrir modal de doação ao carregar
    openDonateModal();
});</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act30" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act31" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act4" ve="7">
			<code>126</code>
			<Str sr="arg0" ve="3"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="0"/>
			<Str sr="arg4" ve="3"/>
		</Action>
		<Action sr="act5" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act6" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%par1</lhs>
					<op>2</op>
					<rhs>instalacao</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act7" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%project_path</Str>
			<Str sr="arg1" ve="3">/storage/emulated/0/Tasker/task-web-view/zap-replay-api/instalacao</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act8" ve="7">
			<code>410</code>
			<label>&lt;b&gt;&lt;font color=#00bfff&gt;

project_path "css"</label>
			<Str sr="arg0" ve="3">%project_path/css/index.css</Str>
			<Str sr="arg1" ve="3">/* Reset básico */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* Definir variáveis de cores */
:root {
    --torea-bay: #0d23b3;
    --denim: #1a66c9;
    --picton-blue: #49cee4;
    --botticelli: #d3e3ea;
    --curious-blue: #2593db;
    --ship-cove: #7185c3;
    --victoria: #4c4e94;
    --text-color: #555;
    --developer-color: #2593db;
}

/* Estilização geral */
body {
    font-family: 'Arial', sans-serif;
    background-color: transparent;
    color: var(--text-color);
    display: flex;
    flex-direction: column;
    min-height: 100vh;
}

/* Header */
header {
    background-color: var(--torea-bay);
    color: white;
    padding: 1rem;
    text-align: center;
}

header h1 {
    font-size: 1.8rem;
}

/* Container do botão */
.button-container {
    display: flex;
    justify-content: flex-end;
    padding: 0.5rem 1rem;
    background-color: transparent;
}

/* Botão Segundo Plano */
.background-btn {
    background-color: var(--curious-blue);
    color: white;
    border: none;
    padding: 0.5rem 1rem;
    border-radius: 5px;
    cursor: pointer;
    font-size: 0.9rem;
    transition: background-color 0.3s ease;
}

.background-btn:hover {
    background-color: var(--denim);
}

/* Main */
main {
    flex: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 1rem;
}

/* Imagem de instalação */
.install-image {
    margin-bottom: 1rem;
}

.install-image img {
    max-width: 100%;
    height: 600px;
    border-radius: 10px;
    background: transparent;
}

/* Footer */
footer {
    background-color: var(--torea-bay);
    color: white;
    text-align: center;
    padding: 1rem;
    font-size: 0.9rem;
}

footer .developer {
    margin-bottom: 0.5rem;
}

footer .developer-name {
    color: var(--developer-color);
    font-weight: bold;
    text-decoration: underline;
}

/* Media Queries para responsividade */
@media (max-width: 768px) {
    header h1 {
        font-size: 1.5rem;
    }

    .background-btn {
        font-size: 0.8rem;
        padding: 0.4rem 0.8rem;
    }

    .install-image img {
        height: 400px;
    }
}

@media (max-width: 480px) {
    header h1 {
        font-size: 1.3rem;
    }

    .button-container {
        padding: 0.5rem;
    }

    .background-btn {
        font-size: 0.7rem;
        padding: 0.3rem 0.6rem;
    }

    main {
        padding: 0.5rem;
    }

    .install-image img {
        height: 300px;
    }

    footer {
        font-size: 0.8rem;
    }
}</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act9" ve="7">
			<code>410</code>
			<label>&lt;b&gt;&lt;font color=green&gt;

project_path "js"</label>
			<Str sr="arg0" ve="3">%project_path/js/index.js</Str>
			<Str sr="arg1" ve="3">// Alerta separado para o botão
const showBackgroundAlert = () =&gt; {
    ///alert("Segundo Plano");
    tk.setLocal("destroy_scene","true");
    tk.destroyScene('002-CENA-INSTALACAO [ zap-replay-api ] v(1.0)');


};

// Evento do botão
document.querySelector(".background-btn").addEventListener("click", showBackgroundAlert);</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Img sr="icn" ve="2">
			<fle>/storage/emulated/0/Tasker/termux/zap-replay-api/icones/system.png</fle>
		</Img>
	</Task>
	<Task sr="task858">
		<cdate>1751310483241</cdate>
		<edate>1751562971072</edate>
		<id>858</id>
		<nme>002-BAIXAR-TAREFAS-ENVIO [ zap-replay-api ] v(1.0)</nme>
		<pri>100</pri>
		<rty>2</rty>
		<Action sr="act0" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%users</lhs>
					<op>13</op>
					<rhs></rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act1" ve="7">
			<code>548</code>
			<Str sr="arg0" ve="3">Não há nenhum usuário conectado</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg10" ve="3"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="0"/>
			<Str sr="arg13" ve="3"/>
			<Int sr="arg14" val="0"/>
			<Str sr="arg15" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">#FF802424</Str>
			<Str sr="arg7" ve="3"/>
			<Str sr="arg8" ve="3"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act10" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%icons</Str>
			<Str sr="arg1" ve="3">%icons()</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act11" ve="7">
			<code>129</code>
			<Str sr="arg0" ve="3">var icons = local('icons');
var ld_selected = local('ld_selected');

if (!ld_selected || ld_selected.trim() === '') {
  setLocal('number_exists', "undefined");
} else {
  var containsNumber = icons
    .split(',')
    .map(item =&gt; item.trim())
    .some(item =&gt; item.includes(ld_selected));
  setLocal('icon_port_exists', containsNumber ? "true" : "false");
}</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act12" ve="7">
			<code>37</code>
			<coll>true</coll>
			<label>gerar imagem da porta com canvas</label>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%icon_port_exists</lhs>
					<op>2</op>
					<rhs>false</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act13" ve="7">
			<code>547</code>
			<label>Texto a ser escrito na imagem</label>
			<Str sr="arg0" ve="3">%text</Str>
			<Str sr="arg1" ve="3">Z-R-A
PORTA
%ld_selected</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act14" ve="7">
			<code>547</code>
			<label>Caminho de destino da imagem gerada com texto</label>
			<Str sr="arg0" ve="3">%image_destination</Str>
			<Str sr="arg1" ve="3">Tasker/termux/zap-replay-api/icones/port-%ld_selected.png</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act15" ve="7">
			<code>129</code>
			<label>[SCRIPT]</label>
			<Str sr="arg0" ve="3">const config = {
  fontSize: 230,
  lineHeight: 200,
  textMargin: 0,
  contourColor: "#00BFFF",
  fontColor: "#00BFFF",
  horizontalAlignment: true,
  fontFamily: "Impact",
  message: text,
  isBold: true // Negrito fixo
};

let lineStartY = -55; // Valor fixo
let currentLine = "";
const lines = [];

function formatLineEnding(line, nextLetter) {
  let [prevChar, lastChar] = line.split("").splice(-2, 2);
  
  line = line.substring(0, line.length - 1);
  
  if (prevChar !== " " &amp;&amp; lastChar !== " ") {
    line = line + "-";
  }
  if (lastChar === " ") lastChar = "";
  return [line, lastChar];
}

function drawTextOnCanvas(context, line, lineX, lineY) {
  lineY += config.fontSize - 10;
  
  context.strokeText(line, lineX, lineY);
  context.fillText(line, lineX, lineY);
}

function getTextWidth(context, line) {
  return context.measureText(line).width;
}

function calculateLineX(context, currentLine) {
  return config.horizontalAlignment
    ? calculateHorizontalCenter(context, getTextWidth(context, currentLine))
    : config.textMargin;
}

function calculateHorizontalCenter(context, lineWidth) {
  return (context.canvas.width - lineWidth) / 2;
}

function handleNewLine(context, lineX) {
  drawTextOnCanvas(context, currentLine, lineX, lineStartY);
  currentLine = "";
  lineStartY += config.lineHeight;
}

function handleExceededWidth(context, word) {
  const result = formatLineEnding(currentLine, word);
  currentLine = result[0];
  const lastChar = result[1];
  
  const lineX = calculateLineX(context, currentLine);
  drawTextOnCanvas(context, currentLine, lineX, lineStartY);
  currentLine = lastChar + word;
  lineStartY += config.lineHeight;
}

function processWord(context, word, index, canvasWidth) {
  const testLine = currentLine + word;
  let textWidth = getTextWidth(context, testLine);
  textWidth += config.textMargin * 2;
  
  const isNewLineCharacter = word === "\n";
  if (isNewLineCharacter) {
    handleNewLine(context, calculateLineX(context, currentLine));
    return;
  }

  if (currentLine === " ") {
    currentLine = "";
    return;
  }

  const exceedsCanvasWidth = textWidth &gt; canvasWidth;
  if (exceedsCanvasWidth &amp;&amp; index &gt; 0) {
    handleExceededWidth(context, word);
    return;
  }

  currentLine = testLine;
}

function processLines(context, canvasHeight, lines, lineHeight) {
  const lineX = calculateLineX(context, currentLine);
  drawTextOnCanvas(context, currentLine, lineX, lineStartY);
  currentLine = "";
  lineStartY += config.lineHeight;
}

function breakTextIntoLines(context, text, lineHeight, canvasWidth, canvasHeight) {
  const words = text.split("");
  words.forEach((word, index) =&gt; {
    processWord(context, word, index, canvasWidth);
  });
  processLines(context, canvasHeight, lines, lineHeight);
}

function generateImage() {
  const canvas = document.createElement("canvas");
  canvas.width = 800; // Dimensão padrão
  canvas.height = 600;
  const context = canvas.getContext("2d");

  // Fundo transparente
  context.clearRect(0, 0, canvas.width, canvas.height);

  // Aplica negrito
  context.font = `${config.isBold ? 'bold ' : ''}${config.fontSize}px ${config.fontFamily}`;
  context.lineWidth = 2;

  context.fillStyle = config.fontColor;
  context.strokeStyle = config.contourColor;

  breakTextIntoLines(context, config.message, config.lineHeight, canvas.width, canvas.height);

  const dataURL = canvas.toDataURL("image/png", 1.0).replace('data:image/png;base64,', '');
  setLocal('canvas_image', dataURL);
  exit();
}

generateImage();</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act16" ve="7">
			<code>775</code>
			<label>Cria imagem</label>
			<Str sr="arg0" ve="3">%canvas_image</Str>
			<Str sr="arg1" ve="3">%image_destination</Str>
		</Action>
		<Action sr="act17" ve="7">
			<code>549</code>
			<Str sr="arg0" ve="3">%canvas_image</Str>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act18" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act19" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%ld_selected</lhs>
					<op>12</op>
					<rhs></rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act2" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3"/>
		</Action>
		<Action sr="act20" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%port</Str>
			<Str sr="arg1" ve="3">%ld_selected</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act21" ve="7">
			<code>549</code>
			<label>template_url</label>
			<Str sr="arg0" ve="3">%http_response_code</Str>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act22" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="0"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">%template_url</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act23" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%project_url</Str>
			<Str sr="arg1" ve="3">%http_data</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act24" ve="7">
			<code>135</code>
			<Int sr="arg0" val="1"/>
			<Int sr="arg1" val="1"/>
			<Str sr="arg2" ve="3">template_url</Str>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>3</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act25" ve="7">
			<code>598</code>
			<Str sr="arg0" ve="3">%project_url</Str>
			<Str sr="arg1" ve="3">PORT</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%port</Str>
		</Action>
		<Action sr="act26" ve="7">
			<code>549</code>
			<label>version_url</label>
			<Str sr="arg0" ve="3">%http_response_code</Str>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act27" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="0"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">%version_url</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act28" ve="7">
			<code>135</code>
			<Int sr="arg0" val="1"/>
			<Int sr="arg1" val="1"/>
			<Str sr="arg2" ve="3">version_url</Str>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>3</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act29" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%version</Str>
			<Str sr="arg1" ve="3">%http_data</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act3" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act30" ve="7">
			<code>598</code>
			<label>remove a quebra de linha</label>
			<Str sr="arg0" ve="3">%version</Str>
			<Str sr="arg1" ve="3">\n</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3"/>
		</Action>
		<Action sr="act31" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%port(1)</Str>
			<Str sr="arg1" ve="3">%port</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act32" ve="7">
			<code>598</code>
			<Str sr="arg0" ve="3">%project_url</Str>
			<Str sr="arg1" ve="3">VERSION</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">v(%version)</Str>
		</Action>
		<Action sr="act33" ve="7">
			<code>598</code>
			<Str sr="arg0" ve="3">%project_url</Str>
			<Str sr="arg1" ve="3">port-icon-port</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">port-%port</Str>
		</Action>
		<Action sr="act34" ve="7">
			<code>547</code>
			<label>id_%port(1)_VERSION_ZapRepaly.prj.xml</label>
			<Str sr="arg0" ve="3">%name_arq</Str>
			<Str sr="arg1" ve="3">_id_%port(1)_VERSION_ZapRepaly.prj.xml</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act35" ve="7">
			<code>598</code>
			<Str sr="arg0" ve="3">%project_url</Str>
			<Str sr="arg1" ve="3">VERSION</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">v(%version)</Str>
		</Action>
		<Action sr="act36" ve="7">
			<code>410</code>
			<Str sr="arg0" ve="3">Tasker/termux/zap-replay-api/instalacao/%name_arq</Str>
			<Str sr="arg1" ve="3">%project_url</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act37" ve="7">
			<code>365</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%content_uri
URI de Conteúdo
&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Str sr="arg1" ve="3">FilePathToContentUri(/storage/emulated/0/Tasker/termux/zap-replay-api/instalacao/%name_arq)</Str>
		</Action>
		<Action sr="act38" ve="7">
			<code>20</code>
			<App sr="arg0">
				<appClass>com.joaomgcd.taskerm.datashare.import.ActivityImportTaskerDataFromXml</appClass>
				<appPkg>net.dinglisch.android.taskerm</appPkg>
				<label>Tasker:com.joaomgcd.taskerm.datashare.import.ActivityImportTaskerDataFromXml</label>
			</App>
			<Str sr="arg1" ve="3">%content_uri</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="1"/>
		</Action>
		<Action sr="act39" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act4" ve="7">
			<code>129</code>
			<se>false</se>
			<Str sr="arg0" ve="3">var users = JSON.parse(local("users"));
var ports = users.map(function(user) {
  return user.port;
});
var portsString = ports.join(',');
setLocal("ports", portsString);
setLocal("ports_count", ports.length);</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="1"/>
			<Int sr="arg3" val="45"/>
		</Action>
		<Action sr="act5" ve="7">
			<code>378</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%ld_button
Botão
O rótulo do botão que foi tocado&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%ld_long
Long
true se o item foi tocado longamente, false caso contrário&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%ld_selected
Selecionado
&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%ld_selected_index
Índice Selecionado
&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="0"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="0"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg13" ve="3">&lt;b&gt;&lt;font color=cyan&gt;
Selecione uma das portas para baixar as tarefas de envio</Str>
			<Str sr="arg2" ve="3">&lt;b&gt;&lt;font color=cyan&gt;PORTA(s) ENCONTRADA(s) ( %ports_count )</Str>
			<Str sr="arg3" ve="3">%ports</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3">SAIR</Str>
			<Str sr="arg7" ve="3">EXIT</Str>
			<Str sr="arg8" ve="3"/>
			<Int sr="arg9" val="120"/>
		</Action>
		<Action sr="act6" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<bool0>Or</bool0>
				<Condition sr="c0" ve="3">
					<lhs>%ld_button</lhs>
					<op>2</op>
					<rhs>SAIR</rhs>
				</Condition>
				<Condition sr="c1" ve="3">
					<lhs>%ld_button</lhs>
					<op>2</op>
					<rhs>EXIT</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act7" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3"/>
		</Action>
		<Action sr="act8" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act9" ve="7">
			<code>412</code>
			<Str sr="arg0" ve="3">%cam_imgs</Str>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Str sr="arg5" ve="3">%icons</Str>
			<Int sr="arg6" val="1"/>
		</Action>
		<Img sr="icn" ve="2">
			<fle>/storage/emulated/0/Tasker/termux/zap-replay-api/icones/user-allowed.png</fle>
		</Img>
		<ProfileVariable sr="pv0">
			<clearout>true</clearout>
			<exportval></exportval>
			<immutable>false</immutable>
			<pvci>true</pvci>
			<pvd></pvd>
			<pvdn></pvdn>
			<pvid>858</pvid>
			<pvit>t</pvit>
			<pvn>%template_url</pvn>
			<pvt>t</pvt>
			<pvv>https://raw.githubusercontent.com/ZapReplyApi/PROJETO-TASKER-ZAP-REPLAY-API/refs/heads/main/id_PORT_VERSION_ZapRepaly.prj.xml</pvv>
			<strout>true</strout>
		</ProfileVariable>
		<ProfileVariable sr="pv1">
			<clearout>true</clearout>
			<exportval></exportval>
			<immutable>false</immutable>
			<pvci>true</pvci>
			<pvd></pvd>
			<pvdn></pvdn>
			<pvid>858</pvid>
			<pvit>t</pvit>
			<pvn>%version_url</pvn>
			<pvt>t</pvt>
			<pvv>https://raw.githubusercontent.com/ZapReplyApi/PROJETO-TASKER-ZAP-REPLAY-API/refs/heads/main/VERSION.txt</pvv>
			<strout>true</strout>
		</ProfileVariable>
		<ProfileVariable sr="pv2">
			<clearout>true</clearout>
			<exportval></exportval>
			<immutable>false</immutable>
			<pvci>true</pvci>
			<pvd></pvd>
			<pvdn></pvdn>
			<pvid>858</pvid>
			<pvit>t</pvit>
			<pvn>%cam_imgs</pvn>
			<pvt>t</pvt>
			<pvv>/storage/emulated/0/Tasker/termux/zap-replay-api/icones</pvv>
			<strout>true</strout>
		</ProfileVariable>
	</Task>
	<Task sr="task896">
		<cdate>1751419077508</cdate>
		<edate>1751419077508</edate>
		<id>896</id>
		<pri>102</pri>
		<Action sr="act0" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">005-ATUALIZACOES [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act1" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%scheduled_time</Str>
			<Str sr="arg1" ve="3">%new_time</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%new_time</lhs>
					<op>12</op>
					<rhs></rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act10" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%version(1)</Str>
			<Str sr="arg1" ve="3">%http_data</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act11" ve="7">
			<code>135</code>
			<Int sr="arg0" val="1"/>
			<Int sr="arg1" val="1"/>
			<Str sr="arg2" ve="3">version</Str>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>3</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act12" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%name_arq</Str>
			<Str sr="arg1" ve="3">ZAP_RAPLY_API_v_%version(1)_.prj.xml</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act13" ve="7">
			<code>410</code>
			<Str sr="arg0" ve="3">Tasker/termux/zap-replay-api/instalacao/%name_arq</Str>
			<Str sr="arg1" ve="3">%project_url</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act14" ve="7">
			<code>365</code>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%content_uri
URI de Conteúdo
&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Str sr="arg1" ve="3">FilePathToContentUri(/storage/emulated/0/Tasker/termux/zap-replay-api/instalacao/%name_arq)</Str>
		</Action>
		<Action sr="act15" ve="7">
			<code>20</code>
			<App sr="arg0">
				<appClass>com.joaomgcd.taskerm.datashare.import.ActivityImportTaskerDataFromXml</appClass>
				<appPkg>net.dinglisch.android.taskerm</appPkg>
				<label>Tasker:com.joaomgcd.taskerm.datashare.import.ActivityImportTaskerDataFromXml</label>
			</App>
			<Str sr="arg1" ve="3">%content_uri</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="1"/>
		</Action>
		<Action sr="act16" ve="7">
			<code>339</code>
			<label>=&gt;update_url</label>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="0"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">%update_url</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act17" ve="7">
			<code>135</code>
			<Int sr="arg0" val="1"/>
			<Int sr="arg1" val="1"/>
			<Str sr="arg2" ve="3">=&gt;update_url</Str>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>3</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act18" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%updated_project</Str>
			<Str sr="arg1" ve="3">true</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act19" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%scheduled_time</Str>
			<Str sr="arg1" ve="3">06.00</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act2" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%immediate_update</lhs>
					<op>2</op>
					<rhs>true</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act20" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">005-ATUALIZACOES [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+50</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Str sr="arg7" ve="3">%updated_project/%http_data</Str>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act21" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act3" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">005-ATUALIZACOES [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act4" ve="7">
			<code>549</code>
			<label>template_url</label>
			<Str sr="arg0" ve="3">%http_response_code</Str>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act5" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="0"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">%template_url</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act6" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%project_url</Str>
			<Str sr="arg1" ve="3">%http_data</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act7" ve="7">
			<code>135</code>
			<Int sr="arg0" val="1"/>
			<Int sr="arg1" val="1"/>
			<Str sr="arg2" ve="3">template_url</Str>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%http_response_code</lhs>
					<op>3</op>
					<rhs>200</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act8" ve="7">
			<code>549</code>
			<label>version</label>
			<Str sr="arg0" ve="3">%http_response_code</Str>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act9" ve="7">
			<code>339</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%http_headers()
Cabeçalhos de Resposta
Os Cabeçalhos HTTP que o servidor enviou na resposta. Cada cabeçalho está no formato 'chave:valor'&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;%http_cookies
Cookies
Os cookies que o servidor enviou na resposta no formato Cookie:VALOR_COOKIE. Você pode usar isso diretamente no campo 'Cabeçalhos' da ação Requisição HTTP&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES1&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;%http_response_code
Código de Resposta
O Código HTTP que o servidor respondeu&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES2&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;%http_data
Dado
Dados que o servidor respondeu da requisição HTTP.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES3&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;%http_file_output
Saída do Arquivo
Sempre conterá o caminho completo do arquivo, mesmo se você especificou um diretório como Arquivo para salvar.&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES4&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;%http_response_length
Tamanho da Resposta
O tamanho da resposta em bytes&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES5&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Int sr="arg1" val="0"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg11" val="1"/>
			<Int sr="arg12" val="1"/>
			<Str sr="arg2" ve="3">%version_url</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Str sr="arg6" ve="3"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="30"/>
			<Int sr="arg9" val="1"/>
		</Action>
	</Task>
	<Task sr="task92">
		<cdate>1748146743111</cdate>
		<edate>1751555987097</edate>
		<id>92</id>
		<nme>001-INSTALACAO [ zap-replay-api ] v(1.0)</nme>
		<pri>100</pri>
		<rty>2</rty>
		<Action sr="act0" ve="7">
			<code>549</code>
			<Str sr="arg0" ve="3">%users</Str>
			<Int sr="arg1" val="0"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%users</lhs>
					<op>2</op>
					<rhs>[]</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act1" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%users</lhs>
					<op>13</op>
					<rhs></rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act10" ve="7">
			<code>547</code>
			<label>margem da cena
003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</label>
			<Str sr="arg0" ve="3">%margin</Str>
			<Str sr="arg1" ve="3">top</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act11" ve="7">
			<code>547</code>
			<label>informação que irá ser exibido na cena
003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</label>
			<Str sr="arg0" ve="3">%text</Str>
			<Str sr="arg1" ve="3">PERMISSÕES
&lt;br&gt;
&lt;span style="color: #FFFF00;"&gt;As permissões já foram copiadas, aperte e segure na tela do termux e clique em "paste" para colar as permissões e, em seguida, pressione "ENTER"&lt;/span&gt;
&lt;br&gt;
Esta tarefa será encerrada automaticamente, caso não encontre as permissões em dois minutos 
&lt;br&gt;
&lt;br&gt;
Tempo restante %time
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act12" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act13" ve="7">
			<code>47</code>
			<Str sr="arg0" ve="3">003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1" val="0"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg2" val="100"/>
			<Int sr="arg3" val="100"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="1"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act14" ve="7">
			<code>410</code>
			<Str sr="arg0" ve="3">Tasker/termux/zap-replay-api/instalacao/logs/permission-termux.txt</Str>
			<Str sr="arg1" ve="3">0</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act15" ve="7">
			<code>417</code>
			<label>verificar permicao</label>
			<se>false</se>
			<Str sr="arg0" ve="3">Tasker/termux/zap-replay-api/instalacao/logs/permission-termux.txt</Str>
			<Str sr="arg1" ve="3">%log_ouput</Str>
			<Int sr="arg2" val="1"/>
		</Action>
		<Action sr="act16" ve="7">
			<code>30</code>
			<Int sr="arg0" val="0"/>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
		</Action>
		<Action sr="act17" ve="7">
			<code>37</code>
			<coll>false</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%time</lhs>
					<op>2</op>
					<rhs>0</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act18" ve="7">
			<code>61</code>
			<Int sr="arg0" val="1000"/>
		</Action>
		<Action sr="act19" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act2" ve="7">
			<code>377</code>
			<se>false</se>
			<Bundle sr="arg0">
				<Vals sr="val">
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES>&lt;StringArray sr=""&gt;&lt;_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;%td_button
Botão
O rótulo do botão que foi tocado&lt;/_array_net.dinglisch.android.tasker.RELEVANT_VARIABLES0&gt;&lt;/StringArray&gt;</net.dinglisch.android.tasker.RELEVANT_VARIABLES>
					<net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>[Ljava.lang.String;</net.dinglisch.android.tasker.RELEVANT_VARIABLES-type>
				</Vals>
			</Bundle>
			<Str sr="arg1" ve="3">&lt;b&gt;&lt;font color="#00bfff"&gt; Certifique-se de que o Termux possui todas as permissões necessárias para funcionar corretamente.</Str>
			<Str sr="arg2" ve="3"/>
			<Str sr="arg3" ve="3">OK</Str>
			<Str sr="arg4" ve="3"/>
			<Str sr="arg5" ve="3"/>
			<Int sr="arg6" val="120"/>
			<Int sr="arg7" val="1"/>
			<Str sr="arg8" ve="3">Tasker/termux/TASKER-WUZAPI/img/icon.png</Str>
			<Str sr="arg9" ve="3">100</Str>
		</Action>
		<Action sr="act20" ve="7">
			<code>547</code>
			<label>margem da cena
003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</label>
			<Str sr="arg0" ve="3">%margin</Str>
			<Str sr="arg1" ve="3">center</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act21" ve="7">
			<code>547</code>
			<label>cor da informação do texto na cena
WAITING-FOR-SETTINGS v(1.0)</label>
			<Str sr="arg0" ve="3">%color_text</Str>
			<Str sr="arg1" ve="3">#FF0000</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act22" ve="7">
			<code>547</code>
			<label>informação que irá ser exibido na cena
003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</label>
			<Str sr="arg0" ve="3">%text</Str>
			<Str sr="arg1" ve="3">TEMPO EXCEDIDO TENTE NOVAMENTE !!!</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act23" ve="7">
			<code>47</code>
			<Str sr="arg0" ve="3">003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1" val="0"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg2" val="100"/>
			<Int sr="arg3" val="100"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="1"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act24" ve="7">
			<code>30</code>
			<Int sr="arg0" val="0"/>
			<Int sr="arg1" val="5"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
		</Action>
		<Action sr="act25" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act26" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3"/>
		</Action>
		<Action sr="act27" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act28" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%time</Str>
			<Str sr="arg1" ve="3">%time</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act29" ve="7">
			<code>890</code>
			<Str sr="arg0" ve="3">%time</Str>
			<Int sr="arg1" val="1"/>
			<Int sr="arg2" val="0"/>
		</Action>
		<Action sr="act3" ve="7">
			<code>137</code>
			<Int sr="arg0" val="0"/>
			<Str sr="arg1" ve="3"/>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%err</lhs>
					<op>2</op>
					<rhs>1</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act30" ve="7">
			<code>547</code>
			<label>informação que irá ser exibido na cena
003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</label>
			<Str sr="arg0" ve="3">%text</Str>
			<Str sr="arg1" ve="3">PERMISSÕES
&lt;br&gt;
&lt;span style="color: #FFFF00;"&gt;As permissões já foram copiadas, aperte e segure na tela do termux e clique em "paste" para colar as permissões e, em seguida, pressione "ENTER"&lt;/span&gt;
&lt;br&gt;
Esta tarefa será encerrada automaticamente, caso não encontre as permissões em dois minutos 
&lt;br&gt;
&lt;br&gt;
Tempo restante %time
</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act31" ve="7">
			<code>53</code>
			<Str sr="arg0" ve="3">003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</Str>
			<Str sr="arg1" ve="3">Exibir Informações Gerais</Str>
			<Int sr="arg2" val="11"/>
			<Str sr="arg3" ve="3"/>
		</Action>
		<Action sr="act32" ve="7">
			<code>135</code>
			<label>permission granted</label>
			<Int sr="arg0" val="1"/>
			<Int sr="arg1" val="1"/>
			<Str sr="arg2" ve="3">verificar permicao</Str>
			<ConditionList sr="if">
				<bool0>And</bool0>
				<Condition sr="c0" ve="3">
					<lhs>%log_ouput</lhs>
					<op>5</op>
					<rhs>permission granted</rhs>
				</Condition>
				<Condition sr="c1" ve="3">
					<lhs>%log_ouput</lhs>
					<op>5</op>
					<rhs>permission already granted</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act33" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act34" ve="7">
			<code>135</code>
			<Int sr="arg0" val="1"/>
			<Int sr="arg1" val="1"/>
			<Str sr="arg2" ve="3">permissões concedidas</Str>
		</Action>
		<Action sr="act35" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act36" ve="7">
			<code>300</code>
			<label>permissões concedidas</label>
		</Action>
		<Action sr="act37" ve="7">
			<code>547</code>
			<label>adiciona * para não exibir os botões</label>
			<Str sr="arg0" ve="3">%buttons</Str>
			<Str sr="arg1" ve="3">*</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act38" ve="7">
			<code>547</code>
			<label>cor da informação do texto na cena
003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</label>
			<Str sr="arg0" ve="3">%color_text</Str>
			<Str sr="arg1" ve="3">#00FF00</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act39" ve="7">
			<code>547</code>
			<label>margem da cena
003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</label>
			<Str sr="arg0" ve="3">%margin</Str>
			<Str sr="arg1" ve="3">center</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act4" ve="7">
			<code>37</code>
			<coll>true</coll>
			<ConditionList sr="if">
				<Condition sr="c0" ve="3">
					<lhs>%td_button</lhs>
					<op>2</op>
					<rhs>OK</rhs>
				</Condition>
			</ConditionList>
		</Action>
		<Action sr="act40" ve="7">
			<code>547</code>
			<label>informação que irá ser exibido na cena
003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</label>
			<Str sr="arg0" ve="3">%text</Str>
			<Str sr="arg1" ve="3">As permissões necessárias foram concedidas com sucesso ao Termux.
O acesso ao armazenamento interno e a integração com apps externos estão habilitados.
O ambiente está pronto para uso com todas as permissões ativas.</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act41" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act42" ve="7">
			<code>47</code>
			<Str sr="arg0" ve="3">003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1" val="0"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg2" val="100"/>
			<Int sr="arg3" val="100"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="1"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="1"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act43" ve="7">
			<code>30</code>
			<Int sr="arg0" val="0"/>
			<Int sr="arg1" val="5"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
		</Action>
		<Action sr="act44" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act45" ve="7">
			<code>38</code>
		</Action>
		<Action sr="act46" ve="7">
			<code>130</code>
			<Str sr="arg0" ve="3">006- SCRIPTS-GERAIS [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1">
				<var>%priority+10</var>
			</Int>
			<Int sr="arg10" val="1"/>
			<Str sr="arg2" ve="3">menu-inicial</Str>
			<Str sr="arg3" ve="3"/>
			<Str sr="arg4" ve="3"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Str sr="arg7" ve="3"/>
			<Int sr="arg8" val="0"/>
			<Int sr="arg9" val="0"/>
		</Action>
		<Action sr="act47" ve="7">
			<code>49</code>
			<Str sr="arg0" ve="3">001-CENA-MENU-INICIAL [ zap-replay-api ] v(1.0)</Str>
		</Action>
		<Action sr="act48" ve="7">
			<code>47</code>
			<se>false</se>
			<Str sr="arg0" ve="3">001-CENA-MENU-INICIAL [ zap-replay-api ] v(1.0)</Str>
			<Int sr="arg1" val="10"/>
			<Int sr="arg10" val="1"/>
			<Int sr="arg2" val="100"/>
			<Int sr="arg3" val="100"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="0"/>
			<Int sr="arg6" val="0"/>
			<Int sr="arg7" val="1"/>
			<Int sr="arg8" val="1"/>
			<Int sr="arg9" val="1"/>
		</Action>
		<Action sr="act5" ve="7">
			<code>105</code>
			<Str sr="arg0" ve="3">#!/bin/bash

LOG_FILE="/storage/emulated/0/Tasker/termux/zap-replay-api/instalacao/logs/permission-termux.txt"
LOG_DIR=$(dirname "$LOG_FILE")

mkdir -p "$LOG_DIR"
echo "" &gt; "$LOG_FILE"

mkdir -p ~/.termux &amp;&amp; echo "allow-external-apps=true" &gt;&gt; ~/.termux/termux.properties &amp;&amp; pkill -TERM termux

if [ -d "/data/data/com.termux/files/home/storage" ]; then
    echo "permission already granted" &gt; "$LOG_FILE"
    exit 0  # Sai do Termux se a permissão já foi concedida
else
    termux-setup-storage

    while [ ! -d "/data/data/com.termux/files/home/storage" ]; do
        sleep 1
    done

    echo "permission granted" &gt; "$LOG_FILE"
    exit 0  # Sai do Termux após a permissão ser concedida
fi</Str>
			<Int sr="arg1" val="0"/>
			<Str sr="arg2" ve="3"/>
			<Int sr="arg3" val="0"/>
		</Action>
		<Action sr="act6" ve="7">
			<code>20</code>
			<App sr="arg0">
				<appClass>com.termux.app.TermuxActivity</appClass>
				<appPkg>com.termux</appPkg>
				<label>Termux</label>
			</App>
			<Str sr="arg1" ve="3"/>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="1"/>
		</Action>
		<Action sr="act7" ve="7">
			<code>547</code>
			<Str sr="arg0" ve="3">%time</Str>
			<Str sr="arg1" ve="3">12</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act8" ve="7">
			<code>547</code>
			<label>adiciona * para não exibir os botões</label>
			<Str sr="arg0" ve="3">%buttons</Str>
			<Str sr="arg1" ve="3">*</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Action sr="act9" ve="7">
			<code>547</code>
			<label>cor da informação do texto na cena
003-EXIBIR-INFORMACOES-GERAIS [ zap-replay-api ] v(1.0)</label>
			<Str sr="arg0" ve="3">%color_text</Str>
			<Str sr="arg1" ve="3">#FF0000</Str>
			<Int sr="arg2" val="0"/>
			<Int sr="arg3" val="0"/>
			<Int sr="arg4" val="0"/>
			<Int sr="arg5" val="3"/>
			<Int sr="arg6" val="1"/>
		</Action>
		<Img sr="icn" ve="2">
			<fle>/storage/emulated/0/Tasker/termux/zap-replay-api/icones/user-allowed.png</fle>
		</Img>
	</Task>
</TaskerData>
